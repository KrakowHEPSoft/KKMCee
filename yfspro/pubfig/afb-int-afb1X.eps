%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.78 Copyright 1998 Radical Eye Software (www.radicaleye.com)
%%Title: afb-int-afb1X.dvi
%%BoundingBox: 150 -54 989 703
%%DocumentFonts: CMMI12 CMR17 CMSY10
%%EndComments
%DVIPSCommandLine: dvips -E afb-int-afb1X.dvi -o afb-int-afb1X.eps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 1999.05.25:2100
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 2 string 0 1 255{IE S dup 360 add 36 4 index cvrs cvn
put}for pop 65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N
/RMat[1 0 0 -1 0 0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley
X /rulex X V}B /V{}B /RV statusdict begin /product where{pop false[
(Display)(NeXT)(LaserWriter 16/600)]{dup length product length le{dup
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 2, 97/12/12
% For copying restrictions, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
def
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks 97 - Version 97, 93/05/07.
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    (P) 0 get /BoldPentagon put
  /Metrics 13 dict def
  Metrics begin
    /Bullet 1000 def
    /Circle 1000 def
    /BoldCircle 1000 def
    /SolidTriangle 1344 def
    /Triangle 1344 def
    /BoldTriangle 1344 def
    /SolidSquare 886 def
    /Square 886 def
    /BoldSquare 886 def
    /SolidPentagon 1093.2 def
    /Pentagon 1093.2 def
    /BoldPentagon 1093.2 def
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle { -550 -550 550 550 } def
    /BoldCircle /Circle load def
    /Bullet /Circle load def
    /Triangle { -571.5 -330 571.5 660 } def
    /BoldTriangle /Triangle load def
    /SolidTriangle /Triangle load def
    /Square { -450 -450 450 450 } def
    /BoldSquare /Square load def
    /SolidSquare /Square load def
    /Pentagon { -546.6 -465 546.6 574.7 } def
    /BoldPentagon /Pentagon load def
    /SolidPentagon /Pentagon load def
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath { 0 0 500 0 360 arc closepath } def
    /Bullet { 500 500 Adjust CirclePath fill } def
    /Circle { 500 500 Adjust CirclePath .9 .9 scale CirclePath eofill } def
    /BoldCircle { 500 500 Adjust CirclePath .8 .8 scale CirclePath eofill } def
    /BoldCircle { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath {
      0  660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath
    } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath {
      -450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
      closepath
    } def
    /SolidSquare { SquarePath fill } def
    /Square { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon { PentagonPath .78 .78 scale PentagonPath eofill } def
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
% END pst-dots.pro

%%EndProcSet
%%BeginProcSet: cernlogo.pro
%!PS CERNLOGO
%%BoundingBox: 48 46 474 472
/logocrn {
gsave
.18243 dup scale
.275 sub 153.85 mul exch .177 sub 153.85 mul exch
translate scale
3.5 setlinewidth
20 20 moveto  0 155 rlineto 155 0 rlineto
0 -155 rlineto -155 0 rlineto
closepath clip stroke
2.5 setlinewidth
105 94 53 0 360 arc stroke
157.86 90.22 moveto 162 148 lineto stroke
4.5 setlinewidth
37.86 98.97 moveto 48 46 lineto stroke
120.36 75.54 moveto 51 0 lineto stroke
131.03 121.61 moveto 167 0 lineto stroke
85 108 48 0 360 arc stroke
85 156 moveto 175 156 lineto stroke
newpath
50 94 moveto 64 89 lineto 64 123 lineto 50 126 lineto
1 setgray  fill
0 setgray 45.5 96.5 translate .48 .48 scale
 
newpath % C
43.5 40 moveto 26 58 0 47 0 23.5 curveto
0 0 26 -11 43.5 7 curveto
41 9 lineto 25 -5.5 9 4 9 23.5 curveto
9 43 25 52.5 41 38 curveto 43.5 40 lineto
closepath fill
 
newpath % E
75 47 moveto 66 46.7 59 46.7 49 47 curveto
50 30 50 16 49 0 curveto
59 .3 66 .3 75 0 curveto 75 3.5 lineto
58.5 3.5 lineto
57.5 10 57.5 15 57.5 21.5 curveto
70 21.5 lineto 70 24.5 lineto 57.5 24.5
lineto 57.5 31 57.5 37 58 43.5 curveto
75 43.5 lineto 75 47 lineto
closepath fill
 
newpath % R
83 47 moveto 84 30 84 16 83 0 curveto 92 0
lineto 91 16 91 30 92 43 curveto 100 43 lineto
107 43 110 40 110 32.5 curveto
110 29 107 24 103 24 curveto 94 24 lineto 110 0 lineto
119.5 0 lineto 105 20 lineto
115 20 118 27 118 32 curveto
118 41 115 47.5 104.5 47 curveto
98 46.7 92 46.7 83 47 curveto
closepath fill
 
newpath  % N
160 47 moveto 159.7 30 159.7 16 160 0 curveto
154 0 lineto 130 38 lineto 130 0 lineto 126 0 lineto
126.3 16 126.3 30 126 47 curveto 135 47 lineto
156 14 lineto 156 47 lineto 160 47 lineto
closepath fill
grestore  } def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin /rf{findfont dup length 1 add dict begin{1 index /FID ne 2
index /UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type /integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics /Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont /setfont cvx]cvx def}def /ObliqueSlant
{dup sin S cos div neg}B /SlantFont{4 index mul add}def /ExtendFont{3 -1
roll mul exch}def /ReEncodeFont{/Encoding exch def}def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro
%!
TeXDict begin /setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse /TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def /TeXcolorgrey{setgray}def /TeXcolorgray{
setgray}def /TeXcolorhsb{sethsbcolor}def /currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse /DC{exch dup userdict exch
known{pop pop}{X}ifelse}B /GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC /Goldenrod{0 0.10 0.84 0 setcmykcolor}
DC /Dandelion{0 0.29 0.84 0 setcmykcolor}DC /Apricot{0 0.32 0.52 0
setcmykcolor}DC /Peach{0 0.50 0.70 0 setcmykcolor}DC /Melon{0 0.46 0.50
0 setcmykcolor}DC /YellowOrange{0 0.42 1 0 setcmykcolor}DC /Orange{0
0.61 0.87 0 setcmykcolor}DC /BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC /RedOrange{0 0.77 0.87 0
setcmykcolor}DC /Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC /Maroon{0
0.87 0.68 0.32 setcmykcolor}DC /BrickRed{0 0.89 0.94 0.28 setcmykcolor}
DC /Red{0 1 1 0 setcmykcolor}DC /OrangeRed{0 1 0.50 0 setcmykcolor}DC
/RubineRed{0 1 0.13 0 setcmykcolor}DC /WildStrawberry{0 0.96 0.39 0
setcmykcolor}DC /Salmon{0 0.53 0.38 0 setcmykcolor}DC /CarnationPink{0
0.63 0 0 setcmykcolor}DC /Magenta{0 1 0 0 setcmykcolor}DC /VioletRed{0
0.81 0 0 setcmykcolor}DC /Rhodamine{0 0.82 0 0 setcmykcolor}DC /Mulberry
{0.34 0.90 0 0.02 setcmykcolor}DC /RedViolet{0.07 0.90 0 0.34
setcmykcolor}DC /Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC /Lavender{0
0.48 0 0 setcmykcolor}DC /Thistle{0.12 0.59 0 0 setcmykcolor}DC /Orchid{
0.32 0.64 0 0 setcmykcolor}DC /DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}
DC /Purple{0.45 0.86 0 0 setcmykcolor}DC /Plum{0.50 1 0 0 setcmykcolor}
DC /Violet{0.79 0.88 0 0 setcmykcolor}DC /RoyalPurple{0.75 0.90 0 0
setcmykcolor}DC /BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC /Periwinkle
{0.57 0.55 0 0 setcmykcolor}DC /CadetBlue{0.62 0.57 0.23 0 setcmykcolor}
DC /CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC /MidnightBlue{0.98 0.13
0 0.43 setcmykcolor}DC /NavyBlue{0.94 0.54 0 0 setcmykcolor}DC
/RoyalBlue{1 0.50 0 0 setcmykcolor}DC /Blue{1 1 0 0 setcmykcolor}DC
/Cerulean{0.94 0.11 0 0 setcmykcolor}DC /Cyan{1 0 0 0 setcmykcolor}DC
/ProcessBlue{0.96 0 0 0 setcmykcolor}DC /SkyBlue{0.62 0 0.12 0
setcmykcolor}DC /Turquoise{0.85 0 0.20 0 setcmykcolor}DC /TealBlue{0.86
0 0.34 0.02 setcmykcolor}DC /Aquamarine{0.82 0 0.30 0 setcmykcolor}DC
/BlueGreen{0.85 0 0.33 0 setcmykcolor}DC /Emerald{1 0 0.50 0
setcmykcolor}DC /JungleGreen{0.99 0 0.52 0 setcmykcolor}DC /SeaGreen{
0.69 0 0.50 0 setcmykcolor}DC /Green{1 0 1 0 setcmykcolor}DC
/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC /PineGreen{0.92 0 0.59
0.25 setcmykcolor}DC /LimeGreen{0.50 0 1 0 setcmykcolor}DC /YellowGreen{
0.44 0 0.74 0 setcmykcolor}DC /SpringGreen{0.26 0 0.76 0 setcmykcolor}
DC /OliveGreen{0.64 0 0.95 0.40 setcmykcolor}DC /RawSienna{0 0.72 1 0.45
setcmykcolor}DC /Sepia{0 0.83 1 0.70 setcmykcolor}DC /Brown{0 0.81 1
0.60 setcmykcolor}DC /Tan{0.14 0.42 0.56 0 setcmykcolor}DC /Gray{0 0 0
0.50 setcmykcolor}DC /Black{0 0 0 1 setcmykcolor}DC /White{0 0 0 0
setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /landplus90 true store
 
@fedspecial end
%%BeginFont: CMR17
%!PS-AdobeFont-1.1: CMR17 1.0
%%CreationDate: 1991 Aug 20 16:38:24

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR17 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 55 /seven put
dup 57 /nine put
dup 66 /B put
dup 67 /C put
dup 70 /F put
dup 77 /M put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 120 /x put
readonly def
/FontBBox{-33 -250 945 749}readonly def
/UniqueID 5000795 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b4486be356c29c3aec91ef17f5d31183b1e489f1fa
559a6693fbdd04d4f7e99886d8cb7cca13d4aa9ceb34a708af22e69ccef0e504
c3997075243585edf60b6447c8d01cffb04b6e3ddbaa7da5891286861322a795
e9d990fd56af2f5c2b35801a0b07874e4ac3170481d232e150443253c92a8b05
513d4a4154a99d91f629ccd30376500f5d16aaa9b203bad6350e4b19424c0e33
75f2949bc1927a6f6221252f8a96618e646aa1b0810753c98becc26b37837775
24bca72b818d314074c1c91f4e1f4148d3d703d12d179ee6970bd55d04aa9a9d
97f63f2c7dbd129ec2ed3ba5f8080270ea5854ea165dbcc061e2f47f1aaf0997
2ac9a689a2a9620b91b53f6b5092884372f5f7afca495f331138d85a97c5bb83
d8072dc88010fc89108b60bc06d4f93c722e8908d7ce3c1ea3c70e9e65edd769
7db17ce0e012ad37d4030f33d30a73fd655b7a2e572f3378ac933dd75082f2f1
68702be19bc60cef6bd5f0ada180d21408c04b7f7db9b6dbaefe09e809a80ddf
a5366d10930d3e68ca53e4721ff525853f4c784f2c2c3aa0129a34d9df00debc
ae4037e4c0fbdce3989f35964b4c07e7817b805bfe8c15f0c0ebf226cff606b6
2954f0f42dff8c214a6537ab666d25389c44db7b5866440bbfc137712bcdcc89
c68cd1adfd85648b1ed29bfb45a564b02172137feef782d604e0d7e1f1737c96
719cca9e4b9dfdc87e5999b886a15ac572183dfafd8c4176cd98430c204d4e7c
e989e1dea814d3088a21d9ae6c5fe7ab3d399b2982fd605e65509a8ed6790c21
a08a23e53dbe70f676d0e7b2e8261b092dc3415ac785635d133d309ac670c0c5
5868fd863ce42542ff1e83e1fa20a7a0e5d680dec3a22700f7f48d2582b8411d
757d17ab7530ceec0c6727c6a80f2493196b0b36e727bd665abc1f3ccb08b089
d3093085bad16dc2dfb4cdd6defceb3de4e30eb13575a3793bdbf5e1e57e856f
fb6864e3ae2faf56111001af6d502c6fbaa62662a49dad6e3200ae507c904d75
3d5b0386f4cff52f3d3dcd167614ad8ca1d21b127dc1d250c5c2f7ec8ed14fcd
b2b1799eea5d5c83abb6fa9da361620aedae19ccd3ba765b9147d1d65e9f4126
8e22dbd25543f2b76676c90a671ccb573d8e54e053c6d53a91ed0ba43c3c4934
3181585f36302bcf9379bd53183a9abd5e97a755c379d26bfa832094a5a937c2
65a91ddba7fc18492f9694f924264d8d98b2e55c8dc803581d1cc6aa40419ced
b86c0709e5ffe24fa3b15ef0e71ce7ed2c6b84a673be86aa238597afc93081dd
00d9a165c3cc661b6b5eb1df1c5aae85cb68b0d57b78a7bbc2ac38b4f006bcb5
545fee43d81a5b62c34d840dd95ee396ce2f122b554a169249c1bf0e443d6ccf
fb374e2096c0d642735b6477100985afdfd2bf660471f6acd88a6442107dbf28
65bacda0583f186b555d38b33325546a6d380288d13e4502b4fbf121c86ee7c2
55326e06fba5a42331e7689797dd04fde1f5143cc8d19ac19e2a78ca37c26e9f
61bc56861ab9b5a60a171431f374986c89dc961b1cab4f7d89116f6f1005ad69
a9fb5bf5c4014c3b3a7ed21e7df8f01310840fca8e1ba9ed65e959de1e41515b
2965f7af124dbdc47184fadc058cece09dd6e08139090a1e33cd946a0d0fb8cc
05b078f6a496aa2a12b2facba608c6837142a6221ce852d2d36054bd133b9be9
ae6756373754d7802a203cafb3c83322e92477d368d851247bae92d8434a5633
295368da78e7e72aa422bec5de24871890c29e66f32fe3990fca3063a96266d6
4ce46043910d2633925cbc371d726f5f9227b64c5b71305672a389644f7cba84
3b1a884afc34723417dc58c0b72d83cf269cc200d43df706e2f1377e8e45cb2f
b7bee872ac09801ae20f69a35100a10c7ae651d337d99ad48759bbc2e3248581
ef431c59f9f960f8fdecd2319ddfbdb1c1f0e7ff5c682a19fa77f3811d6434c6
302a0e21e4476e70a857f22404bc09ecda8b280e792b5874d4c4136971179c5b
037b2ff8ae0d0858959b6cb194ededca32004b978b4a55409f7e75153161adb0
0dc4839cac6e8587170c732685d2c42f19be3477882d8236f3ed9c237e7f46a5
7dfcf77a4e619e3709c8fe122757a5876c459fea57e55b2c6d7bac5a0baa0741
e87d693118452b2a90064ca2e6f4b0f908ba8dfc9c9186c15b6581d673b4d0fd
b4238b604af2978d9f5d0035a1df4a6586b9d3f293232742fdace4fda21df0c1
09ded34ee38e083a233f16f9c964edbc69d880282f681fc7ea102f0edba76f9e
49f822041186a1920e461e96c438b17015ba022128c2d41b43883fbd7ae8b6c3
e103c6d81b95f3b62a178a1e3cfe372152e4469c5eb496f6107244a822672145
80e1b07e6df3fe3f7741727baaf5da698045f6a0a3a995c56756b6ac75a3342f
ffd683ccb52eb50dc6be44449177dbb3a46a44a9ca61e02a880642a20df3e1f2
6e4d69821ab896f8c96c0983656751285361de0ec17612a6072490353625ebee
ae90ddbf9a94bd0ea6ec7028f07487fb664d8e2e8506e0b7632e9651ff0ec040
7cce1a8bde24a87ab3795317ec41ddf1d5a4114b8976ebbb6c12ba760a982904
7b167ca4595ca7eb256da2642731b4ecbea7bab0412ebb349de1ec9a3de09375
6234fce8f6a3bc25c0504f1c8da5b3cda65518c21c7b62db8c812129f58b0628
792c81bbff02430746a5d42b4616cfa10afd2eb847b3be4301b9b8c40f37b84e
2931eafbef09e453933e3dd5e0879a45af4b00d2e2fc18406bfdc341e90f6090
ea755fe452c745d3cf68604d78c383a17a2a8c187044ca267effb1b31bb5327f
86b842395c324871cf0b373c28c50420717dcd462232ce4448d0c8bef273627f
b4bf5db95dd8213d9eb2ff6362ed17ca960b887e97f218cfc5922150145f6105
02e5ccb21198d6dc5589b6dc80a0a9c1d790ff4aa13677461b35eebdc3abfc8d
166fa42eb5d8bb09d677020379cbf582db45878a0b10200af7cbb80ef512b88c
87450733deb91d7c9785ea61d15546504085803127e5540f5752f0aded9defd0
88b2d261642cf2bbad6c88a063d366a8efccfbab29310fc0ba993e6ab455012c
f42b091412d1e4b3dca0d919a39ddd7def8e2ffd409bc1d18415ead086a8ffcb
f27d7b00b497c1dc9b3c00ffa8fd6bb29e07b31fc62ff082d9f824882afc01cb
048f71ec5f16f1bc7133ac8b4a60b72f971057abcbf04feb6dc9af5c9fcfe4ea
4ee92f8c41aadd5d99bc30d771894a0f8579579a97eeedefda19d8922b357067
d80a0414a2eee5d3fd5652773bfde5f5a876328d7ec7eddb46215a0397e4eba2
cdd0d0b2b9368113be5268460e0784bf57e2a580a44fdeb7aa5963bdf44beb60
67e634ea27676447063731d8c6eecd991d056eef9d79eec734fd690351287acd
f35e2d1affa521b9ad46a1b6d46df4a0b68f5357310b61c60c62c0fbee3a208f
8a8ab3dbf79cfd2f016bc17dcd06f484732ed770a2d3bf17f45ef6ff74e930c2
4ebb3a6ba9a8f27afae6b3733637e3eb6b920ed57e5860ba0dd23386dd5e5df4
7351fd08cfa24966935854feabe7e7798615fee95f71631ab2338ecd1aae4fed
0ae1e6f2ca344871c178a28fadd10dc0aaa1bfb21ccc8c03ecac8cc8781c81c3
4a2c0cf4b15b2b489cd7d8f3b3a45d7a8f389310e743336e20c8f822d962532c
76ade609a573903553d467f760ce742389dbb5c07ec7dbf1e1093ae806cbf88c
19b3c25b22074f927876cda1ffc825ca434fc4fd65571959f8443e80ba0111ee
8b90784c5f0e3855a204f044aeb6ca0f935de66792b3b2972ca1af90a7f23993
6e34a11a3dbac97872f70c15427a829e6a74e859441fa74b01be71bf20075fa2
00885a07c7f64333b2137857707c4dcdb8ecd2b762704fadf564aa28e4113412
b6ad6bd35ecf39a03ae5a629d5118454ebf42a97609551ffa959f40f6b842da9
8c8880ac463c8f14810d55d1363591e581ddbc45dd48af8e6e3ac65cc1b4488f
dac4523684f39d8b1c1c7f500f355c09224ad07940d1630bd21e7036405f5942
2cf385ca6974fdff6b551f0c96ab0ff1f30a0be7f1f077a678dcf6ee5767cf02
849f34da1ac38ce07638f5716bed89e07bb969c07e50a2509cc02d876d55c8dd
b4bbb06e47745acc3afb20fbedd494280e1c343eca9811b02a69774e3bf5e5d9
02407e6913a54a6c0be831ca3be100a6a88bcfebabe8ad40f409cdbf88836701
aac0e8976c7a87836ae090ee14a8eab35f898d33393228006bf3d226fe4e5c16
3a160e7b4ede98e19060f3e5a58bae464ce7853ce0e1db735df4371cc1f35a36
a3d19b6e34edda983b37a549bb41a441407a898090cc97bd2a4f70765b92b147
7b3330151ad8b4c10f0a1ca16d70fc77d3cd52c8f154e456c31c1fe12d1b2ccd
eece3f947421439b3140b420b26665470d086ed6c3c9e03e7ca6114830e9acc8
25831cd8006d97de63acc91e1c494a3f81ac17b434a3eddd60c532f028b4af18
a3285337b2fd2819fb501f831320ab866915ea53562ae48b5b5a98845a62b43c
b3f5d03ceb9444127be877faabc622eacf3f950b07232df59a2d45ce922f795d
a0822208fd5b7accd24d80f90e26dbdb8da5da5baf6b89f88ea4780de5ae7786
3d867d868bd88fbaa22fb5bd3115487b2beea0127d648e94708823e2c1b50800
1dc24578e5fcd2e297bed7bd61fab011c5ea801d905fcd6061b375a5db9ef3fc
4a91fc6610cbb6980516a276963ce87ae3e80526a0bd72e95c73272110d7d6ee
29067a5a2338f842388534ce7d39543dbc21efb1ea93d0754983d19cdb8df963
76814749a9b2a0c90b6d84959fe0ccbf225eefd9063d7433580036ef132dbb96
5d94f9c4a4a50b7349cf54ee733aa7e8140470a7777bc6efe1b6219f43a7493e
1e267a3d7b1ce09a87aaa5175d8a529e06288e05130ae4a99d4a212e7dff788b
0b2b2da79dc4c87fbaad0572d08064aacf411830157ae6843a4dc0c96f734af8
b9de04bdaa484c338405d8df5e9c3d23fddf30de3d2c9971cf22f8a004e5e830
6842ceb02329727fe3bfa765ccc3b2dc5257831224beff35f5140039739afc38
e1ec7cab2c32efd276f1f38e2b12a4738102a6e4ff24eb85406b21cf43cdfc9e
66a1ca61a8add9e0303abef70d2738daaca0c136ed1e10aae1362cf9c0659068
994e0462d55acfc76d9ae37ab10c32692044609d8c88a5c938b93192306ac304
ebaefa3cfb242e317646d78590e4ad6c2b640c8de8b10be71b960db76c492aa4
297f6ccd20392e5397f976e9500a0723fb7c79d91e85178bec0815c4e6f3b77c
47e94b4ca97ca3573c77daf6a0210a12543b46f9d62d492f38ced20acc8064ba
eeb049a76fea681c1ba0e70a6b61f1c1c9c44956e73794083eee315a3d635ec4
703ae08d299d456b51bf7b1edf0c624bf1f12823c0cec9788a797847472a12c2
73e59c9c3a31cb232fcf56fdafa84d82502c9bdb8bed8de0be8fea72a578f789
32d148af37c75f1dc037d7d5febd07c10f1f8d0d0449f231698089478a4854b7
4a418b2fc669cefe7cc213ef8d3b3c2f27a218a031550a3666441da45914a40e
e9925cd4266068a0c6489ef61e2e663bb026f4b9bc08feaa71ca96c4783945f0
29eb38ae05e0c6dfe6f0602e0502cdb7f8860011119df1ad55e0a302c13532c9
a71bdce7d7c66f2be91471ba2854d2c76d8786f2403fa676a5cfc513d319f9fe
ee4595f10db1ec53ef372aab54807c7bad3ae7c88b0fda40067bf2b38aed1ce6
794f060d27c1cf464f25536590c8e46774e2e34617753051a2d1325a434c7a44
83c889b5f46b6bef62fa3fc4a6e3f79a320fb02c0fa3fa0c58af6b08aabc03e1
0ce40d3e972720c828523be32399c687b03efe4c248150228c74b90a25f1fafa
de8e6e55beba2c1ffcdabb042d2a3c908e9cb5af683b4f5e6d0d6c2aa888b8fc
65cdeb1c710318d0590c233638437a5abb373204393a1aa941b56df8f46de443
a9cf2e7328a6990b4388d38c5a0a2a6ee901b94a55f22f556c8147f6e64624c9
d48ef54c7ac638c97267e1ddc90bb96df7a9770d487dd02b7d78de7268fa8c8e
fa5005e3c9ef227a31ef18df9583acf69ce0988764f43b0cfc2ad0dcfbfcda0c
2d9c7f1fc65c01e8cf09777c6607935bba51e707a016d1b6009b29fabcb5649c
999569b499017ef41cddc0f0dd8678c20eaf5de1954053e0e08fd9631c50e906
a29957d4950e25ffc72ed3d84c34c0d5a5ebd78ea91e9c2ab3f280cd792eb131
a627572a839c76fbe6f04c4a75a3ae1b2b525b77c29d6f035161b1bde1dd30a1
ead1614ae107ab89791b38f6a7048f2f07c9de94153ad4c8ae918c49cfc2598b
595fe2f91fe774f75954126bd81dfd45219b6df8291b0f00257597af5efd9e9b
3736d0ba03deb048db7afb44404356e8538db3c3ce7a148106729034fcd8db91
b4f11b1da7e0d1e1c97108e563387a0dd03150ecfe
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.1: CMMI12 1.100
%%CreationDate: 1996 Jul 27 08:57:55

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 18 /theta put
dup 27 /sigma put
dup 58 /period put
dup 63 /star put
dup 65 /A put
readonly def
/FontBBox{-30 -250 1026 750}readonly def
/UniqueID 5087386 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311d725e830d1c76fba12e12486e989c98
74c2b527f0925722787027f44470d484262c360cdfdddf3657533a57bb16f730
48bfbbfcb73a650484015441fdc837add94ac8fbd2022e3ec8f115d4b4bb7b7f
15388f22cc6198efe768bd9fceb3446ee4a8dc27d6cd152485384ef5f59381ff
da43f2d20c8fb08aa27ab2015b774db10dacfdcd33e60f178c461553146ab427
bdd7da12534ba078ad3d780414930e72218b3075925ce1192f11fc8530fcd5e3
038e3a6a6db2dcfbae3b4653e7e02730314e02b54a1e296d2bef8a79411d9225
dad7b4e6d6f9cf0688b69ba21193bf1495807e7bcb09b7064e91fa0ded228e42
09aae407a7aaca60b1076299ac4abd23ef02f108765f0e3d91f92f3afbfded37
2fcf6e4b1416901517da8f2fb3c9fe7a87bcbe6fd36cd5b5823fdb74229036a6
3c3346a1093e6b1036902c1bf42fc317c80abf04020a47b344c36de42f05c490
a0ff44ab6d5249e9f552a8707bb7661e242644814001c8430ebd5e5f0b944ceb
666ee64359d663e355b2f17093a964139d17287f6ca6a024767eba4fe4873855
babe2f07b91560f68300b06dfe27264c163195d446980c35bca0b48f7806626a
e72636593a05ba403ce1c0f8b2cea3ecd586e90ac17d034ba4af708304f23131
3459fbbbfb97d4834d0395754ab3f22d6495d2144087d448616fa1ce27bc50d3
46543287e3860d99b433624119bb9920a2113604c0e260fd275ba55e0fd19c83
e19addc3baa1f32f6b7284038845ccee71a3311ddb17b84975f7a984bed7c6ec
2a06e5b335a763d081c6273f86a46632fd9141a27902074fc860df3a2eb59b89
774c767022dbb577e30da128bd7706a43af886d0c256b50fa968ef06776aac0b
a5387e9011eb2334c1f42c090f06a1125c207ea6324e87f46414050d88070346
7b9a6e4d2045feac295d15ca55b900da594770ed9843365bbc81bff2190b731b
8790385f7c313b4f64683aededa87b8c04da713754a05b7ad08b814b94b7be0a
5f20abfa50f767a51aa084b330955da5231cf6660a76c929e56afc63797a999f
757018dd00ca061ace2eae761c8e56838535e4f0dde8afaf899c418727ddfd13
eaf222f5fe24a32db0c6b4564481bc758f40969199c5af1c9156f875e62977c0
4cea12537832a592d0da8e516158ddadd69bf33e259c6bbe0e1e977021b0c034
22759a1e61a68b6cc0c8d4284aba058945cb6b1d5e1e56f54c30fb68bf71acc9
5480d792f8ebe2c566af1f62802161cad8339b24fec544750b7d5e7d3dbd0609
009ddd39907f69b71ccd8bb9cf87e70e8f9e87732f922c758d29cbe4d5cf1bf0
481749cdeb3b2adbf1b0f9829f48b98ba3d67f7213fc84372cfb2b1153b25c9b
8ef0cf5a63a69d9225647e2bbaa5ba759cfdc8c216b3311e45c1c18238761389
b3e168666b8bfc5db04b9e110308f2c6deb21aa0f719be38286bf9d63519cc59
0a6bfcd96b5c2048224d167dada82493b807f5945a821679ee819ceb18a13730
db1f001e55b5b79dacc8413584c38a9af81ab8fbfc59f575628a5411226b011b
e3894aac07ae04a93ec49d65789fe6ec11174500b78ab451f4ef99b31c105a32
a563bd146c23559e432fe98fb869434b7f351e26e1719425262ca5320c6e8305
a8338ec833096fa6ddcc1985128bc6123eea7db437968acd1159e85588de170a
ad371387f7cdd3e10b04a2a3004145fb42872f496f97cc729ef315c433a22d33
d3dccbc66964491f2964c258ba2da1bdea1326bbd430ea377b25ad61e6d8afab
97e4deb448dfc1f4409994bd6537e371c727b97c19485c9a66cfdfc64558f9cf
2ad92dddc8ba517a23471fe3cc027f70db68040a05c5c38f01548bbf608bb500
dc873d38c0edcfacc25655265aae1195b9adc782f71e2e68d523f0ff9fa4ae5e
4ae6f4062adad603a23e362a2ad90d74b61ba20aea6d15497d57024242c40573
f70b60d4a1c5e5fbfee8d27a950092c87d8ee012b8f230c6e8aff68e6cfc0e79
c3c6612d6751fb8c222efedd6881febb7627ed4dccacb3f1712243a8201bb79a
dca890d30ecdae5d4b5db0c625be9710ab920f50580a5d6e5e8394f468e1ac07
943f464f39db2ac8f27d8e4c835bf9ae8444c6f22a1ad46202b2cd0b3d949ba9
6a09c0bc8a6bde8b5147cd6424c18f0919ffdf777ef6c4e4a2cccf9f49258e62
efaf39d4dc4bb90870bb142c65bcddf26efae13be08191d2d17ad9689cbd1e32
8a1659837e498459ab497c01505bc155ea9d4dcbe47ec1d25fef674e5b85f2a7
47e8da4d68a5f24624227efb9e3080734110069f497f94a7c1780571de53
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 75 /K put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueID 5000820 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bac8ced9b09a275ab231194ecf829352
05826f4e975dcecec72b2cf3a18899ccde1fd935d09d813b096cc6b83cdf4f23
b9a60db41f9976ac333263c908dcefcdbd4c8402ed00a36e7487634d089fd45a
f4a38a56a4412c3b0baffaeb717bf0de9ffb7a8460bf475a6718b0c73c571145
d026957276530530a2fbefc6c8f67052788e6703bb5ee49533870bca1f113ad8
3750d597b842d8d96c423ba1273ddd32f3a54a912a443fcd44f7c3a6fe3956b0
aa1e784aaec6fce08dae0c76da9d0a3eba57b98a6233d9e9f0c3f00fcc6b2c6a
9ba23af389e6dfff4efec3de05d6276c6be417703ce508377f25960ef4ed83b4
9b01b873f3a639ce00f356229b6477a081933fef3bb80e2b9dffa7f75567b1fa
4d739b772f8d674e567534c6c5bbf1cf615372be20b18472f7aa58be8c216dbd
df81cc0a86b6d8318ca68fe22c8af13b54d7576fe4ca5a7af9005ea5cc4edb79
c0ab668e4fec4b7f5a9eb5f0e4c088cd818ecc4feb4b40ec8bd2981bf2336074
b64c430035b7d4eb41c5714c319ae0c7f0df32ef5dcc37f69a157a4a37fe0193
615747883307f99106bc25d5ccc325c092b2ae4539757ca96f6e319b3423d28b
0a25f4bd1b4e9d5ffff9559be4e195899307968920bb11d9d2c6b6aa58dc029b
9cc535b2dc302a75992345f0819b9eb303e4589b7f8debb417cd2eb13eef1a6b
8343a8676487043d9d4831dfcd17dd79fe08553a864d33b3d9bba1d47e732070
e1f9753ecf84ada94b718830a1b936577c0530a1ce0f323ecd4b1c59097c3d4c
f0c6d1371e4c5d302b10e4656f88746415749caf7eaad59031764683fba4895c
62d2714115b4f955cb1f1ef29cd00b7db91d03ecc39f1f7b2a3a105b6787ffab
242a043790b18bfed4936716fd375e37ac8ca77b8f540c9765e0d155f18da256
a3f9a60a80e01dff2c2bd660f22ab06eee203ae78db692dd7ea0a6c04b98ca31
6bf4ff419dd223b7e48dc3d3ebd249c1007455bd6aee154ee216646a9dbe79c4
34fb9cdae9adafc687211b6ec764038e2babd61a766fa2aeaec674f9af2e5d0b
27d4acc813ed48ae97a5826c8c755b7d691bb9f4ea733f7a8310497cf21e9816
717d5891d2e2f79723d98e82e69876ec811b5b3645
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
TeXDict begin 40258437 52099154 2074 600 600 (afb-int-afb1X.dvi)
@start /Fa 140[154 3[196 11[174 99[{}3 428.403 /CMR17
rf /Fb 228[199 27[{}1 357.117 /CMMI12 rf /Fc 135[173
3[126 5[182 276 3[89 7[164 97[{}6 357.117 /CMR17 rf /Fd
190[314 46[195 18[{}2 428.403 /CMMI12 rf /Fe 180[227
74[231{}2 297.54 /CMSY10 rf /Ff 139[105 1[105 2[136 152
1[74 2[74 3[121 3[136 19[253 6[179 2[199 195 8[136 1[136
1[136 136 136 136 136 136 48[{}20 297.54 /CMR17 rf /Fg
192[146 4[81 58[{}2 297.54 /CMMI12 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
0 0 bop Black Black 1501 245 5893 7 v 1501 6124 7 5880
v 7387 6124 V 1501 6131 5893 7 v 2974 6124 7 123 v 4444
6124 V 5914 6124 V 7384 6124 V 1505 6124 7 49 v 1652
6124 V 1799 6124 V 1946 6124 V 2093 6124 V 2239 6124
V 2386 6124 V 2533 6124 V 2680 6124 V 2827 6124 V 2974
6124 V 3121 6124 V 3268 6124 V 3415 6124 V 3562 6124
V 3709 6124 V 3856 6124 V 4003 6124 V 4150 6124 V 4297
6124 V 4444 6124 V 4591 6124 V 4738 6124 V 4885 6124
V 5032 6124 V 5179 6124 V 5326 6124 V 5473 6124 V 5620
6124 V 5767 6124 V 5914 6124 V 6061 6124 V 6208 6124
V 6355 6124 V 6502 6124 V 6649 6124 V 6796 6124 V 6943
6124 V 7090 6124 V 7237 6124 V 7384 6124 V 2974 367 7
123 v 4444 367 V 5914 367 V 7384 367 V 1505 294 7 49
v 1652 294 V 1799 294 V 1946 294 V 2093 294 V 2239 294
V 2386 294 V 2533 294 V 2680 294 V 2827 294 V 2974 294
V 3121 294 V 3268 294 V 3415 294 V 3562 294 V 3709 294
V 3856 294 V 4003 294 V 4150 294 V 4297 294 V 4444 294
V 4591 294 V 4738 294 V 4885 294 V 5032 294 V 5179 294
V 5326 294 V 5473 294 V 5620 294 V 5767 294 V 5914 294
V 6061 294 V 6208 294 V 6355 294 V 6502 294 V 6649 294
V 6796 294 V 6943 294 V 7090 294 V 7237 294 V 7384 294
V 2801 6438 a Fg(:)p Ff(25)1117 b Fg(:)p Ff(50)f Fg(:)p
Ff(75)1049 b(1)p Fg(:)p Ff(00)p 1508 6128 123 7 v 1508
5148 V 1508 4168 V 1508 3188 V 1508 2208 V 1508 1228
V 1508 248 V 1508 6128 49 7 v 1508 6030 V 1508 5932 V
1508 5834 V 1508 5736 V 1508 5638 V 1508 5540 V 1508
5442 V 1508 5344 V 1508 5246 V 1508 5148 V 1508 5050
V 1508 4952 V 1508 4854 V 1508 4756 V 1508 4658 V 1508
4560 V 1508 4462 V 1508 4364 V 1508 4266 V 1508 4168
V 1508 4070 V 1508 3972 V 1508 3874 V 1508 3776 V 1508
3678 V 1508 3580 V 1508 3482 V 1508 3384 V 1508 3286
V 1508 3188 V 1508 3090 V 1508 2992 V 1508 2894 V 1508
2796 V 1508 2698 V 1508 2600 V 1508 2502 V 1508 2404
V 1508 2306 V 1508 2208 V 1508 2110 V 1508 2012 V 1508
1914 V 1508 1816 V 1508 1718 V 1508 1620 V 1508 1522
V 1508 1424 V 1508 1326 V 1508 1228 V 1508 1130 V 1508
1032 V 1508 934 V 1508 836 V 1508 738 V 1508 640 V 1508
542 V 1508 444 V 1508 346 V 1508 248 V 7265 6128 123
7 v 7265 5148 V 7265 4168 V 7265 3188 V 7265 2208 V 7265
1228 V 7265 248 V 7338 6128 49 7 v 7338 6030 V 7338 5932
V 7338 5834 V 7338 5736 V 7338 5638 V 7338 5540 V 7338
5442 V 7338 5344 V 7338 5246 V 7338 5148 V 7338 5050
V 7338 4952 V 7338 4854 V 7338 4756 V 7338 4658 V 7338
4560 V 7338 4462 V 7338 4364 V 7338 4266 V 7338 4168
V 7338 4070 V 7338 3972 V 7338 3874 V 7338 3776 V 7338
3678 V 7338 3580 V 7338 3482 V 7338 3384 V 7338 3286
V 7338 3188 V 7338 3090 V 7338 2992 V 7338 2894 V 7338
2796 V 7338 2698 V 7338 2600 V 7338 2502 V 7338 2404
V 7338 2306 V 7338 2208 V 7338 2110 V 7338 2012 V 7338
1914 V 7338 1816 V 7338 1718 V 7338 1620 V 7338 1522
V 7338 1424 V 7338 1326 V 7338 1228 V 7338 1130 V 7338
1032 V 7338 934 V 7338 836 V 7338 738 V 7338 640 V 7338
542 V 7338 444 V 7338 346 V 7338 248 V 1508 4168 5880
7 v 664 6208 a Fe(\000)p Fg(:)p Ff(020)664 5228 y Fe(\000)p
Fg(:)p Ff(010)895 4260 y Fg(:)p Ff(000)895 3280 y Fg(:)p
Ff(010)895 2301 y Fg(:)p Ff(020)895 1321 y Fg(:)p Ff(030)895
341 y Fg(:)p Ff(040)p Blue 6 setlinewidth np 1655 4091
73 0.00 360.00 arc st 1652 4390 7 598 v 6 setlinewidth
np 1949 4052 73 0.00 360.00 arc st 1946 4262 7 422 v
6 setlinewidth np 2243 4012 73 0.00 360.00 arc st 2239
4184 7 353 v 6 setlinewidth np 2537 3939 73 0.00 360.00
arc st 2533 4096 7 304 v 6 setlinewidth np 2831 3885
73 0.00 360.00 arc st 2827 4022 7 275 v 6 setlinewidth
np 3125 3817 73 0.00 360.00 arc st 3121 3944 7 255 v
6 setlinewidth np 3419 3772 73 0.00 360.00 arc st 3415
3895 7 236 v 6 setlinewidth np 3713 3709 73 0.00 360.00
arc st 3709 3821 7 226 v 6 setlinewidth np 4007 3674
73 0.00 360.00 arc st 4003 3782 7 216 v 6 setlinewidth
np 4301 3635 73 0.00 360.00 arc st 4297 3738 7 206 v
6 setlinewidth np 4595 3591 73 0.00 360.00 arc st 4591
3689 7 196 v 6 setlinewidth np 4889 3542 73 0.00 360.00
arc st 4885 3640 V 6 setlinewidth np 5182 3493 73 0.00
360.00 arc st 5179 3586 7 187 v 6 setlinewidth np 5476
3439 73 0.00 360.00 arc st 5473 3532 V 6 setlinewidth
np 5770 3390 73 0.00 360.00 arc st 5767 3483 V 6 setlinewidth
np 6064 3336 73 0.00 360.00 arc st 6061 3429 7 177 v
6 setlinewidth np 6358 3278 73 0.00 360.00 arc st 6355
3366 V 6 setlinewidth np 6652 3185 73 0.00 360.00 arc
st 6649 3273 V 6 setlinewidth np 6946 3057 73 0.00 360.00
arc st 6943 3145 V 6 setlinewidth np 7240 2783 73 0.00
360.00 arc st 7237 2871 V Black Red 1582 4229 a Fg(?)p
1652 4458 7 598 v 1876 4248 a(?)p 1946 4390 7 422 v 148
w(?)p 2239 4355 7 353 v 2464 4209 a(?)p 2533 4292 7 304
v 148 w(?)p 2827 4277 7 275 v 3052 4160 a(?)p 3121 4218
7 255 v 3346 4121 a(?)p 3415 4169 7 236 v 3640 4057 a(?)p
3709 4101 7 226 v 3934 4023 a(?)p 4003 4061 7 216 v 4228
3969 a(?)p 4297 4003 7 206 v 4522 3910 a(?)p 4591 3939
7 196 v 4816 3832 a(?)p 4885 3861 V 5110 3744 a(?)p 5179
3768 7 187 v 5404 3660 a(?)p 5473 3684 V 5698 3587 a(?)p
5767 3611 V 5992 3484 a(?)p 6061 3508 7 177 v 6285 3366
a(?)p 6355 3385 V 6579 3219 a(?)p 6649 3238 V 6873 3038
a(?)p 6943 3052 V 7167 2651 a(?)p 7237 2665 V Black PineGreen
3103 599 a Fe(K)t(K)94 b Ff(Mon)-8 b(te)91 b(Carlo)g(1999)p
Black Blue 6 setlinewidth np 1995 1225 73 0.00 360.00
arc st 6 setlinewidth np 2243 1225 73 0.00 360.00 arc
st Black Blue 2488 1327 a Fd(A)2802 1171 y Fc(in)-9 b(t)2802
1513 y Ff(FB)p Black Red 3732 1294 a Fg(?)89 b(?)p Black
4520 1200 a Fb(\033)4732 1071 y Ff(in)-8 b(t)p 4468 1271
649 18 v 4468 1574 a Fb(\033)4680 1471 y Ff(tot)p Fg(:)3741
5864 y Fa(cos)72 b Fd(\022)4532 5928 y Fc(max)p Black
Black eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
