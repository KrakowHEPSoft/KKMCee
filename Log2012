==================================================================
Ponizej log roznych uwag na temat tego projektu KKMC
ktory tutaj jest w calosci, razem z kartotekami nie-publicznymi:
UWAGA!!! KK-all to absolutnie nie jest wersja CPC ani publiczna!!!

Kartoteka z mojego dysku (S.J), ktora sie zywiolowo zmieniala gdzies
do roku 2002go a potem jeszcze troche do 2005go.
Zostala odswiezona pod linux-em SLC5 w czerwcu 2012.
==================================================================



-------------------------------------------------------------------
May. 16th, 2013
From now on this KKMC-all is the MAIN branch of the KKMC project!!!
*******************************************************************
the other kkmc project in svn repository is obsolete,
except of ffdoan subdirectory there.


-------------------------------------------------------------------
May. 16th, 2013
System of Autotools is setup, see configure.in and Makefile.am files.
This is done in all directiories except YRprod.
The above allows to use kdevelop (under KDE 3.x).
Open in kdevelop from main menu Projects->New project,
and choose project type "fortran automake based".
Next in the Project Options -> Configure Options for fortran,
set compiler= gfortran,
and compiler options (FFLAGS) set as usual:
-O -g -fno-second-underscore -fno-automatic -ffixed-line-length-132 -fbackslash
kdevelop will remember the above settings in ProjectName.kdevelop file.



-------------------------------------------------------------------
May. 16th, 2013
System of custom makefiles is renamed, makefile->KKMmakefile,
hence "make -f KKMakefile" should be used in the commad line,
or define and use the following alias:
    alias kmake='make -f KKMakefile'

-------------------------------------------------------------------
feb. 26, 2013
PRD63 table III reproduced with 8M events (factor 2 missing from PRD)
A few plots (sig, AFB) reproduced as well.
See yfspro/pubfig/afb_prepare.f for instruction.

Also run at 10.52GeV was done:
  cd yfspro
  cp E189GeV/E10GeV.input E189GeV/E189GeV.input
  make E189GeV-start
  (cd yfspro/pubfig; make afb-sig2-ps)
two columns in afb-int-tab1.txp (for KORALZ) are eliminated by uncommenting
c      nColumn=4   ! KORALZ eliminated
in yfspro/afb-int.f


-------------------------------------------------------------------
feb. 25, 2013
yfspro.f corrected such that production works.
event in /momset/ filled in using KK2f getters (instead of hepevt common)


-------------------------------------------------------------------
feb. 24, 2013
Most important benchmark, table III in Phys.Rev. D63 is reproduced
from archive file ../E189GeV/E189GeV_PRD63.hst:
   cd yfspro/pubfig; make afb-sig-ps
Two source files are involved: afb_prepare.f and afb-int.f
See afb_prepare.f for more comments

------------------------------------------------------------------
feb. 8th 2013
RHadr: Makefiles updated, generator and plots are running OK.

------------------------------------------------------------------
feb. 8th 2013
MaMar: Updating Makefile's such that compilation and 'make test0-start' works, 
ROOT paths has to be adjusted manually in MaMar/Makefile.
Transfer from pythia event to PartLund in Robol corrected (long -> int )
Also (cd MaMar/Plots; make Plot1) produces all plots.

------------------------------------------------------------------
feb. 7th 2013
Plots in PRD63 (2000) were done mainly by pubfig/chi-mcan.f
using data from runs in E189, mix200... see also pubfig/chi-prepare.f
Failed attempt to recreated Fig.14 from PRD63 (why???):
       cp mix200/mix200_flat.input mix200/mix200.input
       make mix200-start   make mix200-stop
       make figbet-pubs
It is possible to reproduce it from archive ../mix200/pro.hst.flat.16M
Not reproducible??? Febr. 24

------------------------------------------------------------------
feb. 6th 2013

Plots in PR D63 (2000) were done mainly by 
yfspro/pubfig/chi-mcan.f using data from runs in E189, mix200... 
see also pubfig/chi-prepare.f
(only one plot in fig.14 there comes from profig)

Directory YRprod aggregates programs and data, which were used
to produce material (plots and tables) for CERN Yellow report 2000.

In yfspro/profig:
README file helps. Pricipal "make figbet-pubs" activated,
yfspro/profigflat_total.eps reproduced, Fig.14 in PRD63.
Other *.eps obtained as well, using old ../mix200/pro.hst.flat.16M


------------------------------------------------------------------
feb. 5th 2013

W KK-all sa dodatkowe kartoteki ktore nigdy nie byly
jednoznacznie publiczne, albo wogole publiczne:
np: Rhadr, 2brems, MaMar, NuProd, YRprod, yfstb, yfspro

Dokladniej, to prawdopodobnie niektore z tych podkartotek
byly byc moze udostepniane zaufanym doswiadczalnikom,
np NuProd Zbyszek udostepnial a ja Rhadr.
Czyli stniala tez taka "szara strefa".
NB. Bennie i Yost chyba nie mieli calego KK-all, ale nie
jestem pewien, byc moze zostawilem im jakas wersje na
lokalnym komputerze na UTK w roku 2000.

Publiczna wersj (CPC etc) zawsze byla tworzona przy pomocy
"make export" i zawiarala podzbior kartotek, z grubsza polowe.

Bottom line: KK-all nie nadaje sie wprost do dystrybucji,
nawet prywatnie, bez jakichs dodatkowych ustalen.

Uruchomilem wszystkie testy z pliku "HowToStart"
i zakomitowalem drobne poprawki w mekefile'ach.

------------------------------------------------------------------
feb. 5th 2013

The entire KK-all is put into svn repository at IFJ-PAN


******************************************************************
******************************************************************
                         APPEDIX
==================================================================
                Email to Scott June 5th 2012
                ============================

-----Original Message-----
From: Stanislaw Jadach [mailto:stanislaw.jadach@cern.ch] 
Sent: Tuesday, June 05, 2012 5:54 PM
To: Scott A. Yost
Cc: Ward, B.F.L.; Zbigniew Andrzej Was; Z.Was@cern.ch
Subject: ISR*Beamstr. generation in KKMC

Dear Scott,
I have looked into KKMC and below is what I see.
Best regards, staszek

***************
The Initialization of ISR is managed by
KarLud_Initialize (in KK2f/Karlud.f)
In case of beamstrahlung KarLud_Initialize calls BStra_Initialize (of
bornv/CStra.f)

Inside BStra_Initialize 3 instances of Foam are initilized, they
generate distribution of dimensionality 1,2,3 provided by
BornV_RhoFoamA, BornV_RhoFoamB, BornV_RhoFoamC located in bornv/BornF.f.

In the end of the initialization each of 3 Foam's provides an estimate
of the (crude) cross section, which is fed into special tool MBrB
managing 3 branches (Foams) in the MC.

The 3-fold split of the ISR*Beamstrahlung distribution is due to
complidated parametrization of the beamstrahlung distribution and
probably not needed for QCD PDFs.

Lets examine FoamC with BornV_RhoFoamC distribution:
Inside BornV_RhoFoamC the 3-dim. distribution is defined in
      Rho = Rho *SF12
      BornV_RhoFoamC = Rho*BornV_Crude(m_vv)/(1d0-m_vv) in lines
429-432 of BornV.f
SF12(z1,z2) is 2dimensional beanstr. distrib. defined above, while Rho
insludes also jacobian due to simple mapping done below line ELSEIF(
Option .EQ. 2 ),  while Born crude xsection BornV_Crude(vv) collects
distributions from various final state flavours, QCD overall corrections
etc.
(The contributions from various flavours KF are recorded in MBrA object
for the purpose of KF generation) NB. BornV_Crude uses
BornV_Differential, which exploits BornV_Simple, lowest order Born used
at this stage.

***************
The Generation of ISR is done by KarLud_Make (in KK2f/Karlud.f) which
invokes BStra_Make (of bornv/CStra.f), which calls:
CALL FoamC_MakeEvent(BornV_RhoFoamC).
Again BornV_RhoFoamC calculates/generates 3-dim. distribution in z1, z2
of beamstrahlung and z=1-v of QED ISR.

The choice between FoamA,B,C is done randonmy by
      CALL MBrB_GenKF(Itype, Wt_KF)
in BStra_Make according to probabilites predefind in the initialization
(see above).
NB. MBrB module also manages maximum weight<1 for the final rejection in
case we want WT=1 events.
The above 3-fold branching is prbably not necessary for QCD PDFs, only
one branch (FoamcC ???) should be preserved.

***************
The final MC weight is calculated after FSR is generated
         CALL KarFin_Make(xxf,amfi1,amfi2,charg2,wt_FSR)
in KK2f.f, for example in the following call
         CALL GPS_Make                   !<-- CEEX    interfer. ON



========================================================================
Phone: +48.12.6628.155
Address:  IFJ-PAN, ul. Radzikowskiego 152,  31-342 Krakow, Poland
http://jadach.web.cern.ch/jadach/
========================================================================

