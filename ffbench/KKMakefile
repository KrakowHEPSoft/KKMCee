#===============================================================================
#  MASTER MAKEFILE in subdirectory ffbench
#  This directory belongs to public distribution, CPC etc.
#===============================================================================
#  MANDATORY Update/creation of makefile's everywhere, compilation flags etc.
#       make -f KKMakefile makflag
#       make -f KKMakefile makprod
MAKE    = make -f KKMakefile
#  FFLAGS, F77, AR has to be the same as in ffbench/KKMakefile
#-------------------------------------------------------------------------------
#   make -f KKMakefile demo-start   <==  basic demonstration program
#   make -f KKMakefile Mu-start
#   make -f KKMakefile Tau-start
#   make -f KKMakefile Inclusive-start
#   make -f KKMakefile figinc-pdf    <== simple graphics
#   make -f KKMakefile Test-start
#   make -f KKMakefile Beast-start   <-- Beamsstrahlung
#   make -f KKMakefile demo_R-start  <-- needs CERNLIB+PAWLIB!!!
#===============================================================================
#  TWO WAYS OF ORGANIZING ELECTROWEAK LIBRARY INITIALIZATION.
#  If you want to READ EW formfactor from the disk (Dizet NOT linked) then
#  activate below   EXT_LIBRARY = EXT_LIBRARYa
#-------------------------------------------------------------------------------
############
all:	demo-start
########### ALPHA  flags ###########
#FFLAGS  =  -O -w -c -static
#FFLAGS  =  -extend_source -qfixed=132 -qextname -O  -C -qextchk
########### collection of HP  flags ###########
### +es for 100 or more columns, +B for backslash in strings, +K  for global SAVE
#FFLAGS  =  -K +es +B -O
########### collection of IBM  flags ###########
# IBM options: fixed=100 for 100 or more columns,
#              qextname for C-style external names with underscore at the end
#FFLAGS  =  -qfixed=132 -qextname -O -C -qextchk
#FFLAGS  =  -qfixed=132 -qextname -g -C -qextchk -qinitauto=FF -qflttrap=overflow:underflow:zerodivide:invalid:enable -bloadmap:lmap
#FFLAGS  =  -qfixed=132 -qextname  -C -qextchk -O
########### linux flags ###########
# forbid underscore completely       -fno-second-underscore
# forbid double underscore only      -fno-underscoring
#FFLAGS  =  -fno-automatic -ffixed-line-length-132 -fbackslash -C -O
# sometime under linux g77 has to be used
F77     = gfortran
FFLAGS  = -O -g -fno-second-underscore -fno-automatic -ffixed-line-length-132 -fbackslash
LD      = $(F77)
AR      = ar cru
LDFLAGS = -lstdc++
CC	= g++
#-----------------------------------------------------------------------
SRCLIST= "../KK2f ../glibk ../jetset ../bornv "
#-----------------------------------------------------------------------
###########
EXT_LIB1  = ../KK2f/KK2f.a
EXT_SRC1  = ../KK2f/*.f		../KK2f/*.h
EXT_LIB2  = ../glibk/glibk.a
EXT_SRC2  = ../glibk/*.f	../glibk/*.h
EXT_LIB3  = ../jetset/jetset.a
EXT_SRC3  = ../jetset/*.f
EXT_LIB4a = ../bornv/bornv-tabs.a
EXT_LIB4d = ../bornv/bornv-dizet.a
EXT_SRC4  = ../bornv/*.f	../bornv/*.h
EXT_LIB5  = ../tauola/glib.a
EXT_SRC5  = ../tauola/*.f
EXT_LIB6  = ../photos/glib.a
EXT_SRC6  = ../photos/photos.f	
EXT_LIB7  = ../dizet/dizet.a
EXT_SRC7  = ../dizet/*.f	../dizet/*.h	../bornv/*.h
###########
.f.o:
	$(F77) $(FFLAGS) -c $<
$(EXT_LIB1): $(EXT_SRC1)
	cd ../KK2f;   $(MAKE)
$(EXT_LIB2): $(EXT_SRC2)
	cd ../glibk;  $(MAKE)
$(EXT_LIB3): $(EXT_SRC3)
	cd ../jetset; $(MAKE)
$(EXT_LIB4a): $(EXT_SRC4)
	cd ../bornv;  $(MAKE)
$(EXT_LIB4d): $(EXT_SRC4)
	cd ../bornv;  $(MAKE)
$(EXT_LIB5): $(EXT_SRC5)
	cd ../tauola; $(MAKE)
$(EXT_LIB6): $(EXT_SRC6)
	cd ../photos; $(MAKE)
$(EXT_LIB7): $(EXT_SRC7)
	cd ../dizet;  $(MAKE)
#===================================================================================================
#### Make your own choice of the two choices below, see comments on two EW modes above
EXT_LIBRARYa = $(EXT_LIB1) $(EXT_LIB2) $(EXT_LIB3) $(EXT_LIB4a) $(EXT_LIB5) $(EXT_LIB6)
EXT_LIBRARYd = $(EXT_LIB1) $(EXT_LIB2) $(EXT_LIB3) $(EXT_LIB4d) $(EXT_LIB5) $(EXT_LIB6) $(EXT_LIB7)
# Note that benchmark ouputs are for EXT_LIBRARYd
EXT_LIBRARY = $(EXT_LIBRARYa)   # Dizet is NOT linked, look-up tables from disk are used
#EXT_LIBRARY = $(EXT_LIBRARYd)   # Dizet is linked, tables created in-flight during initialization
#-----------------------------------------------------------------------
# Link procedure
COMMAND1 = ProdMC.exe
OBJECTS1 = ProdMC.o
$(COMMAND1):                   $(OBJECTS1) $(EXT_LIBRARY)
	$(LD) -o $@ $(LDFLAGS) $(OBJECTS1) $(EXT_LIBRARY) -lstdc++
#-----------------------------------------------------------------------
COMMAND2 = demo.exe
OBJECTS2 = demo.o
$(COMMAND2):                   $(OBJECTS2) $(EXT_LIBRARY)
	$(LD) -o $@ $(LDFLAGS) $(OBJECTS2) $(EXT_LIBRARY) -lstdc++ 
#-----------------------------------------------------------------------
COMMAND3 = demo_R.exe
OBJECTS3 = demo_R.o
$(COMMAND3):                   $(OBJECTS3) $(EXT_LIBRARY)
	$(LD) -o $@ $(LDFLAGS) $(OBJECTS3) $(EXT_LIBRARY) `cernlib pawlib`
#-----------------------------------------------------------------------
demo-start:	$(COMMAND2)
	(cd ./demo;  $(MAKE) start )
#-----------------------------------------------------------------------
demo_R-start:	$(COMMAND3)
	(cd ./demo_R;  $(MAKE) start )
#-----------------------------------------------------------------------
figinc-pdf:
	(cd Plots; $(MAKE) figinc-pdf)
#-----------------------------------------------------------------------
Test-start:	$(COMMAND1)
	(cd ./Test;  $(MAKE) start )
Test-stop:
	(cd ./Test;  $(MAKE) stop )
Test-cont:
	(cd ./Test;  $(MAKE) cont )
#-----------------------------------------------------------------------
Mu-start:	$(COMMAND1)
	(cd ./Mu;  $(MAKE) start )
Mu-backg:	$(COMMAND1)
	(cd ./Mu;  $(MAKE) backg )
Mu-stop:
	(cd ./Mu;  $(MAKE) stop )
Mu-cont:
	(cd ./Mu;  $(MAKE) cont )
Mu-plot:
	(cd ./Plots; $(MAKE) figmix)
Mu-start-debug:	$(COMMAND1)
	(cd ./Mu;  $(MAKE) start-debug )
Mu-cont-debug:	$(COMMAND1)
	(cp Mu/pro.hst.382 Mu/pro.hst )
	(cp Mu/semaphore.382 Mu/semaphore )
	(cd ./Mu;  $(MAKE) cont )
#-----------------------------------------------------------------------
Tau-start:	$(COMMAND1)
	(cd ./Tau;  $(MAKE) start )
Tau-stop:
	(cd ./Tau;  $(MAKE) stop )
Tau-start-debug:	$(COMMAND1)
	(cd ./Tau;  $(MAKE) start-debug )
Tau-cont-debug:	$(COMMAND1)
	(cp Tau/pro.hst.110 Tau/pro.hst )
	(cp Tau/semaphore.110 Tau/semaphore )
	(cd ./Tau;  $(MAKE) cont-debug )
#-----------------------------------------------------------------------
Down-start:	$(COMMAND1)
	(cd ./Down;  $(MAKE) start )
Down-start-debug:	$(COMMAND1)
	(cd ./Down;  $(MAKE) start-debug )
#-----------------------------------------------------------------------
Up-start:	$(COMMAND1)
	(cd ./Up;  $(MAKE) start )
#-----------------------------------------------------------------------
Botom-start:	$(COMMAND1)
	(cd ./Botom;  $(MAKE) start )
#-----------------------------------------------------------------------
Inclusive-start:	$(COMMAND1)
	(cd ./Inclusive;  $(MAKE) start )
Inclusive-start-debug:	$(COMMAND1)
	(cd ./Inclusive;  $(MAKE) start-debug )
Inclusive-cont-debug:	$(COMMAND1)
	(cp Inclusive/pro.hst.9643 Inclusive/pro.hst )
	(cp Inclusive/semaphore.9643 Inclusive/semaphore )
	(cd ./Inclusive; $(MAKE) cont-debug )
#-----------------------------------------------------------------------
Beast-start:	$(COMMAND1)
	(cd ./Beast;  $(MAKE) start )
Beast-start-debug:	$(COMMAND1)
	(cd ./Beast;  $(MAKE) start-debug )
#-----------------------------------------------------------------------
#                  update production makefiles
#-----------------------------------------------------------------------
makprod:
	(sed -e 's#<main>#demo.exe#'   -e 's#<dset>#demo#'  -e 's#<class>#long#' ./makefile.production > ./demo/KKMakefile)
	(sed -e 's#<main>#ProdMC.exe#' -e 's#<dset>#Test#'  -e 's#<class>#long#' ./makefile.production > ./Test/KKMakefile)
	(sed -e 's#<main>#ProdMC.exe#' -e 's#<dset>#Mu#'    -e 's#<class>#long#' ./makefile.production > ./Mu/KKMakefile)
	(sed -e 's#<main>#ProdMC.exe#' -e 's#<dset>#Tau#'   -e 's#<class>#long#' ./makefile.production > ./Tau/KKMakefile)
	(sed -e 's#<main>#ProdMC.exe#' -e 's#<dset>#Down#'  -e 's#<class>#long#' ./makefile.production > ./Down/KKMakefile)
	(sed -e 's#<main>#ProdMC.exe#' -e 's#<dset>#Up#'    -e 's#<class>#long#' ./makefile.production > ./Up/KKMakefile)
	(sed -e 's#<main>#ProdMC.exe#' -e 's#<dset>#Botom#' -e 's#<class>#long#' ./makefile.production > ./Botom/KKMakefile)
	(sed -e 's#<main>#ProdMC.exe#' -e 's#<dset>#Inclusive#' -e 's#<class>#long#' ./makefile.production > ./Inclusive/KKMakefile)
	(sed -e 's#<main>#ProdMC.exe#' -e 's#<dset>#Beast#' -e 's#<class>#long#' ./makefile.production > ./Beast/KKMakefile)
	(sed -e 's#<main>#ProdMC.exe#' -e 's#<dset>#demo_R#' -e 's#<class>#long#' ./makefile.production > ./demo_R/KKMakefile)
#=============================================================================
# Update fortran compilation flags
#--- external dirs
makflag-ext:
	(cd ../KK2f;   sed -e 's#<FFLAGS>#$(FFLAGS)#' -e 's#<F77>#$(F77)#' -e 's#<AR>#$(AR)#' makefile.templ > KKMakefile)
	(cd ../jetset; sed -e 's#<FFLAGS>#$(FFLAGS)#' -e 's#<F77>#$(F77)#' -e 's#<AR>#$(AR)#' makefile.templ > KKMakefile)
	(cd ../tauola; sed -e 's#<FFLAGS>#$(FFLAGS)#' -e 's#<F77>#$(F77)#' -e 's#<AR>#$(AR)#' makefile.templ > KKMakefile)
	(cd ../photos; sed -e 's#<FFLAGS>#$(FFLAGS)#' -e 's#<F77>#$(F77)#' -e 's#<AR>#$(AR)#' makefile.templ > KKMakefile)
	(cd ../glibk;  sed -e 's#<FFLAGS>#$(FFLAGS)#' -e 's#<F77>#$(F77)#' -e 's#<AR>#$(AR)#' makefile.templ > KKMakefile)
	(cd ../dizet;  sed -e 's#<FFLAGS>#$(FFLAGS)#' -e 's#<F77>#$(F77)#' -e 's#<AR>#$(AR)#' makefile.templ > KKMakefile)
	(cd ../bornv;  sed -e 's#<FFLAGS>#$(FFLAGS)#' -e 's#<F77>#$(F77)#' -e 's#<AR>#$(AR)#' makefile.templ > KKMakefile)
	(cd ../bornv/tabtest; sed -e 's#<FFLAGS>#$(FFLAGS)#' -e 's#<F77>#$(F77)#' -e 's#<AR>#$(AR)#' makefile.templ > KKMakefile)
	(cd ../KKsem;  sed -e 's#<FFLAGS>#$(FFLAGS)#' -e 's#<F77>#$(F77)#' -e 's#<AR>#$(AR)#' makefile.templ > KKMakefile)
#--- local dirs
makflag: makflag-ext
	(cd ./Plots;   sed -e 's#<FFLAGS>#$(FFLAGS)#' -e 's#<F77>#$(F77)#' -e 's#<AR>#$(AR)#' makefile.templ > KKMakefile)
#=============================================================================
link-dizet-6.21:
	(cd ..; rm -f dizet;             ln -s ./dizet-6.21 ./dizet )
link-dizet-6.42-cpc:
	(cd ..; rm -f dizet;             ln -s ./dizet-6.42-cpc ./dizet )
link-dizet-6.42:
	(cd ..; rm -f dizet;             ln -s ./dizet-6.42 ./dizet )
link-dizet-6.45:
	(cd ..; rm -f ./dizet;           ln -s ./dizet-6.45 ./dizet )
#======================
# NOTE: additional input params for EW librarry are in ../dizet/input.all 
EWtables:
	(cd ../dizet; $(MAKE) table.all )
#-----------------------------------------------------------------------
clean:                                                     
	rm -f *.o *.a *~ *.exe
	(cd ./Plots;	$(MAKE) clean)
clean-dizet:
	(cd ../dizet-6.21; $(MAKE) clean)
	(cd ../dizet-6.42-cpc; $(MAKE) clean)
	(cd ../dizet-6.42; $(MAKE) clean)
	(cd ../dizet-6.45; $(MAKE) clean)
Clean:
	rm -f *.o *.a *~ *.exe DEMO ProdMC
	(cd ./Plots;	  $(MAKE) clean)
	(cd ../glibk;	  $(MAKE) clean)
	(cd ../KK2f;	  $(MAKE) clean)
	(cd ../jetset;	$(MAKE) clean)
	(cd ../tauola;	$(MAKE) clean)
	(cd ../photos;	$(MAKE) clean)
	(cd ../bornv;	  $(MAKE) clean)
	(cd ../dizet;	  $(MAKE) clean)
	(cd ../bornv/tabtest; $(MAKE) clean)
	(cd ../KKsem;	  $(MAKE) clean)
# this clean managed by autotools!
	(cd ../MaMar;	  make clean)
#-----------------------------------------------------------------------
gtar: Clean
	(cd ../../; gtar -cvzf KK2f-all.tar.gz  KK2f-all )
	(cd ../../; chmod -w KK2f-all.tar.gz)
#-----------------------------------------------------------------------
