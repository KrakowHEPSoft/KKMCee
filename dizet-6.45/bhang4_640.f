************************************************************************
*               STANDARD BHANG LIBRARY FOR ZFITTER                     *
************************************************************************
*
       SUBROUTINE BHATOT
*      -----------------
     &                 (IAFBI,IFITI
     &                 ,EBEAM,THEMIN,THEMAX,ACOL,EMIN1,EMIN2
     &                 ,AMZI,GAMZI,GAMEEI,ROI,GVI,GAI,RO2I,GV2I,GA2I
     &                 ,CROSB,CROSQ,ASYMB,ASYMQ)
*======================================================================
*- ROUTINE FOR FORWARD-BACKWARD ASYMMETRY AND CROSS SECTION CALCULATION
*- BY INTEGRATEGRATION OF ANGULAR DISTRIBUTION (BHAFUN) FROM THEMIN TO
*- THEMAX
*- SEE COMMENTS IN BHAFUN FUNCTION
       IMPLICIT COMPLEX*16(X)
       IMPLICIT REAL*8(A-H,O-W,Y-Z)
       COMMON /BHAFIT/ AMZ,GAMZ,GAMEE,RO,GV,GA,RO2,GV2,GA2
       COMMON /BHAFLG/ IFIT,IPART,IAFB,IFINAL,INTERF,IPHOT2
       COMMON /BHALUN/ LUN
       EXTERNAL BHAFUI
*
       IFIT=IFITI
       IAFB=IAFBI
*- INITIALIZATION ! (CALL ONCE)
*
*- Filling of COMMON /BHAFIT/ 
*
       AMZ  = AMZI
       GAMZ = GAMZI
       GAMEE= GAMEEI
       RO   = ROI
       GV   = GVI
       GA   = GAI
       RO2  = RO2I
       GV2  = GV2I
       GA2  = GA2I
*
*- SETUP OF FUNCTIONS OF EBEAM AND FUNCTIONS OF PARAMETERS
       CALL BHASET (EBEAM)
       CALL BHACOU (-1)
       CALL BHABBB (THEMIN,CROSBF)
       CALL BHABBB (THEMAX,CRSBBM)
       CROSBB=-CRSBBM
       CROSB=CROSBF+CROSBB
*- SETUP OF CUT-INFLUENCED VARIABLES
       CALL BHACUT (ACOL,EMIN1,EMIN2)
       NONSYM=0
       IF (THEMIN+THEMAX.NE.180D0) NONSYM=1
       IF (NONSYM.EQ.1.AND.IAFB.EQ.1) THEN
         WRITE(LUN,*) 'WARNING: ASYMMETRY IS REQUESTED BY ANGULAR '
         WRITE(LUN,*) 'LIMITS NON SYMMETRICAL ===> ASYM=0D0'
         ASYMQ=0D0
       END IF
       IF (NONSYM.EQ.1.OR.IAFB.EQ.0) THEN
         REPS=1D-18
         AEPS=1D-4*CROSB
         HANG=0.1*(THEMAX-THEMIN)
         CALL SIMPT
     +   (THEMIN,THEMAX,HANG,REPS,AEPS,BHAFUI,THET,CROSQ,AIHH,AIHA)
         CROSQ=CROSB+CROSQ
       ELSE
         HANG=0.1*(90D0-THEMIN)
         REPS=1D-18
         AEPSF=1D-4*ABS(CROSBF)
         CALL SIMPT
     +   (THEMIN,90D0,HANG,REPS,AEPSF,BHAFUI,THET,CROSQF,AIHH,AIHA)
         AEPSB=1D-4*ABS(CROSBB)
         CALL SIMPT
     +   (90D0,THEMAX,HANG,REPS,AEPSB,BHAFUI,THET,CROSQB,AIHH,AIHA)
         CROSQ=CROSQF+CROSQB
         CROSQ=CROSQ+CROSB
         IF (CROSB.NE.0D0) THEN
           ASYMB=(CROSBF-CROSBB)/CROSB
         ELSE
           ASYMB=0D0
         END IF
         IF (CROSQ.NE.0D0) THEN
           ASYMQ=(CROSQF+CROSBF-CROSQB-CROSBB)/CROSQ
         ELSE
           ASYMQ=0D0
           WRITE(LUN,*) 'TOTAL CROSS-SECTION EQUAL TO ZERO'
         END IF
       END IF
*
       END
 
       SUBROUTINE BHADIF
*      -----------------
     &                 (IFITI
     &                 ,EBEAM,THET,ACOL,EMIN1,EMIN2
     &                 ,AMZI,GAMZI,GAMEEI,ROI,GVI,GAI,RO2I,GV2I,GA2I
     &                 ,CRSBDF,CRSQDF)
*======================================================================
*- ROUTINE FOR CALCULATION OF DIFFERENTIAL OVER SCATTERING ANGLE
*- CROSS SECTION CALCULATION
*- SEE COMMENTS IN BHAFUN FUNCTION
       IMPLICIT COMPLEX*16(X)
       IMPLICIT REAL*8(A-H,O-W,Y-Z)
       COMMON /BHAFIT/ AMZ,GAMZ,GAMEE,RO,GV,GA,RO2,GV2,GA2
       COMMON /BHAFLG/ IFIT,IPART,IAFB,IFINAL,INTERF,IPHOT2
       COMMON /BHACS / CSBDIF,CSQDIF
       EXTERNAL BHAFUN
*
       IFIT=IFITI
*
       AMZ  = AMZI
       GAMZ = GAMZI
       GAMEE= GAMEEI
       RO   = ROI
       GV   = GVI
       GA   = GAI
       RO2  = RO2I
       GV2  = GV2I
       GA2  = GA2I
*
*- SETUP OF FUNCTIONS OF EBEAM AND FUNCTIONS OF PARAMETERS
       CALL BHASET (EBEAM)
*- SETUP OF CUT-INFLUENCED VARIABLES
       CALL BHACUT (ACOL,EMIN1,EMIN2)
       DCROS=BHAFUN(THET)
       CRSQDF=CSQDIF
       CRSBDF=CSBDIF
*
       END
 
       SUBROUTINE BHAINI(JPART,JFINAL,JNTERF,JPHOT2)
*====================================================================
*- BHAINI - INITIALIZATION ROUTINE, SHOLD BE CALLED BEFORE
*- BHACRS AND BHAASY
       IMPLICIT COMPLEX*16(X)
       IMPLICIT REAL*8(A-H,O-W,Y-Z)
       COMMON /BHAELE/ AME,AME2,QE,QEM,QE2,COMB1,COMB2,COMB3
       COMMON /BHANUM/ PI,F1,AL2,ZET3
       COMMON /BHAPHY/ ALFAI,AL1PI,ALQE2,GFERMI,CSIGNB
       COMMON /BHALUN/ LUN
       COMMON /BHAFLG/ IFIT,IPART,IAFB,IFINAL,INTERF,IPHOT2
*- LOGICAL NUMBER OF OUTPUT DEVICE
       LUN = 6
*
*- CHOOSE PART OF X-SECTION (S-CHANNEL, T-CHANNEL
*  BOTH WITH INTERFERENCE WITH IPART FLAG)
*
       IPART=JPART
       IF (IPART.NE.1.AND.IPART.NE.2.AND.IPART.NE.3) IPART=0
*
       IF (IPART.EQ.0) THEN
CB       WRITE (LUN,*)
CB   &'E+E- --> E+E- (BHABHA SCATTERING, S+T CHANNELS)   (IPART=0)'
       ELSE IF (IPART.EQ.1) THEN
CB       WRITE (LUN,*)
CB   &'E+E- --> E+E- (S-CHANNEL ONLY)                    (IPART=1)'
       ELSE IF (IPART.EQ.2) THEN
CB       WRITE (LUN,*)
CB   &'E+E- --> E+E- (T-CHANNEL ONLY)                    (IPART=2)'
       ELSE
CB       WRITE (LUN,*)
CB   &'E+E- --> E+E- (S-T INTERFERENCE)                  (IPART=3)'
       END IF
*
*- USED ONLY FOR TESTS
       IFINAL=JFINAL
       INTERF=JNTERF
       IPHOT2=JPHOT2
*
*- BAHELE: MASS, CHARGE & INITIAL POLARIZATIONS
       AME=.510 999 06 D-3
       AME2=AME**2
       QE=-1.D0
       QEM=ABS(QE)
       QE2=QE**2
       ALAMP=0.D0
       ALAMM=0.D0
       COMB3=ALAMP*ALAMM
       COMB2=ALAMP-ALAMM
       COMB1=1-COMB3
*- BHANUM
       PI=ATAN(1D0)*4
       F1=PI**2/6
       AL2=LOG(2.D0)
       ZET3=1.202 056 903 130 49D0
*- BHAPHY (FROM REVIEW OF PARTICLE PROPERTIES PHYS. LETT. B V204 1988)
       GFERMI=1.166 388 D-5
       ALFAI=137.035 989 5 D0
       AL1PI=1.D0/(PI*ALFAI)
       ALQE2=QE2*AL1PI
*- CONHC - CONVERSION FACTOR IN NANOBARNS
       CONHC=.389 379 66 D+6
       CSIGNB=4D0/3*PI/ALFAI**2*CONHC
*
       END
 
       SUBROUTINE BHACOU (IFIT)
*======================================================================
* ROUTINE FOR VECTOR AND AXIAL COUPLINGS INITIALIZATION
*----------------------------------------------------------------------
       IMPLICIT COMPLEX*16(X)
       IMPLICIT REAL*8(A-H,O-W,Y-Z)
*
* flags
*
      PARAMETER(NFLGMX=46)
      COMMON /ZUFLGS/ IFLAGS(NFLGMX),CFLAGS(NFLGMX)
      CHARACTER CFLAGS*4
      PARAMETER (IFAFBC= 1,IFSCAL= 2,IFSCRE= 3,IFAMT4= 4,IFBORN= 5,
     & IFBOXD= 6,IFCONV= 7,IFFINR= 8,IFFOT2= 9,IFGAMS=10,IFDIAG=11,
     & IFINTF=12,IFBARB=13,IFPART=14,IFPOWR=15,IFPRNT=16,IFALEM=17,
     & IFQCDC=18,IFVPOL=19,IFWEAK=20,IFFTJR=21,IFEXPR=22,IFEXPF=23,
     & IFHIGS=24,IFAFMT=25,IFCZAK=26,IFPREC=27,IFHIG2=28,IFALE2=29,
     & IFGFER=30,IFISPP=31,IFFSRS=32,IFMISC=33,IFMISD=34,IFIPFC=35,
     & IFIPSC=36,IFIPTO=37,IFFBHO=38,IFFSPP=39,IFFUNA=40,IFASCR=41,
     & IFSFSR=42,IFENUE=43,IFTUPV=44,IFDMWW=45,IFDSWW=46)
*
       COMMON /BHANUM/ PI,F1,AL2,ZET3
       COMMON /BHAPHY/ ALFAI,AL1PI,ALQE2,GFERMI,CSIGNB
       COMMON /BHAELE/ AME,AME2,QE,QEM,QE2,COMB1,COMB2,COMB3
       COMMON /BHACHI/ XMZ2,XKAPPA,XCHIS,XCHIT
     &                ,AMZ2,AKAPPA,S,CHIS,CHIS2,T,CHIT,CHIT2
       COMMON /BHASM / XFFS(4),XFFT(4),SW2SIR
       COMMON /BHAFIT/ AMZ,GAMZ,GAMEE,RO,GV,GA,RO2,GV2,GA2
       COMMON /BHAFLG/ IFITI,IPART,IAFB,IFINAL,INTERF,IPHOT2
*
       COMMON /BHACPL/ VEEA,XVEEI,VEEZ,AEEA,XAEEI,AEEZ
     &                ,CSTG,XCSTI1,XCSTI2,XCSTZ
     &                ,CTTG1,CTTG2,XCTTI1,XCTTI2,CTTZ1,CTTZ2
*
      COMMON /CDZRKZ/ARROFZ(0:10),ARKAFZ(0:10),ARVEFZ(0:10),ARSEFZ(0:10)
     &              ,AROTFZ(0:10),AIROFZ(0:10),AIKAFZ(0:10),AIVEFZ(0:10)
      COMMON /CDZAUX/PARTZA(0:10),PARTZI(0:10),RENFAC(0:10),SRENFC(0:10)
*
* IFIT=-1: ALL T-CHANNEL FF EQ=1
* IFIT=0 : SM
* IFIT=1 : GAMEE
* IFIT=2 : RO(EFF) + SW2(EFF) OR  GV + GA  (IF R0=1)
* IFIT=3 : GV2 + GA2
*
       CALL BHAFFF (IFIT,S,T)
*
* SM DEFINITIONS
*
       XFAS=XFFS(1)
       FAT=DREAL(XFFT(1))
       XROS=XFFS(2)
       XVES=1.-4.*SW2SIR*QEM*XFFS(3)
       XVEES=-1.+2.*XVES+16.*SW2SIR**2*QE2*XFFS(4)
       XDVEES=XVEES-XVES**2
       XROT=XFFT(2)
       XVET=1.-4.*SW2SIR*QEM*XFFT(3)
       XVEET=-1.+2.*XVET+16.*SW2SIR**2*QE2*XFFT(4)
       XDVEET=XVEET-XVET**2
*
       ROS2=XROS*DCONJG(XROS)
       VES2=XVES*DCONJG(XVES)
       VEES2=XVEES*DCONJG(XVEES)
       VZ1GE=(VEES2-VES2**2)*ROS2
*
* This is valid for effective couplings only
*
       IF (IFIT.EQ.2) THEN
           IF(IFLAGS(IFMISC).EQ.0) THEN
             IF(ABS(RO-1D0).LT.1D-10) RO=GA**2
             ROR  =RO
             ROFZ1=AROTFZ(1)
           ELSE
             IF(ABS(RO-RENFAC(1)).LT.1D-10) RO=GA**2
             ROR  =RO/RENFAC(1)
             ROFZ1=ARROFZ(1)/RENFAC(1)
           ENDIF
         XROS=DCMPLX(ROR,DIMAG(XROS))-ROFZ1+DREAL(XROS)
cb         XROT=DCMPLX(RO/RENFAC(1),DIMAG(XROT))
cb     &       -ARROFZ(1)/RENFAC(1)+DREAL(XROT)
         V=ABS(GV/GA)
         XVES=DCMPLX(V,DIMAG(XVES))-ARVEFZ(1)+DREAL(XVES)
cb         XVET=DCMPLX(V,DIMAG(XVET))-ARVEFZ(1)+DREAL(XVET)
         XVEES=XVES**2+XDVEES
cb         XVEET=XVET**2+XDVEET
       ELSEIF(IFIT.EQ.3) THEN
           IF(IFLAGS(IFMISC).EQ.0) THEN
             IF(ABS(RO2-1D0).LT.1D-10) RO2=GA2**2
             ROR2 =SQRT(RO2)
             ROFZ1=AROTFZ(1)
           ELSE
             IF(ABS(RO2-(RENFAC(1))**2).LT.1D-10) RO2=GA2**2
             ROR2 =SQRT(RO2)/RENFAC(1)
             ROFZ1=ARROFZ(1)/RENFAC(1)
           ENDIF
         XROS=DCMPLX(ROR2,DIMAG(XROS))-ROFZ1+DREAL(XROS)
cb         XROT=DCMPLX(SQRT(RO2)/RENFAC(1),DIMAG(XROT))
cb     &       -ARROFZ(1)/RENFAC(1)+DREAL(XROT)
         V=SQRT(ABS(GV2/GA2))
         XVES=DCMPLX(V,DIMAG(XVES))-ARVEFZ(1)+DREAL(XVES)
cb         XVET=DCMPLX(V,DIMAG(XVET))-ARVEFZ(1)+DREAL(XVET)
         XVEES=XVES**2+XDVEES
cb         XVEET=XVET**2+XDVEET
       END IF
*
       ROS2=XROS*DCONJG(XROS)
       VES2=XVES*DCONJG(XVES)
       VEES2=XVEES*DCONJG(XVEES)
       FAS2=XFAS*DCONJG(XFAS)
       ROT2=XROT*DCONJG(XROT)
       VET2=XVET*DCONJG(XVET)
       VEET2=XVEET*DCONJG(XVEET)
       FAT2=FAT*FAT
*
       CQEDHI=1D0
       IF(IFINAL.EQ.0) CQEDHI=1D0+.75D0*AL1PI*QE2
*
*- S-CHANNEL COUPLINGS
*
       IF (IFIT.EQ.1) THEN
         QEDFIN=1D0+0.75D0*ALQE2
*cb for 5.11
         STZ=3D0*GAMEE*ALFAI/(AMZ*AKAPPA)/QEDFIN
*cb         VZ1=STZ**2+2*DREAL(DCONJG(XFFS(4))*XDVEES)-XDVEES*DCONJG(XDVEES)
         VZ1=STZ**2+VZ1GE
       ELSE
         VZ1=(1D0+2D0*VES2+VEES2)*ROS2
       END IF
       AZ1=2D0*DREAL(VES2+XVEES)*ROS2
*
       VZ2=2.*DREAL(XVES*(1.+DCONJG(XVEES)))*ROS2
       AZ2=VZ2
       VEEZ=(COMB1*VZ1+COMB2*VZ2)*CQEDHI
       XVEEI=QE2*DCONJG(XFAS)*(COMB1*XVEES+COMB2*XVES)*XROS*CQEDHI
       VEEA=QE2**2*COMB1*FAS2*CQEDHI
       AEEZ=COMB1*AZ1+COMB2*AZ2
       XAEEI=QE2*DCONJG(XFAS)*(COMB1+COMB2*XVES)*XROS
       AEEA=0D0
*- S-T INTERFERENCE COUPLINGS
       CSTG=QE2**2*COMB1*DREAL(XFAS)*FAT
       XSTZ=XROS*(1.+XVEES)
       XCSTI1=QE2*FAT*(COMB1*XSTZ+COMB2*2.*XVES*XROS)
       XCSTI2=QE2*DCONJG(XFAS)*(COMB1*(XVEET+1.)+COMB2*2.*XVET)*XROT
       XCSTZ=(COMB1*(XVEES*DCONJG(XVEET)+4.*XVES*DCONJG(XVET)
     &      +XVEES+DCONJG(XVEET)+1.)
     &      +COMB2*2.*(XVES*DCONJG(XVEET)+XVEES*DCONJG(XVET)
     &      +XVES+DCONJG(XVET)))*XROS*DCONJG(XROT)
*- T-CHANNEL COUPLINGS
       CTTG1=QE2**2*(COMB1+2.*COMB3)*FAT2
       CTTG2=QE2**2*COMB1*FAT2
       XCTTI1=QE2*FAT*(COMB1+2*COMB3)*(XVEET-1.)*XROT
       XCTTI2=QE2*FAT*(COMB1*(XVEET+1.)+COMB2*2.*XVET)*XROT
       CTTZ1=(COMB1+2.*COMB3)*(VEET2-2.*DREAL(XVEET)+1.)*ROT2
       CTTZ2=(COMB1*(VEET2+4.*VET2+2.*DREAL(XVEET)+1.)
     &      +4.*COMB2*DREAL(DCONJG(XVET)*XVEET+XVET))*ROT2
*
       END
 
       FUNCTION BHAFUN (THET)
***********************************************************************
***********************************************************************
***********    VERSION 2.0   RELEASE  23 MAY 1991        **************
**                                                                   **
**  ROUTINE CALCULATES ANGULAR DISTRIBUTION                          **
**  FOR ANNIHILATION OF E+E-  INTO  E+E- (BHABHA SCATTERING)         **
**  WITH CUTS ON ACOLLINEARITY AND ENERGY OF OUTGOING E+E-           **
**                                                                   **
**      AUTHOR : M. BILENKY       JINR - DUBNA (DELPHI)              **
**                                                                   **
**      E-MAIL  VXCERN::BILENKYM, VAXMI::BILENKY                     **
**                                                                   **
***********************************************************************
*
*-   S-CHANNEL:
*-  - COMPLETE ONE LOOP QED CORRECTIONS
*-  - EXPONENTIATION FOR HIGHER ORDER EFFECTS (INITIAL AND FINAL STATES)
*-  - LEAD. AND NEXT-TO-LEAD O(ALPHA**2) HARD PHOTONIC CORRECTIONS
*-    TO INITIAL STATE
*-  - INITIAL - FINAL  INTERFERENCE IN ORDER OF ALPHA
*
*-  T-CHANNEL AND S-T INTERFERENCE:
*-  - COMPLETE ORDER OF ALPHA CORRECTIONS TO PURE GAMMA EXCHANGE
*-  - SOFT+VIRTUAL+COLLINEAR HARD PHOTONS CORR. TO OTHER T-CH. CONTRIB.
*
*   LIMITATION: MAX ACOLLINEARITY ANGLE SHOULD BE GREATER THEN
*               MIN SCATTERING ANGLE
*
*-  INPUT PARAMETERS IN BHAFUN:
*-  --------------------------
*- EBEAM   - SQRT(S), S=4*EBEAM**2
*- THET  - SCATTERING ANGLE OF OUTGOING E+ WITH RESPECT TO E+ BEAM
*- ACOL  - ACOLLINEARITY ANGLE OF FINAL FERMIONS (IN DEGREES)
*- EMIN1,EMIN2  - ENERGIES CUT FOR FINAL FERMIONS (IN GEV)
*
*- OUTPUTS
*  -------
*- SIGBRN -'BORN' D(SIGMA)/D(THET)
*- SIGQED - QED CORRECTED  D(SIGMA)/D(THET)
*- DSIGNB=SIGQED-SIGBN  , WHERE
*- SIGBN -'BORN' D(SIGMA)/D(THET) (WITHOUT T-CHANNEL VAC. POL.)
*-             ALL OUTPUT QUANTITIES IN NANOBARN/DEGREE
*-----------------------------------------------------------------------
       IMPLICIT COMPLEX*16(X)
       IMPLICIT REAL*8(A-H,O-W,Y-Z)
*
       COMMON /BHALUN/ LUN
       COMMON /BHAFLG/ IFIT,IPART,IAFB,IFINAL,INTERF,IPHOT2
       COMMON /BHANUM/ PI,F1,AL2,ZET3
       COMMON /BHAELE/ AME,AME2,QE,QEM,QE2,COMB1,COMB2,COMB3
       COMMON /BHAPHY/ ALFAI,AL1PI,ALQE2,GFERMI,CSIGNB
       COMMON /BHAFIT/ AMZ,GAMZ,GAMEE,RO,GV,GA,RO2,GV2,GA2
       COMMON /BHAQED/ TE,BETTAE,SOFTER,SOFTFR
       COMMON /BHACHI/ XMZ2,XKAPPA,XCHIS,XCHIT
     &                ,AMZ2,AKAPPA,S,CHIS,CHIS2,T,CHIT,CHIT2
       COMMON /BHACVR/ C,C2,C3,CP,CM,CP2,CM2,CP3,CM3,CPM,CPM2,CPM3
     +                ,CMI,CMI2,CMI3,CPI,CPI2,CPI3
     +                ,ALCP,ALCM,ALPL,ALMI,DLCP,DLCM
       COMMON /BHABRN/ ABORN0,SBORN0
     &                ,BRNSTG,BRNSTI,BRNSTZ,BRNTTG,BRNTTI,BRNTTZ
       COMMON /BHACTV/ ACOL,SINAC2,COSAC2
     +                ,RMIN,RSFT,YMIN,YMAX,RACUT,RX1A,RX2A
       COMMON /BHACS / CSBDIF,CSQDIF
       EXTERNAL BHAEXP,BHAF,BHAFI,BHAHRD
       DATA EPSH/1D-5/, EPSS/1D-12/
*
       IF (IPART.GT.0.AND.THET.LT.ACOL) THEN
         WRITE(LUN,*) ' ROUTINE CAN NOT CALCULATE CROSS-SECTION FOR'
         WRITE(LUN,*) ' ANGLE LESS THAN ACOL IN BHABHA CASE'
         WRITE(LUN,*) ' THET =',THET,'  ACOL =',ACOL
         STOP
       END IF
*- SET OF COSTH-DEPENDENT FUNCTIONS
       CALL BHASTC (THET)
*- RSFT FINDING WITH STANDARD CERN ROUTINE
*- RSFT - COS DEPENDENT VALUE OF MIN R (FOR EXPONENTIATION)
       CALL BHARSF
       CALL BHACOU (-1)
       CALL BHABNS (1D0,1D0,SBORN0,ABORN0)
       BNSS0=((1+C2)*SBORN0+2*C*ABORN0)
       CALL BHABNT (BNST0,BNTT0)
*- SET OF USEFUL COMBINATION OF COPLING CONSTANTS
       CALL BHACOU (IFIT)
*-----------------------------------------------------------------------
*     'IMPROVED BORN' ANGULAR DISTRIBUTION
*-----------------------------------------------------------------------
       CALL BHABNS (1D0,1D0,SBORN0,ABORN0)
       BRNSS0=(1+C2)*SBORN0+2*C*ABORN0
       CALL BHABNT (BRNST0,BRNTT0)
*-----------------------------------------------------------------------
*     QED CORRECTED ANGULAR DISTRIBUTION
*-----------------------------------------------------------------------
*- SOFT+VERTEX (INITIAL + FINAL) WITH EXPONENTIATION
       REPS = 1.D-6
       AEPS = 1.D-4*BRNSS0
       H=(1D0-RSFT)*0.1D0
       BOUNDS=1D0-EPSS
       CALL FDSIMP
     +   (BOUNDS,RSFT,H,REPS,AEPS,BHAEXP,BHAF,BHAFI,RR,SFTM,AIH,AIA)
       CALL BHAFIN (1D0,SFIN,AFIN)
       SFT=(-SFTM+(EPSS**BETTAE*SFIN)*SBORN0*(1+C2)
     &           +(EPSS**BETTAE*AFIN)*ABORN0*2*C)*(1+SOFTER)-BRNSS0
       CALL BHABOX (BOXSS,BOXST,BOXTT)
       CALL BHASFT (SFTSS,SFTST,SFTTT)
       SFTSS=SFT+SFTSS
       IF (IPART.EQ.0) THEN
         SIGBRN=BRNSS0+BRNST0+BRNTT0
         SIGBN=BNSS0+BNST0+BNTT0
         SIGSFT=SIGBRN+SFTSS+BOXSS+SFTST+BOXST+SFTTT+BOXTT
       ELSE IF (IPART.EQ.1) THEN
         SIGBRN=BRNSS0
         SIGBN=BNSS0
         SIGSFT=SIGBRN+SFTSS+BOXSS
       ELSE IF (IPART.EQ.2) THEN
         SIGBRN=BRNTT0
         SIGBN=BNTT0
         SIGSFT=SIGBRN+SFTTT+BOXTT
       ELSE
         SIGBRN=BRNST0
         SIGBN=BNST0
         SIGSFT=SIGBRN+SFTST+BOXST
       END IF
*----------------------------------------------------------------------*
*     HARD (INITAL + FINAL + INITIAL-FINAL INTEFERENCE)                *
*----------------------------------------------------------------------*
       REPS = 1.D-6
       AEPS = 1.D-4*ABS(SIGSFT)
       BOUNDH=1D0-EPSH
       H=0.1D0*(BOUNDH-RMIN)
       CALL SIMPS
     +   (RMIN,BOUNDH,H,REPS,AEPS,BHAHRD,RR,HRD,AIHH,AIHA)
       SIGQED=(SIGSFT+HRD)
*
       CFACT=3D0/8*CSIGNB/S*PI/180*SQRT(1.-C2)
*- DIFFERENTIAL CROS-SECTIONS IN NB/DEGREE
       BHAFUN=(SIGQED-SIGBN)*CFACT
       CSBDIF=SIGBRN*CFACT
       CSQDIF=SIGQED*CFACT
*
       END
 
       FUNCTION BHAFUI (THET)
***********************************************************************
***********************************************************************
***********    VERSION 2.0   RELEASE  23 MAY 1991        **************
**                                                                   **
**  ROUTINE CALCULATES ANGULAR DISTRIBUTION                          **
**  FOR ANNIHILATION OF E+E-  INTO  E+E- (BHABHA SCATTERING)         **
**  WITH CUTS ON ACOLLINEARITY AND ENERGY OF OUTGOING E+E-           **
**                                                                   **
**      AUTHOR : M. BILENKY       JINR - DUBNA (DELPHI)              **
**                                                                   **
**      E-MAIL  VXCERN::BILENKYM, VAXMI::BILENKY                     **
**                                                                   **
***********************************************************************
*
*-   S-CHANNEL:
*-  - COMPLETE ONE LOOP QED CORRECTIONS
*-  - EXPONENTIATION FOR HIGHER ORDER EFFECTS (INITIAL AND FINAL STATES)
*-  - LEAD. AND NEXT-TO-LEAD O(ALPHA**2) HARD PHOTONIC CORRECTIONS
*-    TO INITIAL STATE
*-  - INITIAL - FINAL  INTERFERENCE IN ORDER OF ALPHA
*
*-  T-CHANNEL AND S-T INTERFERENCE:
*-  - COMPLETE ORDER OF ALPHA CORRECTIONS TO PURE GAMMA EXCHANGE
*-  - SOFT+VIRTUAL+COLLINEAR HARD PHOTONS CORR. TO OTHER T-CH. CONTRIB.
*
*   LIMITATION: MAX ACOLLINEARITY ANGLE SHOULD BE GREATER THEN
*               MIN SCATTERING ANGLE
*
*-  INPUT PARAMETERS IN BHAFUN:
*-  --------------------------
*- EBEAM   - SQRT(S), S=4*EBEAM**2
*- THET  - SCATTERING ANGLE OF OUTGOING E+ WITH RESPECT TO E+ BEAM
*- ACOL  - ACOLLINEARITY ANGLE OF FINAL FERMIONS (IN DEGREES)
*- EMIN1,EMIN2  - ENERGIES CUT FOR FINAL FERMIONS (IN GEV)
*
*- OUTPUTS
*  -------
*- SIGBRN -'BORN' D(SIGMA)/D(THET)
*- SIGQED - QED CORRECTED  D(SIGMA)/D(THET)
*- DSIGNB=SIGQED-SIGBN  , WHERE
*- SIGBN -'BORN' D(SIGMA)/D(THET) (WITHOUT T-CHANNEL VAC. POL.)
*-             ALL OUTPUT QUANTITIES IN NANOBARN/DEGREE
*-----------------------------------------------------------------------
       IMPLICIT COMPLEX*16(X)
       IMPLICIT REAL*8(A-H,O-W,Y-Z)
*
       COMMON /BHALUN/ LUN
       COMMON /BHAFLG/ IFIT,IPART,IAFB,IFINAL,INTERF,IPHOT2
       COMMON /BHANUM/ PI,F1,AL2,ZET3
       COMMON /BHAELE/ AME,AME2,QE,QEM,QE2,COMB1,COMB2,COMB3
       COMMON /BHAPHY/ ALFAI,AL1PI,ALQE2,GFERMI,CSIGNB
       COMMON /BHAFIT/ AMZ,GAMZ,GAMEE,RO,GV,GA,RO2,GV2,GA2
       COMMON /BHAQED/ TE,BETTAE,SOFTER,SOFTFR
       COMMON /BHACHI/ XMZ2,XKAPPA,XCHIS,XCHIT
     &                ,AMZ2,AKAPPA,S,CHIS,CHIS2,T,CHIT,CHIT2
       COMMON /BHACVR/ C,C2,C3,CP,CM,CP2,CM2,CP3,CM3,CPM,CPM2,CPM3
     +                ,CMI,CMI2,CMI3,CPI,CPI2,CPI3
     +                ,ALCP,ALCM,ALPL,ALMI,DLCP,DLCM
       COMMON /BHABRN/ ABORN0,SBORN0
     &                ,BRNSTG,BRNSTI,BRNSTZ,BRNTTG,BRNTTI,BRNTTZ
       COMMON /BHACTV/ ACOL,SINAC2,COSAC2
     +                ,RMIN,RSFT,YMIN,YMAX,RACUT,RX1A,RX2A
       COMMON /BHACS / CSBDIF,CSQDIF
       EXTERNAL BHAEXP,BHAF,BHAFI,BHAHRD
       DATA EPSH/1D-5/, EPSS/1D-12/
*
       IF (IPART.GT.0.AND.THET.LT.ACOL) THEN
         WRITE(LUN,*) ' ROUTINE CAN NOT CALCULATE CROSS-SECTION FOR'
         WRITE(LUN,*) ' ANGLE LESS THAN ACOL IN BHABHA CASE'
         WRITE(LUN,*) ' THET =',THET,'  ACOL =',ACOL
         STOP
       END IF
*- SET OF COSTH-DEPENDENT FUNCTIONS
       CALL BHASTC (THET)
*- RSFT FINDING WITH STANDARD CERN ROUTINE
*- RSFT - COS DEPENDENT VALUE OF MIN R (FOR EXPONENTIATION)
       CALL BHARSF
       CALL BHACOU (-1)
       CALL BHABNS (1D0,1D0,SBORN0,ABORN0)
       BNSS0=((1+C2)*SBORN0+2*C*ABORN0)
       CALL BHABNT (BNST0,BNTT0)
*- SET OF USEFUL COMBINATION OF COPLING CONSTANTS
       CALL BHACOU (IFIT)
*-----------------------------------------------------------------------
*     'IMPROVED BORN' ANGULAR DISTRIBUTION
*-----------------------------------------------------------------------
       CALL BHABNS (1D0,1D0,SBORN0,ABORN0)
       BRNSS0=(1+C2)*SBORN0+2*C*ABORN0
       CALL BHABNT (BRNST0,BRNTT0)
*-----------------------------------------------------------------------
*     QED CORRECTED ANGULAR DISTRIBUTION
*-----------------------------------------------------------------------
*- SOFT+VERTEX (INITIAL + FINAL) WITH EXPONENTIATION
       REPS = 1.D-6
       AEPS = 1.D-4*BRNSS0
       H=(1D0-RSFT)*0.1D0
       BOUNDS=1D0-EPSS
       CALL FDSIMP
     +   (BOUNDS,RSFT,H,REPS,AEPS,BHAEXP,BHAF,BHAFI,RR,SFTM,AIH,AIA)
       CALL BHAFIN (1D0,SFIN,AFIN)
       SFT=(-SFTM+(EPSS**BETTAE*SFIN)*SBORN0*(1+C2)
     &           +(EPSS**BETTAE*AFIN)*ABORN0*2*C)*(1+SOFTER)-BRNSS0
       CALL BHABOX (BOXSS,BOXST,BOXTT)
       CALL BHASFT (SFTSS,SFTST,SFTTT)
       SFTSS=SFT+SFTSS
       IF (IPART.EQ.0) THEN
         SIGBRN=BRNSS0+BRNST0+BRNTT0
         SIGBN=BNSS0+BNST0+BNTT0
         SIGSFT=SIGBRN+SFTSS+BOXSS+SFTST+BOXST+SFTTT+BOXTT
       ELSE IF (IPART.EQ.1) THEN
         SIGBRN=BRNSS0
         SIGBN=BNSS0
         SIGSFT=SIGBRN+SFTSS+BOXSS
       ELSE IF (IPART.EQ.2) THEN
         SIGBRN=BRNTT0
         SIGBN=BNTT0
         SIGSFT=SIGBRN+SFTTT+BOXTT
       ELSE
         SIGBRN=BRNST0
         SIGBN=BNST0
         SIGSFT=SIGBRN+SFTST+BOXST
       END IF
*----------------------------------------------------------------------*
*     HARD (INITAL + FINAL + INITIAL-FINAL INTEFERENCE)                *
*----------------------------------------------------------------------*
       REPS = 1.D-6
       AEPS = 1.D-4*ABS(SIGSFT)
       BOUNDH=1D0-EPSH
       H=0.1D0*(BOUNDH-RMIN)
       CALL SIMPS
     +   (RMIN,BOUNDH,H,REPS,AEPS,BHAHRD,RR,HRD,AIHH,AIHA)
       SIGQED=(SIGSFT+HRD)
*
       CFACT=3D0/8*CSIGNB/S*PI/180*SQRT(1.-C2)
*- DIFFERENTIAL CROS-SECTIONS IN NB/DEGREE
       BHAFUI=(SIGQED-SIGBN)*CFACT
       CSBDIF=SIGBRN*CFACT
       CSQDIF=SIGQED*CFACT
*
       END
 
       SUBROUTINE BHARSF
*=======================================================================
       IMPLICIT COMPLEX*16(X)
       IMPLICIT REAL*8(A-H,O-W,Y-Z)
*
       COMMON /BHACVR/ C,C2,C3,CP,CM,CP2,CM2,CP3,CM3,CPM,CPM2,CPM3
     +                ,CMI,CMI2,CMI3,CPI,CPI2,CPI3
     +                ,ALCP,ALCM,ALPL,ALMI,DLCP,DLCM
       COMMON /BHACTV/ ACOL,SINAC2,COSAC2
     +                ,RMIN,RSFT,YMIN,YMAX,RACUT,RX1A,RX2A
       COMMON /BHAHLP/ CE,CEM
       EXTERNAL BHAZ00
*
       DEL=(YMIN-RX1A)/(1D0-RX1A)
       GE=DEL/(RX1A*(1D0-DEL))
       GEM=(1D0-DEL)/(RX1A*DEL)
       CE=(1D0-GE)/(1D0+GE)
       CEM=(1D0-GEM)/(1D0+GEM)
       IF (C.GT.CE.OR.C.LT.CEM) THEN
         RMAX=YMIN
       ELSE
         RMAX=RACUT
       ENDIF
*- RSFT FINDING WITH STANDARD CERN ROUTINE
       EPR=0.01*(RMAX-RMIN)
       CALL DZERO (RMIN,RMAX,RSFTC,D,EPR,100,BHAZ00)
       RSFT=RSFTC
*
       END
 
       FUNCTION BHAZ00 (R,I)
*=======================================================================
       IMPLICIT COMPLEX*16(X)
       IMPLICIT REAL*8(A-H,O-W,Y-Z)
*
       COMMON /BHACVR/ C,C2,C3,CP,CM,CP2,CM2,CP3,CM3,CPM,CPM2,CPM3
     +                ,CMI,CMI2,CMI3,CPI,CPI2,CPI3
     +                ,ALCP,ALCM,ALPL,ALMI,DLCP,DLCM
       COMMON /BHACTV/ ACOL,SINAC2,COSAC2
     +                ,RMIN,RSFT,YMIN,YMAX,RACUT,RX1A,RX2A
       COMMON /BHAHLP/ CE,CEM
*
       DELE(RR)=(YMIN-RR)/MAX(1D-12,1D0-RR)
       DELA(RR)=1D0/2
     +   *(1-SQRT(ABS(1-SINAC2*((1D0+RR)/MAX(1D-12,1D0-RR))**2)/COSAC2))
*
       CC=CP+R*CM
       IF (C.GT.CE) THEN
         BHAZ00=CC*DELE(R)-CM*R
       ELSE IF (C.GT.-SQRT(SINAC2)) THEN
         BHAZ00=CC*DELA(R)-CM*R
       ELSE IF (C.GT.CEM) THEN
         BHAZ00=CC*(1-DELA(R))-CM*R
       ELSE
         BHAZ00=CC*(1-DELE(R))-CM*R
       ENDIF
*
       END
 
       SUBROUTINE BHACUT (ACOLI,EMIN1,EMIN2)
*=======================================================================
       IMPLICIT COMPLEX*16(X)
       IMPLICIT REAL*8(A-H,O-W,Y-Z)
*
       COMMON /BHAFLG/ IFIT,IPART,IAFB,IFINAL,INTERF,IPHOT2
       COMMON /BHANUM/ PI,F1,AL2,ZET3
       COMMON /BHAELE/ AME,AME2,QE,QEM,QE2,COMB1,COMB2,COMB3
       COMMON /BHACHI/ XMZ2,XKAPPA,XCHIS,XCHIT
     &                ,AMZ2,AKAPPA,S,CHIS,CHIS2,T,CHIT,CHIT2
*
       COMMON /BHACTV/ ACOL,SINAC2,COSAC2
     +                ,RMIN,RSFT,YMIN,YMAX,RACUT,RX1A,RX2A
*
       ACOL=ACOLI
       IF(ACOL.LT.2D0.OR.ACOL.GE.179.999999D0)
     &                    STOP 'NON SUPPORTED ACOLLINEARITY CUT !'
       ECMIN=MAX(0.001D0,MIN(EMIN1,EMIN2))
       ECMAX=MIN(0.001D0,MAX(EMIN1,EMIN2))
       EBEAM=SQRT(S)
       IF(ECMAX.GT.0.99*EBEAM)
     &                    STOP 'NON SUPPORTED ENERGY CUT !'
       RKIN=MAX(4.*AME2/S,0.001D0)
*
       SINAC=SIN(ACOL*PI/360.)
       SINAC2=SINAC**2
       COSAC2=1.-SINAC2
       RACUT=MAX(RKIN,(1.-SINAC)/(1.+SINAC))
*
       YMIN=2.*ECMIN/EBEAM
       YMAX=2.*ECMAX/EBEAM
       RX11=2.*YMIN-1.
       RX22=2.*YMAX-1.
       RX1A=YMIN*(1.-SINAC2/(1.-YMIN*COSAC2))
       RX2A=YMAX*(1.-SINAC2/(1.-YMAX*COSAC2))
       RX12=YMIN+YMAX-1.
       RMIN=MAX(RKIN,RX11,RX12,RX1A)
*
       RSFT=MAX(RKIN,RACUT,YMIN,RX22)
*
*- FINAL STATE RADIATION FUNCTIONS INITIALIZATION
       IF (IFINAL.NE.0) CALL BHASTF
       END
 
       FUNCTION BHAEXP (R)
*=======================================================================
       IMPLICIT COMPLEX*16(X)
       IMPLICIT REAL*8(A-H,O-W,Y-Z)
*
       COMMON /BHACVR/ C,C2,C3,CP,CM,CP2,CM2,CP3,CM3,CPM,CPM2,CPM3
     +               ,CMI,CMI2,CMI3,CPI,CPI2,CPI3
     +               ,ALCP,ALCM,ALPL,ALMI,DLCP,DLCM
*
       CALL BHAFIN (R,SFIN,AFIN)
       CALL BHABNS (R,R,SBORN,ABORN)
       BHAEXP=SBORN*SFIN*(1.D0+C2)+ABORN*AFIN*2.D0*C
*
       END
 
       FUNCTION BHAF (R)
*=======================================================================
       IMPLICIT COMPLEX*16(X)
       IMPLICIT REAL*8(A-H,O-W,Y-Z)
       COMMON /BHAQED/ TE,BETTAE,SOFTER,SOFTFR
*      SOFT PHOTON FACTOR BETTAE*(1-R)**(BETTAE-1)
*      IS EXTRACTED (FUN. FACT)
*      TO IMPROVE SIMPSON INTEGRATION (SUB. FDSIMP)
*
       BHAF=-(1.D0-R)**BETTAE
       END
 
       FUNCTION BHAFI (F)
*=======================================================================
       IMPLICIT COMPLEX*16(X)
       IMPLICIT REAL*8(A-H,O-W,Y-Z)
       COMMON /BHAQED/ TE,BETTAE,SOFTER,SOFTFR
       BHAFI=1.D0-(-F)**(1/BETTAE)
       END
 
       SUBROUTINE BHASET (EBEAM)
*=======================================================================
       IMPLICIT COMPLEX*16(X)
       IMPLICIT REAL*8(A-H,O-W,Y-Z)
*
       COMMON /BHAFIT/ AMZ,GAMZ,GAMEE,RO,GV,GA,RO2,GV2,GA2
       COMMON /BHANUM/ PI,F1,AL2,ZET3
       COMMON /BHAPHY/ ALFAI,AL1PI,ALQE2,GFERMI,CSIGNB
       COMMON /BHAELE/ AME,AME2,QE,QEM,QE2,COMB1,COMB2,COMB3
       COMMON /BHAFLG/ IFIT,IPART,IAFB,IFINAL,INTERF,IPHOT2
*
       COMMON /BHABXF/ XPI,XZ,XLZ,XLZM,XL1Z,XL1ZP,XDLZ,XDLZM,XDLZ1
       COMMON /BHACHI/ XMZ2,XKAPPA,XCHIS,XCHIT
     &                ,AMZ2,AKAPPA,S,CHIS,CHIS2,T,CHIT,CHIT2
       COMMON /BHAQED/ TE,BETTAE,SOFTER,SOFTFR
*
       S=EBEAM**2
       AMZ2=AMZ*AMZ
       XMZ2=DCMPLX(AMZ2,-AMZ*GAMZ)
       AKAPPA=GFERMI*AMZ2/(SQRT(2.D0)*8.*PI)*ALFAI
       XKAPPA=DCMPLX(AKAPPA,0D0)
       IGS=1
       IF(IGS.EQ.1) THEN
*- TAKING INTO ACCOUNT S-DEPENDENCE IN Z-WIDTH (IF IGS=1)
         GAMMA=GAMZ/AMZ
         GAM2=1+GAMMA**2
         XMZ2=XMZ2/GAM2
         XGAMMA=DCMPLX(1D0,GAMMA)
         XKAPPA=XKAPPA/XGAMMA
       END IF
*- S-CHANNEL Z-BOZON PROPOGATOR
       XCHIS=XKAPPA*S/(S-XMZ2)
        CHIS=DREAL(XCHIS)
       CHIS2=CHIS**2+DIMAG(XCHIS)**2
*- COMPLEX VALUED FUNCTIONS FOR QED-BOX DIAGRAMS
       XPI=DCMPLX(0D0, PI)
       XZ=XMZ2/S
       XLZ =LOG( XZ)
       XLZM=LOG(-XZ)
       XL1Z=LOG(1-1D0/XZ)
       XL1ZP=LOG(1+XZ)
       XDLZ=XSPENZ(1D0/XZ)
       XDLZM=XSPENZ(-1D0/XZ)
       XDLZ1=XSPENZ(1+XZ)
*
*- FUNCTIONS FOR (SOFT+VIRTUAL) PART
       TE=LOG(S/AME2)-1
       BETTAE=TE*2*ALQE2
       SOFTFR=3D0/4*BETTAE+ALQE2*(F1*2-1D0/2)
*- SECOND ORDER INITIAL STATE (VIRTUAL+SOFT) CORRECTIONS
       IF(IPHOT2.EQ.0) THEN
         SOFTER=SOFTFR
       ELSE
         TL=TE+1
         SOFTER=SOFTFR+(ALQE2)**2*(
     +   TL**2*(9D0/8-2*F1)+TL*(-45D0/16+11D0/2*F1+3D0*ZET3)
     +   -6D0/5*F1**2-9D0/2*ZET3-6*F1*AL2+3D0/8*F1+19D0/4 )
       END IF
*
       END
 
       SUBROUTINE BHASTC (THET)
*=======================================================================
       IMPLICIT COMPLEX*16(X)
       IMPLICIT REAL*8(A-H,O-W,Y-Z)
*
       COMMON /BHANUM/ PI,F1,AL2,ZET3
       COMMON /BHAELE/ AME,AME2,QE,QEM,QE2,COMB1,COMB2,COMB3
*
       COMMON /BHACVR/ C,C2,C3,CP,CM,CP2,CM2,CP3,CM3,CPM,CPM2,CPM3
     +                ,CMI,CMI2,CMI3,CPI,CPI2,CPI3
     +                ,ALCP,ALCM,ALPL,ALMI,DLCP,DLCM
       COMMON /BHACHI/ XMZ2,XKAPPA,XCHIS,XCHIT
     &                ,AMZ2,AKAPPA,S,CHIS,CHIS2,T,CHIT,CHIT2
*
       C=COS(THET*PI/180)
       C2=C*C
       C3=C*C2
       CP=(1D0+C)/2D0
       CP=MAX(CP,AME2/S)
       CM=(1D0-C)/2D0
       CM=MAX(CM,AME2/S)
       CP2=CP*CP
       CM2=CM*CM
       CP3=CP2*CP
       CM3=CM2*CM
       CPM=CP*CM
       CPM2=CPM*CPM
       CPM3=CPM*CPM2
       CMI=1D0/CM
       CPI=1D0/CP
       CMI2=CMI*CMI
       CPI2=CPI*CPI
       CMI3=CMI2*CMI
       CPI3=CPI2*CPI
       ALCP=LOG(CP)
       ALCM=LOG(CM)
       ALPL=ALCP+ALCM
       ALMI=ALCP-ALCM
       DLCP=DDILOG(CP)
       DLCM=DDILOG(CM)
*- T-CHANNEL Z-BOZON PROPOGATOR
       T=S*CM
       XCHIT=AKAPPA*T/(T+AMZ2)
        CHIT=DREAL(XCHIT)
       CHIT2=CHIT**2+DIMAG(XCHIT)**2
*
       END
 
       FUNCTION BHAHRD (RR)
*=======================================================================
       IMPLICIT COMPLEX*16 (X)
       IMPLICIT REAL*8 (A-H,O-W,Y-Z)
*
       COMMON /BHAPHY/ ALFAI,AL1PI,ALQE2,GFERMI,CSIGNB
       COMMON /BHACPL/ VEEA,XVEEI,VEEZ,AEEA,XAEEI,AEEZ
     &                ,CSTG,XCSTI1,XCSTI2,XCSTZ
     &                ,CTTG1,CTTG2,XCTTI1,XCTTI2,CTTZ1,CTTZ2
       COMMON /BHARVR/ R,R2,R3,R4,R5,RI,RI2,R1MI,R1MI2,R1MI3,R1MI4,ALR
       COMMON /BHACTV/ ACOL,SINAC2,COSAC2
     +                ,RMIN,RSFT,YMIN,YMAX,RACUT,RX1A,RX2A
       COMMON /BHAFLG/ IFIT,IPART,IAFB,IFINAL,INTERF,IPHOT2
       COMMON /BHAELE/ AME,AME2,QE,QEM,QE2,COMB1,COMB2,COMB3
       COMMON /BHAQED/ TE,BETTAE,SOFTER,SOFTFR
       COMMON /BHACHI/ XMZ2,XKAPPA,XCHIS,XCHIT
     &                ,AMZ2,AKAPPA,S,CHIS,CHIS2,T,CHIT,CHIT2
       COMMON /BHACVR/ C,C2,C3,CP,CM,CP2,CM2,CP3,CM3,CPM,CPM2,CPM3
     +                ,CMI,CMI2,CMI3,CPI,CPI2,CPI3
     +                ,ALCP,ALCM,ALPL,ALMI,DLCP,DLCM
       COMMON /BHABRN/ ABORN0,SBORN0
     &                ,BRNSTG,BRNSTI,BRNSTZ,BRNTTG,BRNTTI,BRNTTZ
       COMMON /BHAHFU/ SHINI,SHINTF,AHINI,AHINTF,HARDST,HARDTT
*
       SHINI =0D0
       SHINTF=0D0
       AHINI =0D0
       AHINTF=0D0
       HARDST=0D0
       HARDTT=0D0
*
       R=RR
       CALL BHASTR
       COPL2=1+C2
*
       IF (R.GT.YMIN) THEN
         DELR=1D0/2*(1-DSQRT(1D0-4D0*AME2/(S*R)))
         CALL BHAH (DELR, 1)
       ELSE
         DELE1=(YMIN-R)*R1MI
         CALL BHAH (DELE1, 1)
       END IF
*
       IF (R.LT.2.*YMAX-1.) THEN
         IF (R.LT.RX2A) THEN
           DELA=1D0/2*(1-SQRT(ABS(1-SINAC2*(1+2*R+R2)*R1MI2)/COSAC2))
           CALL BHAH (DELA,-1)
         ELSE
           DELE2=(1.-YMAX)*R1MI
           CALL BHAH (DELE2,-1)
         END IF
       ELSE
         IF (R.LT.RACUT) THEN
           DELA=1D0/2*(1-SQRT(ABS(1-SINAC2*(1+2*R+R2)*R1MI2)/COSAC2))
           CALL BHAH (DELA,-1)
         END IF
       END IF
*
       IF (R.GE.RSFT) THEN
         KSOFT=1
         IF (IPHOT2.NE.0) THEN
           CALL BHAH2 (SH2,AH2)
           SHINI=SHINI+SH2*COPL2
           AHINI=AHINI+AH2*2D0*C
         END IF
       ELSE
         KSOFT=0
       END IF
*
       CALL BHABNS (R,R,SBORN,ABORN)
       CALL BHAFIN (R,SFIN,AFIN)
       SHARD=ALQE2*(SHINI-TE*2*COPL2*R1MI*KSOFT)*SBORN*SFIN
       AHARD=ALQE2*(AHINI-TE*4*C*R1MI*KSOFT)*ABORN*AFIN
*
       IF (INTERF.NE.0) THEN
         CALL BHABNS (R,1D0,SBORN,ABORN)
         SHARD=SHARD+ALQE2*(SHINTF*ABORN+8*C*R1MI*ALMI*ABORN0*KSOFT)
         AHARD=AHARD+ALQE2*(AHINTF*SBORN+4*COPL2*R1MI*ALMI*SBORN0*KSOFT)
       END IF
*
       HARD=0D0
       IF (IPART.EQ.1.OR.IPART.EQ.0) THEN
         HARD=HARD+SHARD+AHARD
       END IF
       IF (IPART.EQ.2.OR.IPART.EQ.0) THEN
         HARD=HARD+ALQE2*(HARDTT-4*(TE-ALMI)*R1MI*BRNTTG*KSOFT)
       END IF
       IF (IPART.EQ.3.OR.IPART.EQ.0) THEN
         BRNST1=-4*CP2*CMI*DREAL(XCHIS*XCSTI1)
         HARD=HARD+ALQE2*(HARDST
     &      -4*(TE-ALMI)*R1MI*(BRNSTG+BRNST1)*KSOFT)
       END IF
*
       BHAHRD=HARD
       END
 
       SUBROUTINE BHAH (DELC,JS)
*=======================================================================
       IMPLICIT COMPLEX*16(X)
       IMPLICIT REAL*8(A-H,O-W,Y-Z)
*
       COMMON /BHACHI/ XMZ2,XKAPPA,XCHIS,XCHIT
     &                ,AMZ2,AKAPPA,S,CHIS,CHIS2,T,CHIT,CHIT2
       COMMON /BHAELE/ AME,AME2,QE,QEM,QE2,COMB1,COMB2,COMB3
       COMMON /BHACPL/ VEEA,XVEEI,VEEZ,AEEA,XAEEI,AEEZ
     &                ,CSTG,XCSTI1,XCSTI2,XCSTZ
     &                ,CTTG1,CTTG2,XCTTI1,XCTTI2,CTTZ1,CTTZ2
       COMMON /BHARVR/ R,R2,R3,R4,R5,RI,RI2,R1MI,R1MI2,R1MI3,R1MI4,ALR
       COMMON /BHACVR/ C,C2,C3,CP,CM,CP2,CM2,CP3,CM3,CPM,CPM2,CPM3
     +                ,CMI,CMI2,CMI3,CPI,CPI2,CPI3
     +                ,ALCP,ALCM,ALPL,ALMI,DLCP,DLCM
       COMMON /BHADVR/ DEL,DELM,DIF,DIF3,ALD,ALDM,ALDPL,ALDMI
     +                ,RD,RDM,ALRD,ALRDM,RMASS
       COMMON /BHAFLG/ IFIT,IPART,IAFB,IFINAL,INTERF,IPHOT2
       COMMON /BHAHFU/ SHINI,SHINTF,AHINI,AHINTF,HARDST,HARDTT
*
       DEL=DELC
       DELM=1-DEL
       DIF=DELM-DEL
       DIF3=DELM**3-DEL**3
       ALD =LOG(DEL)
       ALDM=LOG(DELM)
       ALDPL=ALDM+ALD
       ALDMI=ALDM-ALD
       RD=R*DEL+DELM
       ALRD=LOG(RD)
       RDM=R*DELM+DEL
       ALRDM=LOG(RDM)
       RMASS=4*R1MI*AME2/(S*DEL*DELM)
*
       CALL BHAST1 ( 1)
       CALL BHAHII (H0M,H3M)
       SHINI=SHINI+H0M*JS
       AHINI=AHINI+H3M*JS
       IF (INTERF.NE.0) THEN
         CALL BHAHIF (H4M,H1M)
         SHINTF=SHINTF+H4M*JS
         AHINTF=AHINTF+H1M*JS
       END IF
       CALL BHAST1 (-1)
       CALL BHAHII (H0M,H3M)
       SHINI=SHINI+H0M*JS
       AHINI=AHINI-H3M*JS
       IF (INTERF.NE.0) THEN
         CALL BHAHIF (H4M,H1M)
         SHINTF=SHINTF+H4M*JS
         AHINTF=AHINTF-H1M*JS
       END IF
*
       IF (IPART.NE.1) THEN
         CALL BHAHST (HSTG,XHSTI1,XHSTI2,HSTZ)
         CALL BHAHTT (HTTG1,HTTG2,HTTI1,HTTI2,HTTZ1,HTTZ2)
         HRDST=DREAL(HSTG*CSTG+XHSTI1*XCSTI1+XHSTI2*XCSTI2+HSTZ*XCSTZ)
         HRDTT=DREAL(HTTG1*CTTG1+HTTG2*CTTG2
     2             +HTTI1*XCTTI1+HTTI2*XCTTI2
     3             +HTTZ1*CTTZ1+HTTZ2*CTTZ2)
         HARDST=HARDST+HRDST*JS
         HARDTT=HARDTT+HRDTT*JS
       END IF
*
       END
 
       SUBROUTINE BHAHII (H0M,H3M)
*=======================================================================
       IMPLICIT COMPLEX*16(X)
       IMPLICIT REAL*8(A-H,O-W,Y-Z)
*
       COMMON /BHAQED/ TE,BETTAE,SOFTER,SOFTFR
       COMMON /BHARVR/ R,R2,R3,R4,R5,RI,RI2,R1MI,R1MI2,R1MI3,R1MI4,ALR
       COMMON /BHAVR / C,C2,C3,CC,CCI,CCI2,CCI3,CCI4,CDEL,CDELM
     +               ,ALCC,ALCD,ALCDM,ALMI,ALPL
       COMMON /BHADVR/ DEL,DELM,DIF,DIF3,ALD,ALDM,ALDPL,ALDMI
     +               ,RD,RDM,ALRD,ALRDM,RMASS
*
       IF(CDEL.GT.0.D0.AND.CDELM.GT.0.D0) THEN
* REGION ( +,+ )
         ALCDMI=ALCDM-ALCD
         H0M=DIF3*2D0/3*(R4-2*R3+2*R-1)
     . +2*DIF*(-R4+3*R3-3*R2+R)
     . +CCI*DIF3*2D0/3*(-R5+3*R4-4*R3+4*R2-3*R+1)
     . -CCI2*ALCDMI*(R5+2*R3+R)
     . +CCI2*DIF*(R5-R)
     . +2*CCI3*ALCDMI*(R5+R4+R3+R2)
     . +2*CCI3*DIF*(-R5+R4-R3+R2)
     . -2*CCI4*ALCDMI*(R5+R3)
*
        H3M=-CCI2*ALCDMI*(R4+R3+R2+R)
     . +2*CCI2*DIF*(R4-R3+R2-R)
     . +2*CCI3*ALCDMI*(R4+R2)
       ELSE IF(CDELM.LT.0.D0.AND.CDEL.LT.0.D0) THEN
* REGION ( -,- )
         ALCDMI=ALCDM-ALCD
         H0M=-(2D0/3*DIF3*(R4-2*R3+2*R-1)
     . +2*DIF*(-R3+3*R2-3*R+1)
     . +CCI*DIF3*2D0/3*(-R5+3*R4-4*R3+4*R2-3*R+1)
     . -CCI2*ALCDMI*(R5+2*R3+R)
     . +CCI2*DIF*(R5-R)
     . +2*CCI3*ALCDMI*(R5+R4+R3+R2)
     . +2*CCI3*DIF*(-R5+R4-R3+R2)
     . -2*CCI4*ALCDMI*(R5+R3))
*
        H3M=-(-CCI2*ALCDMI*(R4+R3+R2+R)
     . +2*CCI2*DIF*(R4-R3+R2-R)
     . +2*CCI3*ALCDMI*(R4+R2))
       ELSE
* REGION ( -,+ )
         ALPM=2*ALCC+ALCD+ALCDM-2*ALR-ALPL+TE+1
         H0M=CCI2*ALPM*(R5+2*R3+R)
     . -2*CCI3*ALPM*(R5+R4+R3+R2)
     . +2*CCI4*ALPM*(R5+R3)
     . +4*DEL*DELM*(R3-2*R2+R)
     . +2*CCI2*DEL*DELM*(-R5+2*R4-2*R3+2*R2-R)
     . +2*DEL*(R4-4*R3+6*R2-4*R+1)
     . +2D0/3*(-R4+5*R3-6*R2+5*R-1)
     . +CCI*2D0/3*(R5+R3+R2+1)
     . +CCI2*R*1D0/3*(-9*R4-24*R3-26*R2-24*R-9)
     . +CCI3*4D0/3*(6*R5+11*R4+11*R3+6*R2)
     . +CCI4*2D0/3*(-11*R5-6*R4-11*R3)
*
        H3M=CCI2*ALPM*(R4+R3+R2+R)
     . -2*CCI3*ALPM*(R4+R2)
     . +2*CCI*DEL*DELM*(R4-2*R3+2*R2-2*R+1)
     . +2*CCI*(R3+R)
     . -4*CCI2*(R4+2*R3+2*R2+R)
     . +2*CCI3*(3*R4+2*R3+3*R2)
       END IF
*
       H0M=H0M*R1MI3
       H3M=H3M*R1MI2
       END
 
       SUBROUTINE BHAHIF (H4M,H1M)
*=======================================================================
       IMPLICIT COMPLEX*16(X)
       IMPLICIT REAL*8(A-H,O-W,Y-Z)
*
       COMMON /BHARVR/ R,R2,R3,R4,R5,RI,RI2,R1MI,R1MI2,R1MI3,R1MI4,ALR
       COMMON /BHAVR / C,C2,C3,CC,CCI,CCI2,CCI3,CCI4,CDEL,CDELM
     +               ,ALCC,ALCD,ALCDM,ALMI,ALPL
       COMMON /BHADVR/ DEL,DELM,DIF,DIF3,ALD,ALDM,ALDPL,ALDMI
     +               ,RD,RDM,ALRD,ALRDM,RMASS
*
       ALDELR=ALRD-ALRDM
       IF(CDEL.GT.0.D0.AND.CDELM.GT.0.D0) THEN
* REGION ( +,+ )
         H1M=-2*C*R*(2*DEL*(R-1)-ALDELR+R*(ALDM-ALD)-R+1)
         H4M=-2*R*(-2*DEL*(R-1)+ALDM-ALD+R-1)
       ELSE IF(CDELM.LT.0.D0.AND.CDEL.LT.0.D0) THEN
* REGION ( -,- )
         H1M=2*C*(2*DEL*(-R+1)+ALDELR*R+ALDM-ALD+R-1)
         H4M=2*(2*DEL*(R-1)+ALDM*R-ALD*R-R+1)
       ELSE
* REGION ( -,+ )
        H1M=-2*DEL*C*(R2-1)+2*ALDELR*C*R
     . +2*ALCC*(C2*(R2+R+1)-C*(R2-1)+R2-R+1)
     . -4*CCI*R1MI2*(R3+R2)-2*CCI2*R1MI2*(R4+R2)
     . +ALPL*C*(R2-1)-ALMI*R1MI*(C2+1)*(R3+1)
     . -2*ALDM*C*(R2-1)+2*ALR*C*R2-8*R1MI*C+4*C*(R+2)
         H4M=2*DEL*(R2-1)+2*ALCC*C*(R2+2*R+1)+4*CCI*R1MI*(R3+R)
     . -ALMI*R1MI*C*(R3+R2+R+1)+2*ALR*R-8*R1MI+4*R+8
       END IF
       END
 
       SUBROUTINE BHAH2 (SH2,AH2)
*=======================================================================
*     ALPHA**2*L**2 AND ALPHA**2*L PHOTONIC CORRECTIONS
* TAKEN FROM
* F.A.BERENDS, W.L. VAN NEERVEN AND G.J.H. BURGERS
* NUCL.PHYS. B297(1988)
* W. BEENAKKER, F.A. BERENDS AND W.L. VAN NEERVEN
* "APPLICATIONS OF RENORM. GROUP METHODS TO RAD. COR."
* WORKSHOP ON "EW RAD. COR.", RINGBERG, APRIL 1989
*-----------------------------------------------------------------------
       IMPLICIT COMPLEX*16(X)
       IMPLICIT REAL*8(A-H,O-W,Y-Z)
*
       COMMON /BHAPHY/ ALFAI,AL1PI,ALQE2,GFERMI,CSIGNB
       COMMON /BHANUM/ PI,F1,AL2,ZET3
       COMMON /BHAQED/ TE,BETTAE,SOFTER,SOFTFR
       COMMON /BHARVR/ R,R2,R3,R4,R5,RI,RI2,R1MI,R1MI2,R1MI3,R1MI4,ALR
*
       SH2=0D0
       AH2=0D0
       R1M=1-R
       IF(R1M.GT.1.D-14) THEN
         R1P=1+R
         R2P=1+R2
         ALR1M=LOG(R1M)
         SQR=SQRT(R)
         TL=TE+1
         SH2=ALQE2*(
     +  TL**2*(-R2P*R1MI*ALR+R1P*(1D0/2*(ALR-1)-2*ALR1M)-2)
     + +TL   *(R2P*R1MI*(DDILOG(R1M)+ALR*(ALR1M+7D0/2D0-1D0/2D0*ALR))
     +        +R1P*(1D0/4D0*ALR**2+4D0*ALR1M-2D0*F1)-ALR+7D0+1D0/2D0*R))
         AH2=SH2
     +  +ALQE2*1D0/4*TL**2*(1D0/2*R1M**3*RI+R1M**2/SQR*(ATAN(1D0/SQR)
     +  -ATAN(SQR))-R1P*ALR+2*R1M)
       END IF
       END
 
       SUBROUTINE BHAHTT (HTTG1,HTTG2,HTTI1,HTTI2,HTTZ1,HTTZ2)
*=======================================================================
       IMPLICIT COMPLEX*16(X)
       IMPLICIT REAL*8(A-H,O-W,Y-Z)
*
       COMMON /BHACVR/ C,C2,C3,CP,CM,CP2,CM2,CP3,CM3,CPM,CPM2,CPM3
     +               ,CMI,CMI2,CMI3,CPI,CPI2,CPI3
     +               ,ALCP,ALCM,ALPL,ALMI,DLCP,DLCM
       COMMON /BHAQED/ TE,BETTAE,SOFTER,SOFTFR
       COMMON /BHARVR/ R,R2,R3,R4,R5,RI,RI2,R1MI,R1MI2,R1MI3,R1MI4,ALR
       COMMON /BHAVR / CT,C2T,C3T,CC,CCI,CCI2,CCI3,CCI4,CDEL,CDELM
     +               ,ALCC,ALCD,ALCDM,ALMIT,ALPLT
       COMMON /BHAVR1/ RC1I,RC2I,BLCD1,BLCDM1,BLCD2,BLCDM2,TU
       COMMON /BHADVR/ DEL,DELM,DIF,DIF3,ALD,ALDM,ALDPL,ALDMI
     +               ,RD,RDM,ALRD,ALRDM,RMASS
*
       CALL BHAST2
*
** UP RADIATION + PART UP-DOWN INTERFERENCE
*
** TERMS WITH 1/Z1
       CALL BHAST1 (-1)
       IF (CDEL.GT.0D0.AND.CDELM.GT.0D0) THEN
* REGION ( +,+ )
         BIGL1= ALDMI+ALCDM-ALCD
         BIGL2= ALCDM-ALCD
         GUU1=BIGL1*(2*R1MI-1-R)
         GUU2=2*ALDMI*R1MI+(R*CCI-CMI*RI+CCI*RI+CMI-2)*DIF
         GUD11=(-R1MI2*RC2I-RC2I-CMI*R1MI-1D0/2*R*RC2I
     2 +1D0/2*CMI+CMI*R1MI2+2*R1MI*RC2I)*(ALDMI+BLCD1-BLCDM1)
         GUD21=(-R1MI*RC2I-CMI*R1MI2+R1MI2*RC2I)
     2   *(BLCDM1-BLCD1-ALDMI)
     3   +(R1MI-2*CMI*R1MI+CMI-1)*ALDMI
     4   +((CMI+CPI)*R1MI-1D0/2*CPI2*R1MI-1D0/2*(CPI+CMI))
     5   *(BLCDM1-BLCD1)+(-1D0/2*(CPI+CMI)+1)*DIF
       ELSE IF (CDEL.LT.0D0.AND.CDELM.LT.0D0) THEN
* REGION ( -,- )
         BIGL1=-(ALDMI+ALCDM-ALCD)
         BIGL2=-(ALCDM-ALCD)
         GUU1=BIGL1*(2*R1MI-1-R)
         GUU2=-2*ALDMI*R1MI-(R*CCI-CMI*RI+CCI*RI+CMI-2)*DIF
         GUD11=-(-R1MI2*RC2I-RC2I-CMI*R1MI-1D0/2*R*RC2I
     2 +1D0/2*CMI+CMI*R1MI2+2*R1MI*RC2I)*(ALDMI+BLCD1-BLCDM1)
         GUD21=-(-R1MI*RC2I-CMI*R1MI2+R1MI2*RC2I)
     2   *(BLCDM1-BLCD1-ALDMI)
     3   -(R1MI-2*CMI*R1MI+CMI-1)*ALDMI
     4   -((CMI+CPI)*R1MI-1D0/2*CPI2*R1MI-1D0/2*(CPI+CMI))
     5   *(BLCDM1-BLCD1)-(-1D0/2*(CPI+CMI)+1)*DIF
       ELSE
* REGION ( -,+ )
         BIGL1=ALCDM+ALCD-ALDPL-ALMI+TE+1-2*ALR
         BIGL2=(ALCDM+ALCD+2*ALCC-ALPL+TE+1-2*ALR)
         GUU1=BIGL1*(2*R1MI-1-R)-2*R*R1MI
         GUU2=-2*(2*ALCC+ALDPL-2*ALCM)*R1MI
     2   +4*CMI*R1MI-2*CMI2*R1MI+8*CCI*R1MI-6*CCI2*R1MI-4*R1MI-R*CCI
     3   +2*R*CCI2+CMI*RI-CCI*RI-CMI+2*CMI2-8*CCI+4*CCI2+2
         GUD11=(-2*R1MI*RC2I-CMI*R1MI2-1D0/2*CMI+1D0/2*R*RC2I
     2   +R1MI2*RC2I+RC2I+CMI*R1MI)
     3        *(2*ALMI+2*ALR+BLCD1+BLCDM1-ALDPL)
         GUD21=(-1D0/2*CMI+CMI*R1MI)
     2  *(2*ALMI+2*ALCP+4*ALR+BLCD1+BLCDM1-2*ALCC-2*ALDPL)
     3  +(-R1MI*RC2I-CMI*R1MI2+R1MI2*RC2I)
     4     *(2*ALMI+2*ALR+BLCD1+BLCDM1-ALDPL)
     5  +(-R1MI+1)*(2*ALCP+2*ALR-2*ALCC-ALDPL)
     6  +(-CPI*R1MI+1D0/2*CPI2*R1MI+1D0/2*CPI)
     7     *(2*ALCM-2*ALCC-BLCD1-BLCDM1)
     8  -2*CCI*R1MI+2*R1MI+R*CCI-1D0/2*CPI+1D0/2*CMI+CCI-1
       END IF
       GUU1=GUU1*CMI2
       GUU2=GUU2+BIGL1*(2*(CP2*CMI2-1)*R1MI+2*CMI-(R+1)*CMI2)
     2   -(ALDMI+ALRDM-ALRD)
     3   +BIGL2*(2*CCI2*R1MI-(R+1)*CCI2+2*R*CCI-2*CMI*RI+2*CCI*RI)
     4   -(1-2*CMI)*R*(ALDMI-ALRDM+ALRD)
     5   +(CMI-2)*(R-R2)*DIF/(RD*RDM)
*
** DOWN RADIATION + PART UP-DOWN INTERFERENCE
*
** TERMS WITH 1/Z2
       CALL BHAST1 (1)
       IF (CDEL.GT.0D0.AND.CDELM.GT.0D0) THEN
* REGION ( +,+ )
         BIGL3=  ALCDM-ALCD
         GDD1R=(1-R-2*RI-2*R1MI)*ALDMI
         GDD2R = (R*CCI-CPI*RI+CCI*RI+CPI-2)*DIF
     2   +(2+(1-R)*CP2*CMI2-2*CMI2*RI-2*CP2*CMI2*R1MI)*ALDMI
         GUD12=(-R1MI2*RC1I-CMI*R1MI-1D0/2*RC1I+1D0/2*CMI
     2 +R1MI*RC1I+CMI*R1MI2)*(ALDMI+BLCDM2-BLCD2)
         GUD22=(2*R1MI*RC1I+CMI*R1MI2-R1MI2*RC1I-RC1I)
     2    *(ALDMI+BLCDM2-BLCD2)
     3  -ALDMI*R1MI
     4  +((CPI-CMI)*R1MI-1D0/2*CPI2*R1MI-1D0/2*(CPI-CMI)+1D0/2*CPI2)
     5  *(BLCDM2-BLCD2)+(-1D0/2*(CPI+CMI)+1)*DIF
       ELSE IF (CDEL.LT.0D0.AND.CDELM.LT.0D0) THEN
* REGION ( -,- )
         BIGL3=-(ALCDM-ALCD)
         GDD1R=-(R+1-2*R1MI)*ALDMI-2*(RI2+1)*(BLCD2-BLCDM2)
         GDD2R =-(R*CCI-CPI*RI+CCI*RI+CPI-2)*DIF
     2   +(-R-1+2*R1MI)*CP2*CMI2*ALDMI
     3   +(2*CMI2*RI2-4*CMI*RI+2*CMI2+2*CPI2-4*CPI*RI)*(BLCDM2-BLCD2)
         GUD12=-(-R1MI2*RC1I-CMI*R1MI-1D0/2*RC1I+1D0/2*CMI
     2 +R1MI*RC1I+CMI*R1MI2)*(ALDMI+BLCDM2-BLCD2)
         GUD22=-(2*R1MI*RC1I+CMI*R1MI2-R1MI2*RC1I-RC1I)
     2    *(ALDMI+BLCDM2-BLCD2)
     3  +ALDMI*R1MI
     4  -((CPI-CMI)*R1MI-1D0/2*CPI2*R1MI-1D0/2*(CPI-CMI)+1D0/2*CPI2)
     5  *(BLCDM2-BLCD2)-(-1D0/2*(CPI+CMI)+1)*DIF
       ELSE
* REGION ( -,+ )
         BIGL3=ALCDM+ALCD+TE+1-ALMI
         GDD1R=-2*(ALDPL+1)*R1MI-(2*BLCD2-ALDPL-2*ALR)
     2   -R*ALDMI-2*RI2*(BLCD2-ALR)-2*RI*(ALDM+1)
         GDD2R=-(2*CP2*CMI2*R1MI+2*CMI+CMI2*RI-2)*ALDPL
     2   +4*(R1MI-1)*(ALCM+ALR-ALCC)-(2*BLCD2-ALDPL-2*ALR)*CMI2
     3   +(1-R*CP2*CMI2-CMI2*RI)*ALDMI
     4   +(2*CPI2-4*CPI*RI)*(ALCM+2*ALR-ALCC-BLCD2)
     5   +(2*CMI2*RI2-4*CMI*RI)*(ALR-BLCD2)
     6   +(4*CCI2*R1MI-2*(R+1)*CCI2-4*R*CCI-4*CCI*RI)*(ALCC-ALCM-ALR)
     7   -2*CP2*CMI2*R1MI+8*CCI*R1MI-6*CCI2*R1MI-2*R1MI-R*CCI
     8   +2*R*CCI2+CPI*RI-2*CMI2*RI-CCI*RI-CPI+4*CCI2+2
         GUD12=(R1MI*RC1I+CMI*R1MI2+1D0/2*CMI-1D0/2*RC1I-R1MI2*RC1I
     2   -CMI*R1MI)*(2*ALMI+BLCD2+BLCDM2-ALDPL-4*ALR)
         GUD22=(-R1MI2*RC1I-RC1I+CMI*R1MI2+2*R1MI*RC1I)
     2      *(2*ALMI+BLCDM2+BLCD2-ALDPL-4*ALR)
     3   +R1MI*(2*ALCC+ALDPL-2*ALCP)
     4   +(CPI*R1MI+1D0/2*CPI2+1D0/2*CMI-1D0/2*CPI2*R1MI
     5   -1D0/2*CPI-CMI*R1MI)*(2*ALCC+BLCD2+BLCDM2-2*ALCM-4*ALR)
     8   -2*CCI*R1MI+2*R1MI+R*CCI+1D0/2*(CPI-CMI)+CCI-1
       END IF
       GDD1=(GDD1R+(RI+2*R1MI+RI2)*BIGL3)*CMI2
     2 +TU*(-2*(CPI+CMI)*R1MI-1D0/2*R*CMI2-(CPI+CMI)*RI
     3 -1D0/2*CMI2*RI+1D0/2*CMI2*RI2+CPI+CMI+1D0/2*CMI2)
       GDD2=GDD2R+TU*(-CPI*R1MI+CPI2*R1MI-2*CMI*R1MI+2*R1MI
     2 -1D0/2*R*CP2*CMI2-2*CPI*RI-2*CMI*RI-1D0/2*CMI2*RI+1D0/2*CMI2*RI2
     3 +CMI+1D0/2*CMI2-3D0/2)
     4 +(-4*CMI*R1MI+CMI2*RI+2*CMI2*R1MI+2*CMI+2*CCI2*R1MI-2*R*CCI
     5 -(R+1)*CCI2-2*CMI*RI-2*CCI*RI+CMI2*RI2)*BIGL3
       GUD10=(-R1MI*RC1I+1D0/2*RC1I+R1MI2*RC1I)
     2                  *(ALDMI+BLCDM2-BLCD2)
     3 +(R1MI2*RC2I+RC2I+1D0/2*R*RC2I-2*R1MI*RC2I)
     4                  *(-ALDMI+BLCDM1-BLCD1)
     5 +(CMI*R1MI-1D0/2*CMI-CMI*R1MI2)
     6                  *(BLCDM1+BLCDM2-BLCD1-BLCD2)
       GUD1=GUD10+GUD11+GUD12
       GUD20=(2*R1MI+CMI-2*CMI*R1MI)*ALDMI
     2 +(R1MI2*RC1I+RC1I-2*R1MI*RC1I)
     3                       *(ALDMI+BLCDM2-BLCD2)
     4 +(R1MI*RC2I-R1MI2*RC2I)
     5                       *(ALDMI+BLCD1-BLCDM1)
     6 -(ALDMI+ALRD-ALRDM)
     7 +(CMI*R1MI-1D0/2*CMI-CMI*R1MI2)
     8                       *(BLCDM1+BLCDM2-BLCD1-BLCD2)
     9 +(CPI*R1MI-1D0/2*CPI2*R1MI-1D0/2*CPI)
     .                       *(BLCDM1+BLCD2-BLCD1-BLCDM2)
     . -1D0/2*CPI2*(BLCDM2-BLCD2)
       GUD2=GUD20+GUD21+GUD22
*
       HTTG1=GUU1+2*GUD1+GDD1-RMASS*CMI2
       HTTG2=GUU2+2*GUD2+GDD2-RMASS*CMI2*CP2
       HTTI1=0D0
       HTTI2=0D0
       HTTZ1=0D0
       HTTZ2=0D0
*
       END
 
       SUBROUTINE BHAHST (HSTG,XHSTI1,XHSTI2,HSTZ)
*=======================================================================
       IMPLICIT COMPLEX*16(X)
       IMPLICIT REAL*8(A-H,O-W,Y-Z)
*
       COMMON /BHACHI/ XMZ2,XKAPPA,XCHIS,XCHIT
     &                ,AMZ2,AKAPPA,S,CHIS,CHIS2,T,CHIT,CHIT2
       COMMON /BHACVR/ C,C2,C3,CP,CM,CP2,CM2,CP3,CM3,CPM,CPM2,CPM3
     +                ,CMI,CMI2,CMI3,CPI,CPI2,CPI3
     +                ,ALCP,ALCM,ALPL,ALMI,DLCP,DLCM
       COMMON /BHAQED/ TE,BETTAE,SOFTER,SOFTFR
       COMMON /BHARVR/ R,R2,R3,R4,R5,RI,RI2,R1MI,R1MI2,R1MI3,R1MI4,ALR
       COMMON /BHAVR / CT,C2T,C3T,CC,CCI,CCI2,CCI3,CCI4,CDEL,CDELM
     +                ,ALCC,ALCD,ALCDM,ALMIT,ALPLT
       COMMON /BHAVR1/ RC1I,RC2I,BLCD1,BLCDM1,BLCD2,BLCDM2,TU
       COMMON /BHADVR/ DEL,DELM,DIF,DIF3,ALD,ALDM,ALDPL,ALDMI
     +                ,RD,RDM,ALRD,ALRDM,RMASS
*
       CALL BHAST2
*
** INTERFERENCE BETWEEN RADIATIONS:
** INI-UP (PART); INI-DOWN (PART); FIN-UP
** TERMS WITH 1/Z1
*
       CALL BHAST1 (-1)
       IF (CDEL.GT.0D0.AND.CDELM.GT.0D0) THEN
* REGION ( +,+ )
         KREG1=1
       ELSE IF (CDEL.LT.0D0.AND.CDELM.LT.0D0) THEN
* REGION ( -,- )
         KREG1=-1
       ELSE
* REGION ( -,+ )
         KREG1=0
         GIU1=(-2*CMI*R1MI-CMI*RI+CMI)
     2 *(2*(ALCC+ALCD+ALCDM-ALCP-2*ALR+TE+1)-ALDPL)
     3 +(-2*R*CCI+CMI*RI-2*CCI*RI+2*CP*RI-CMI-C+3)*DEL*DELM
     4 +(2*CP*R1MI+2*CP*RI+2*R1MI)*(2*ALCM-2*ALCC-ALDPL)
     5 +(-8*CCI3*R1MI-6*CCI2-4*CCI2*R1MI2-4*R*CCI2+2*R*CCI+2*R*CCI3
     6 +2*CCI*RI+4*CCI3*R1MI2+4*CCI3+12*CCI2*R1MI)
     7                        *(2*ALCC+ALCD+ALCDM-ALPL-2*ALR+TE+1)
     8 +4*CMI*R1MI+22*CCI*R1MI-58*CCI2*R1MI+32*CCI3*R1MI-6*CP*R1MI
     9 -2*CCI*R1MI2+26*CCI2*R1MI2-16*CCI3*R1MI2-8*R1MI2-3*R*CCI
     1 +10*R*CCI2-6*R*CCI3+3D0/2*CMI*RI-3*CP*RI+1D0/2*CMI-16*CCI
     2 +29*CCI2-16*CCI3+CP
         GID1=-2*(-2*ALMI+ALDPL-2*ALR-BLCD1-BLCDM1)*R1MI*RC2I
     2 +(-CPI*RI+2*CM*RI+CPI-2*CM)*DEL*DELM
     3 +2*(CP-CP*R1MI-R1MI)*(2*ALCP+2*ALR-2*ALCC-ALDPL)
     4 +(3*CPI2*R1MI+2*CPI2*RI-CPI3*R1MI-CPI3*RI-2*CPI*R1MI-2*CPI*RI)
     5 *(2*ALCM-2*ALCC-BLCD1-BLCDM1)
     6 -2*CCI*R1MI+4*CCI2*R1MI+3*C*R1MI+R1MI-2*CCI*R1MI2-2*CCI2*R1MI2
     7 +4*R1MI2+3*R*CCI-R*CCI2-3D0/2*CPI*RI+CPI2*RI+CP*RI+RI
     8 -5D0/2*CPI+2*CCI-2*CCI2-3*CP+1
         GFU1=(3*R+C*R+C+1-CMI-R*CMI)*(2*(ALCP+ALR-ALCC)-ALDPL)
     2 +(2*R*CMI+2*CMI-4+6*R1MI+2*C*R1MI-4*CMI*R1MI)*(-ALMI-ALR)
     3 +4D0*CCI*R1MI-4*R1MI+R*CMI-2*R*CCI-C*R-R-CMI
     4 -2D0*CCI-C+3
       END IF
* FOR (+,+) AND (-,-) REGIONS EXPRESSIONS DIFFER ONLY BY OWERALL SIGN
       IF (KREG1.NE.0) THEN
         GIU1=(-CMI+CMI*RI+2*CMI*R1MI-2*R1MI-2*CP*R1MI-2*CP*RI)*(-ALDMI)
     2 +(4*CCI2*R1MI-4*R1MI+3*R*CCI-2*R*CCI2-3D0/2*CMI*RI
     3 +3*CCI*RI-3*CP*RI-1D0/2*CMI-2*CCI2-CP)*DIF
     4 +(-2*CMI+2*CMI*RI+4*CMI*R1MI+8*CCI3*R1MI+4*CCI2*R1MI2+4*R*CCI2
     5 +6*CCI2-12*CCI2*R1MI-4*CCI3*R1MI2-2*R*CCI-2*R*CCI3-2*CCI*RI
     6 -4*CCI3)*(ALCD-ALCDM)
         GIU1=GIU1*KREG1
         GID1=(3*R1MI+C*R1MI-2*CP-2*R1MI*RC2I)*ALDMI
     2 +(3*CPI2*R1MI+2*CPI2*RI-2*R1MI*RC2I-CPI3*R1MI-CPI3*RI-2*CPI*R1MI
     3 -2*CPI*RI)*(BLCD1-BLCDM1)
     4 +(-3D0/2*CPI*RI+CPI2*RI+CP*RI+1D0*RI-1D0/2*CPI+3*CP-1)*DIF
         GID1=GID1*KREG1
         GFU1=(6*R1MI+3*R*CMI+3*CMI+2*C*R1MI-C*R-C-3*R-4*CMI*R1MI-5)
     2 *ALDMI+(-R*CMI+C*R+R+CMI-C-1)*DIF
         GFU1=GFU1*KREG1
       END IF
*
** INTERFERENCE BETWEEN RADIATIONS:
** INI-UP (PART); INI-DOWN (PART); FIN-DOWN
** TERMS WITH 1/Z2
*
       CALL BHAST1 (1)
       IF (CDEL.GT.0D0.AND.CDELM.GT.0D0) THEN
* REGION ( +,+ )
         KREG2=1
       ELSE IF (CDEL.LT.0D0.AND.CDELM.LT.0D0) THEN
* REGION ( -,- )
         KREG2=-1
       ELSE
* REGION ( -,+ )
         KREG2=0
         GIU2=2*(CMI*R1MI+CMI*RI-CP*R1MI-CP*RI-R1MI-RI)
     2 *(2*ALCP-2*ALCC-ALDPL)
     3 +DEL*DELM*(CMI*RI-2*CP*RI-CMI+2*CP)
     4 -6*CCI*R1MI-4*CCI2*R1MI+6*CP*R1MI+4*R1MI+2*CCI*R1MI2
     5 +2*CCI2*R1MI2-4*R1MI2+R*CCI+R*CCI2-3D0/2*CMI*RI+3*CP*RI+2D0*RI
     6 -1D0/2*CMI+2*CCI+2*CCI2-CP
 
         GID2=(2*R*CCI-CPI*RI+2*CCI*RI+C*RI-RI+CPI-C-3)*DEL*DELM
     2 +(CMI-CMI*RI-2*CMI*R1MI)
     3              *(2*(ALCDM+ALCD-ALMI+ALR+TE+1)-ALDPL-BLCDM2-BLCD2)
     7 +(3*R1MI+C*R1MI-C-1)*(2*ALCM+2*ALR-2*ALCC-ALDPL)
     8 +(3*CPI2*R1MI+CPI+CPI3-CPI3*R1MI-CPI*RI-CPI2-2*CPI*R1MI)
     1                             *(2*ALCM+4*ALR-2*ALCC-BLCDM2-BLCD2)
     2 +(8*CCI3*R1MI+4*CCI2*R1MI2-2*R*CCI-2*R*CCI2-2*R*CCI3-2*CCI*RI
     3 -4*CCI3*R1MI2-4*CCI3)*(2*ALCC+ALCDM+ALCD-ALPL-2*ALR+TE+1)
     4 +4*CMI*R1MI+18*CCI*R1MI+22*CCI2*R1MI+2*CCI*R1MI2
     5 -3*C*R1MI-32*CCI3*R1MI-13*R1MI-26*CCI2*R1MI2
     6 +16*CCI3*R1MI2+8*R1MI2-3*R*CCI+2*R*CCI2+6*R*CCI3
     7 +7D0/2*CPI*RI-2*CCI*RI-CP*RI-RI+1D0/2*CPI-CPI2-4*CCI
     8 -5*CCI2+16*CCI3+3*CP+1
         GFD2=2*CP*(R+1)*(2*(ALCC-ALCM-ALR)+ALDPL)
     2 +(2*(R+1)*RC1I-2*R1MI*RC1I)*(-2*ALMI+4*ALR+ALDPL-BLCDM2-BLCD2)
     4 +(-2*CMI*R1MI+(R+1)*CMI)*(BLCD2+BLCDM2-2*ALR-ALDPL)
     6 +(-R*CPI2+(R+1)*CPI)*(2*ALCM+4*ALR-2*ALCC-BLCD2-BLCDM2)
     8 +(-4*CP*R1MI-4*R1MI+4)*(ALMI-ALR)
     9 +4*CCI*R1MI-4*R1MI+2*CP*R+R*CPI-2*R*CCI-2*R+2*CP-CPI-2*CCI+2
       END IF
* FOR (+,+) AND (-,-) REGIONS EXPRESSIONS DIFFER ONLY BY OWERALL SIGN
       IF (KREG2.NE.0) THEN
         GIU2=(2*CMI*R1MI+2*CMI*RI-2*CP*R1MI-2*CP*RI-2*R1MI-2D0*RI)
     2 *ALDMI+(-3D0/2*CMI*RI+3*CP*RI+2*RI-1D0/2*CMI+CP)*DIF
         GIU2=GIU2*KREG2
         GID2=(2*CMI*R1MI+CMI*RI-CMI)
     2 *(2*(ALCD-ALCDM)+BLCDM2-BLCD2+ALDMI)+(2*CP-C*R1MI-3*R1MI)*ALDMI
     3 +(3*CPI2*R1MI+CPI+CPI3-CPI3*R1MI-CPI*RI-CPI2-2*CPI*R1MI)
     4 *(BLCD2-BLCDM2)
     5 +(8*CCI3*R1MI+4*CCI2*R1MI2-4*CCI3*R1MI2-2*R*CCI-2*R*CCI2-2*R*CCI3
     6 -2*CCI*RI-4*CCI3)*(ALCDM-ALCD)
     9 +(-4*CCI2*R1MI+4*R1MI+3*R*CCI+2*R*CCI2-3D0/2*CPI*RI
     . +3*CCI*RI-CP*RI-RI-1D0/2*CPI+CPI2+2*CCI2-3*CP-1)*DIF
         GID2=GID2*KREG2
         GFD2=(-4*CP*R1MI-4*R1MI+2*CP*(R+1)+4)*ALDMI
     2 +(-2*R1MI*RC1I+2*(R+1)*RC1I)*(BLCD2-ALDMI-BLCDM2)
     3 +(-2*CMI*R1MI+(R+1)*CMI)*(BLCDM2-ALDMI-BLCD2)
     4 +(-R*CPI2+(R+1)*CPI)*(BLCD2-BLCDM2)
     5 +(-2*CP*R-R*CPI+2*R+2*CP+CPI-2)*DIF
         GFD2=GFD2*KREG2
       END IF
*
       GIU0=(2*RI-CMI*RI-CMI)*ALDMI
     2 -2*(ALRDM-ALRD)-2*DIF*(RI-1)
       GIU=GIU0+GIU1+GIU2
       GID0=2*(BLCDM1-BLCD1-ALDMI)*R1MI*RC2I
     2 +(-CMI+CMI*RI+2*CMI*R1MI)*(ALDMI+BLCD2-BLCDM2)
     4 +3*(BLCDM2-BLCD2+BLCD1-BLCDM1)*CPI2*R1MI
     5 +(-CPI-CPI3+CPI2+CPI*RI)*(BLCD2-BLCDM2)
     6 +(CPI3*RI-2*CPI2*RI+2*CPI*RI)*(BLCDM1-BLCD1)
     7 +(CPI3*R1MI+2*CPI*R1MI)*(BLCD2+BLCDM1-BLCD1-BLCDM2)
     9 +DIF*(RI-1)*CPI2+2*DIF*(RI-1)
       GID=GID0+GID1+GID2
       GFU0=(3*R+C*R+1-C)*(ALRDM-ALRD)
     3 +(-4-2*C-6*R-2*C*R-4*CMI*R1MI+2*C*R1MI+3*(R+1)*CMI+6*R1MI)*ALDMI
     5 +3*C*R/RD+R/RD-3*C*R/RDM-R/RDM+(-R*CMI+2*CP*R+CMI-2*CP)*DIF
       GFU=GFU0+GFU1
       GFD0=(-2*CMI*R1MI+(R+1)*CMI)*(ALDMI+BLCD2-BLCDM2)
     2 + (-2*R1MI*RC1I+2*(R+1)*RC1I)*(ALDMI+BLCDM2-BLCD2)
     3 +(-2+4*CP)*(ALRDM-ALRD)
     4 +(2*R-4*CP*R1MI-4*R1MI+2)*(-ALDMI)
     6 +(-R*CPI-CPI+R*CPI2)*(BLCD2-BLCDM2)
     7 +(R-1)*(CPI+2)*DIF
       GFD=GFD0+GFD2
*
       S1=S*R
       XCHIS1=XKAPPA*S1/(S1-XMZ2)
       HSTG=GIU+GID+GFU+GFD+2*RMASS*CP2*CMI
       XHSTI1=(GIU+GID)*XCHIS1+(GFU+GFD+2*RMASS*CP2*CMI)*XCHIS
       XHSTI2=(0D0,0D0)
       HSTZ=0D0
*
       END
 
       SUBROUTINE BHASTR
*=======================================================================
       IMPLICIT COMPLEX*16(X)
       IMPLICIT REAL*8(A-H,O-W,Y-Z)
*
       COMMON /BHARVR/ R,R2,R3,R4,R5,RI,RI2,R1MI,R1MI2,R1MI3,R1MI4,ALR
*
       R2=R*R
       R3=R2*R
       R4=R3*R
       R5=R4*R
       RI=1D0/R
       RI2=RI*RI
       R1MI=1D0/(1-R)
       R1MI2=R1MI*R1MI
       R1MI3=R1MI2*R1MI
       R1MI4=R1MI3*R1MI
       ALR=LOG(R)
*
       END
 
       SUBROUTINE BHAST1 (J)
*=======================================================================
       IMPLICIT COMPLEX*16(X)
       IMPLICIT REAL*8(A-H,O-W,Y-Z)
*
       COMMON /BHAQED/ TE,BETTAE,SOFTER,SOFTFR
       COMMON /BHANUM/ PI,F1,AL2,ZET3
       COMMON /BHADVR/ DEL,DELM,DIF,DIF3,ALD,ALDM,ALDPL,ALDMI
     +               ,RD,RDM,ALRD,ALRDM,RMASS
       COMMON /BHARVR/ R,R2,R3,R4,R5,RI,RI2,R1MI,R1MI2,R1MI3,R1MI4,ALR
       COMMON /BHACVR/ C,C2,C3,CP,CM,CP2,CM2,CP3,CM3,CPM,CPM2,CPM3
     +               ,CMI,CMI2,CMI3,CPI,CPI2,CPI3
     +               ,ALCP,ALCM,ALPL,ALMI,DLCP,DLCM
       COMMON /BHAVR / CT,CT2,CT3,CC,CCI,CCI2,CCI3,CCI4,CDEL,CDELM
     +               ,ALCC,ALCD,ALCDM,ALMIT,ALPLT
*
       IF (J.EQ.1) THEN
         CT= C
         CT2= C2
         CT3= C3
         CC=CP+R*CM
         CDEL =CC*DEL -CM*R
         CDELM=CC*DELM-CM*R
         ALPLT= ALPL
         ALMIT= ALMI
       ELSE IF (J.EQ.-1) THEN
         CT=-C
         CT2= C2
         CT3=-C3
         CC=CM+R*CP
         CDEL =CC*DEL -CP*R
         CDELM=CC*DELM-CP*R
         ALPLT= ALPL
         ALMIT=-ALMI
       ELSE
         CT=0D0
         CT2= 0D0
         CT3= 0D0
         CC=(1D0+R)/2
         CDEL =CC*DEL -1D0/2*R
         CDELM=CC*DELM-1D0/2*R
         ALPLT= -2*AL2
         ALMIT= 0D0
       END IF
*
       CCI =1D0/CC
       CCI2=CCI*CCI
       CCI3=CCI*CCI2
       CCI4=CCI*CCI3
       ALCC=LOG(CC)
** REGULARIZATION
       ALMIN=1D0/2*(ALPLT-TE-1)+AL2+ALR-ALCC
       ALCD =MAX( ALMIN, LOG(ABS(CDEL )) )
       ALCDM=MAX( ALMIN, LOG(ABS(CDELM)) )
*
       END
 
       SUBROUTINE BHAST2
*=======================================================================
       IMPLICIT COMPLEX*16(X)
       IMPLICIT REAL*8(A-H,O-W,Y-Z)
*
       COMMON /BHADVR/ DEL,DELM,DIF,DIF3,ALD,ALDM,ALDPL,ALDMI
     +               ,RD,RDM,ALRD,ALRDM,RMASS
       COMMON /BHARVR/ R,R2,R3,R4,R5,RI,RI2,R1MI,R1MI2,R1MI3,R1MI4,ALR
       COMMON /BHACVR/ C,C2,C3,CP,CM,CP2,CM2,CP3,CM3,CPM,CPM2,CPM3
     +               ,CMI,CMI2,CMI3,CPI,CPI2,CPI3
     +               ,ALCP,ALCM,ALPL,ALMI,DLCP,DLCM
       COMMON /BHAVR1/ RC1I,RC2I,BLCD1,BLCDM1,BLCD2,BLCDM2,TU
*
       RC1=R-CP
       RC2=1-R*CP
       IF (RC1.NE.0D0) RC1I=1D0/RC1
       IF (RC2.NE.0D0) RC2I=1D0/RC2
       BDEL1 =CM  +CP*(1-R)*DELM
       BDELM1=CM  +CP*(1-R)*DEL
       BDEL2 =CM*R-CP*(1-R)*DEL
       BDELM2=CM*R-CP*(1-R)*DELM
       BLCD1  =LOG(ABS(BDEL1 ))
       BLCDM1 =LOG(ABS(BDELM1))
       BLCD2  =LOG(ABS(BDEL2 ))
       BLCDM2 =LOG(ABS(BDELM2))
       DETERM=1-4*R*R1MI2*CM*CPI
       SDET=SQRT(ABS(DETERM))
       IF (DETERM.LT.0D0) THEN
         TU=4D0/(SDET)*ATAN(DIF/SDET)
       ELSE
         TU=2D0/(SDET)*LOG(MAX(10D-16,ABS(DIF-SDET))/(DIF+SDET))
       END IF
*
       END
 
       SUBROUTINE BHASTF
*=======================================================================
       IMPLICIT COMPLEX*16(X)
       IMPLICIT REAL*8(A-H,O-W,Y-Z)
*
       PARAMETER (NP=20)
       COMMON /BHACTV/ ACOL,SINAC2,COSAC2
     +                ,RMIN,RSFT,YMIN,YMAX,RACUT,RX1A,RX2A
       DIMENSION ALE1(NP),ALE2(NP),ALA1(NP),ALA2(NP)
       COMMON /BHAFI1/ ALE1,ALE2,ALA1,ALA2,NPOINT
       COMMON /BHAFI2/ KREG
       EXTERNAL BHAL1,BHAL2
*
       NPOINT=NP
       REPS1 = 1.D-5
       AEPS1 = 1.D-4
       KREG=2
       ASTEP=(RACUT-RMIN)/(NP-1)
       S1=0.D0
       S2=0.D0
       H=ASTEP/5
       ALA1(NP)=0.D0
       ALA2(NP)=0.D0
       A=RACUT
       DO 100 I=1,NP-1
         B=A
         A=A-ASTEP
         CALL SIMPS(A,B,H,REPS1,AEPS1,BHAL1,X,SI,AIHH,AIHA)
         S1=S1+SI
         ALA1(NP-I)=S1
         CALL SIMPS(A,B,H,REPS1,AEPS1,BHAL2,X,SI,AIHH,AIHA)
         S2=S2+SI
         ALA2(NP-I)=S2
  100  CONTINUE
*
       KREG=3
       ASTEP=(YMIN-RMIN)/(NP-1)
       S1=0.D0
       S2=0.D0
       ALE1(NP)=0.D0
       ALE2(NP)=0.D0
       H=ASTEP/5
       A=YMIN
       DO 200 I=1,NP-1
         B=A
         A=A-ASTEP
         CALL SIMPS(A,B,H,REPS1,AEPS1,BHAL1,X,SI,AIHH,AIHA)
         S1=S1+SI
         ALE1(NP-I)=S1
         CALL SIMPS(A,B,H,REPS1,AEPS1,BHAL2,X,SI,AIHH,AIHA)
         S2=S2+SI
         ALE2(NP-I)=S2
  200  CONTINUE
*
       END
 
       FUNCTION BHAL1(Z)
*=======================================================================
       IMPLICIT COMPLEX*16(X)
       IMPLICIT REAL*8(A-H,O-W,Y-Z)
       COMMON /BHACTV/ ACOL,SINAC2,COSAC2
     +                ,RMIN,RSFT,YMIN,YMAX,RACUT,RX1A,RX2A
       COMMON /BHAFI2/ KREG
*
       Z1MI=1D0/(1-Z)
       IF(KREG.EQ.2) THEN
         RATZ2=((1+Z)*Z1MI)**2
         ARG=SQRT(MAX(0D0,((1-SINAC2*RATZ2)/COSAC2)))
       ELSE
         ARG=(1-2*YMIN+Z)*Z1MI
       END IF
       BHAL1=-(1+Z**2)*Z1MI*LOG( MAX(1.D-32,ABS((1-ARG)/(1+ARG))) )
*
       END
 
       FUNCTION BHAL2(Z)
*=======================================================================
       IMPLICIT COMPLEX*16(X)
       IMPLICIT REAL*8(A-H,O-W,Y-Z)
       COMMON /BHACTV/ ACOL,SINAC2,COSAC2
     +                ,RMIN,RSFT,YMIN,YMAX,RACUT,RX1A,RX2A
       COMMON /BHAFI2/ KREG
*
       Z1MI=1D0/(1-Z)
       RATZ2=((1+Z)*Z1MI)**2
       IF(KREG.EQ.2) THEN
         ARG=SQRT(MAX(0D0,((1-SINAC2*RATZ2)/COSAC2)))
       ELSE
         ARG=(1-2*YMIN+Z)*Z1MI
       END IF
       BHAL2=(1+Z)*LOG( MAX(1.D-32,ABS((RATZ2-ARG)/(RATZ2+ARG))) )
*
       END
 
       SUBROUTINE BHAFIN (R,SFIN,AFIN)
*=======================================================================
* ROUTINE CALCULATES FINAL COS-EVEN AND COS-ODD FACTORS
*-----------------------------------------------------------------------
       IMPLICIT COMPLEX*16(X)
       IMPLICIT REAL*8(A-H,O-W,Y-Z)
*
       COMMON /BHAFLG/ IFIT,IPART,IAFB,IFINAL,INTERF,IPHOT2
       COMMON /BHANUM/ PI,F1,AL2,ZET3
       COMMON /BHAPHY/ ALFAI,AL1PI,ALQE2,GFERMI,CSIGNB
       COMMON /BHAQED/ TE,BETTAE,SOFTER,SOFTFR
       COMMON /BHACTV/ ACOL,SINAC2,COSAC2
     +                ,RMIN,RSFT,YMIN,YMAX,RACUT,RX1A,RX2A
       PARAMETER (NP=20)
       DIMENSION ALE1(NP),ALE2(NP),ALA1(NP),ALA2(NP)
       COMMON /BHAFI1/ ALE1,ALE2,ALA1,ALA2,NPOINT
*
       IF (IFINAL.EQ.0) THEN
         SFIN=1D0
         AFIN=1D0
       ELSE
*
       ALIM=RMIN/R
       IF(ALIM.GE.YMIN) THEN
         A=ALIM
         SFIN=0D0
         AFIN=0D0
       ELSE
         CALL INTERB(NPOINT,RX1A,YMIN,ALE1,ALIM,ALE1I)
         CALL INTERB(NPOINT,RX1A,YMIN,ALE2,ALIM,ALE2I)
         D1=ALIM-YMIN
         D2=YMIN-1
         SFIN=ALQE2*(ALE1I+D1*(D1/2+D2))
         AFIN=ALQE2*(ALE1I+ALE2I)
         A=YMIN
       END IF
*
       ALR=LOG(R)
       ADD=ALQE2*ALR
       BETE=BETTAE+2*ADD
       AM1=1-A
       A2=A*A
       ALNA=LOG(A)
       IF(AM1.LE.1D-16) THEN
         FINS=0D0
       ELSE
         SFTP=1+SOFTFR+3D0/2*ADD
         FINS=AM1**BETE*SFTP
       END IF
       FIN=FINS+BETE*(A2+2*A-3)/4-ALQE2*2*DDILOG(AM1)
       SFIN=SFIN+FIN+ALQE2*(ALNA*(A2/2+A)-1D0/4*A2-A+5D0/4)
       AFIN=AFIN+FIN+ALQE2*(A2/2-A+1D0/2)
*
       IF(ALIM.LT.RACUT) THEN
         CALL INTERB(NPOINT,RX1A,RACUT,ALA1,ALIM,ALA1I)
         CALL INTERB(NPOINT,RX1A,RACUT,ALA2,ALIM,ALA2I)
         B=-(1+SINAC2)/COSAC2
         SQR=SQRT(MAX(0D0,(ALIM**2+2*B*ALIM+1)))
         SFIN=SFIN-ALQE2*(ALA1I+1D0/2
     +     *((ALIM+B)*SQR-(1-B*B)*LOG(ABS((RACUT+B)/(SQR+ALIM+B)))) )
         AFIN=AFIN-ALQE2*(ALA1I+ALA2I)
       END IF
       END IF
*
       END
 
       SUBROUTINE BHASFT (SFTSS,SFTST,SFTTT)
*=======================================================================
**   ROUTINE CALCULATES VIRTUAL AND SOFT PHOTON CORRECTIONS
**   TO T^2 PART AND ST-INTERFERENCE
**   AND SOFT PHOTON COR. TO S^2  INITIAL-FINAL INTERF. PART
**     IGNORED AT THE MOMENT )
*- T-CHANNEL**2 AND S-T INTERFERENCE
*     BORN + SOFT+VERTEX+BOXES (O(ALPHA))+EXPONENTIATION               *
*     AND                                                              *
*     S-CHANNEL**2                                                     *
*     SOFT+BOXES (INITIAL-FINAL INTERFERENCE O(ALPHA))                 *
*=======================================================================
       IMPLICIT COMPLEX*16 (X)
       IMPLICIT REAL*8 (A-H,O-W,Y-Z)
*
       COMMON /BHABRN/ ABORN0,SBORN0
     &                ,BRNSTG,BRNSTI,BRNSTZ,BRNTTG,BRNTTI,BRNTTZ
       COMMON /BHACHI/ XMZ2,XKAPPA,XCHIS,XCHIT
     &                ,AMZ2,AKAPPA,S,CHIS,CHIS2,T,CHIT,CHIT2
       COMMON /BHACVR/ C,C2,C3,CP,CM,CP2,CM2,CP3,CM3,CPM,CPM2,CPM3
     +               ,CMI,CMI2,CMI3,CPI,CPI2,CPI3
     +               ,ALCP,ALCM,ALPL,ALMI,DLCP,DLCM
       COMMON /BHANUM/ PI,F1,AL2,ZET3
       COMMON /BHAQED/ TE,BETTAE,SOFTER,SOFTFR
       COMMON /BHAPHY/ ALFAI,AL1PI,ALQE2,GFERMI,CSIGNB
       COMMON /BHACTV/ ACOL,SINAC2,COSAC2
     +                ,RMIN,RSFT,YMIN,YMAX,RACUT,RX1A,RX2A
       COMMON /BHAFLG/ IFIT,IPART,IAFB,IFINAL,INTERF,IPHOT2
       COMMON /BHACPL/ VEEA,XVEEI,VEEZ,AEEA,XAEEI,AEEZ
     &                ,CSTG,XCSTI1,XCSTI2,XCSTZ
     &                ,CTTG1,CTTG2,XCTTI1,XCTTI2,CTTZ1,CTTZ2
*
       ALE=LOG(1D0-RSFT)
       DSINT=-1D0/2*ALMI*ALPL+DLCP-DLCM-2*ALMI*ALE
       DSE  =-F1-1D0/4*TE**2+1D0/4+TE*ALE
       DSOFT=2*DSE+DSINT
       DVIRSS=3D0/4*TE +1D0/4*TE**2 -1D0/2+2*F1
       IF (INTERF.EQ.0) THEN
         CORSS=0D0
       ELSE
         CORSS=ALQE2*2*DSINT
       END IF
       BRNSS0=((1+C2)*SBORN0+2*C*ABORN0)
       SFTSS=BRNSS0*CORSS
       IF (IPART.EQ.1) THEN
         SFTST=0D0
         SFTTT=0D0
       ELSE
         Dcorst=alqe2*(-alpl*almi+2*dlcp-2*dlcm+
     +                3.*te-1.+f1+1.5*alcm-0.5*alcm**2)
         Dcortt=alqe2*(-alpl*almi+2*dlcp-2*dlcm+
     +                3.*te-1.-2.*f1+3.*alcm-alcm**2)
         BETINT=-4.*ALQE2*ALMI
         BET=2.*BETTAE+BETINT
         IF(BET.LE.1D-10) STOP 'BETTAAA.....'
         CORST=(1.-RSFT)**BET*(1.+DCORST)-1.
         CORTT=(1.-RSFT)**BET*(1.+DCORTT)-1.
*         CORST=ALE*BET+DCORST
*         CORTT=ALE*BET+DCORTT
         SFTST=(BRNSTG+BRNSTI+BRNSTZ)*CORST
     + -6*PI*ALQE2*CP2*CMI*DIMAG(XCHIS*XCSTI1+XCHIS*DCONJG(XCHIT)*XCSTZ)
         SFTTT=(BRNTTG+BRNTTI+BRNTTZ)*CORTT
       END IF
*
       END
 
       SUBROUTINE BHABOX (BOXSS,BOXST,BOXTT)
*=======================================================================
       IMPLICIT COMPLEX*16 (X)
       IMPLICIT REAL*8(A-H,O-W,Y-Z)
*
       COMMON /BHANUM/ PI,F1,AL2,ZET3
       COMMON /BHAPHY/ ALFAI,AL1PI,ALQE2,GFERMI,CSIGNB
       COMMON /BHACHI/ XMZ2,XKAPPA,XCHIS,XCHIT
     &                ,AMZ2,AKAPPA,S,CHIS,CHIS2,T,CHIT,CHIT2
       COMMON /BHACVR/ C,C2,C3,CP,CM,CP2,CM2,CP3,CM3,CPM,CPM2,CPM3
     +               ,CMI,CMI2,CMI3,CPI,CPI2,CPI3
     +               ,ALCP,ALCM,ALPL,ALMI,DLCP,DLCM
       COMMON /BHACPL/ VEEA,XVEEI,VEEZ,AEEA,XAEEI,AEEZ
     &                ,CSTG,XCSTI1,XCSTI2,XCSTZ
     &                ,CTTG1,CTTG2,XCTTI1,XCTTI2,CTTZ1,CTTZ2
       COMMON /BHABXF/ XPI,XZ,XLZ,XLZM,XL1Z,XL1ZP,XDLZ,XDLZM,XDLZ1
       COMMON /BHAFLG/ IFIT,IPART,IAFB,IFINAL,INTERF,IPHOT2
*
       XLCPZ=LOG(1-CP/XZ)
       XLCMZ=LOG(1-CM/XZ)
       XLCMZP=LOG(1+CM/XZ)
       XDLCP=XSPENZ(CP/XZ)
       XDLCM =XSPENZ( CM/XZ)
       XDLCMM=XSPENZ(-CM/XZ)
       XDLZCP=XDLCP+(ALCP-XLZ)*(XLCPZ-1D0/2*(ALCP-XLZ))-F1
       XDLZCM=XDLCM+(ALCM-XLZ)*(XLCMZ-1D0/2*(ALCM-XLZ))-F1
*
       XSG=ALMI*(-XPI)
       XD1SG=XSG+1D0/(2*CP)*(ALCM+XPI)-C/(4*CP2)*ALCM*(ALCM+2*XPI)
       XD2SG=XSG-1D0/(2*CM)*(ALCP+XPI)-C/(4*CM2)*ALCP*(ALCP+2*XPI)
*b
       XSZ=ALMI*(2*XL1Z+XLZ)+XDLZCM-XDLZCP
*z
       XSZ=1D0/2*ALMI*(ALPL+4*XL1Z)+XDLCM-XDLCP
     2 +(ALCM-XLZ)*XLCMZ-(ALCP-XLZ)*XLCPZ
       XD1SZ=XSZ+(1-XZ)*CPI*(ALCM-XL1Z-XLZ+XZ*XL1Z+( C+XZ)*CPI
     2 *(XDLZ-XDLCM+(ALCM-XLZ)*(XL1Z-XLCMZ)))
       XD2SZ=XSZ-(1-XZ)*CMI*(ALCP-XL1Z-XLZ+XZ*XL1Z+(-C+XZ)*CMI
     2 *(XDLZ-XDLCP+(ALCP-XLZ)*(XL1Z-XLCPZ)))
*- S-CHANNEL BOX
       IF (INTERF.EQ.0) THEN
         BOXSS=0D0
       ELSE
         BOXSSG=DREAL(VEEA*(XD1SG*CP2+XD2SG*CM2)
     2            +AEEA*(XD1SG*CP2-XD2SG*CM2))
         BOXSSI=DREAL((XVEEI+XAEEI)*(DCONJG(XD1SG)+XD1SZ)*CP2*XCHIS
     3            +(XVEEI-XAEEI)*(DCONJG(XD2SG)+XD2SZ)*CM2*XCHIS)
         BOXSSZ=DREAL(VEEZ*(XD1SZ*CP2+XD2SZ*CM2)
     2            +AEEZ*(XD1SZ*CP2-XD2SZ*CM2))*CHIS2
         BOXSS=ALQE2*4*(BOXSSG+BOXSSI+BOXSSZ)
       END IF
*- T-CHANNEL BOX AND ST-INTERFERENCE
       IF (IPART.EQ.1) THEN
         BOXST=0D0
         BOXTT=0D0
       ELSE
         XTG=(ALCP+XPI)*ALCM
         XD1TG=XTG
     2       +CM/(2*CP)*(ALCM+XPI)+(1-CP2)/(4*CP2)*ALCM*(ALCM+2*XPI)
         XD3TG=XTG-CM/2*ALMI+(1-CP2)/4*(ALMI**2+PI**2)
         XTZ=(ALCP+XPI)*(2*XLCMZP+XLZ)+XDLZ1-XDLZCP
         XD1TZ=XTZ-(CM+XZ)*CPI*(-LOG(-CM-XZ)-XZ/CM*XLCMZP
     2 +(1+CP+XZ)/CP*(XDLCMM-XDLZM-XLZM*(XLCMZP-XL1ZP+XLZ)))
         XD3TZ=XTZ+(CM+XZ)*(-ALCP+LOG(CM+XZ)+XZ/CM*XLCMZP
     2 +(-1-CP+XZ)*(XDLCMM-XDLCP+(ALCP-XLZ)*(XLCMZP-XLCPZ)))
*
         BOXSTG=DREAL(CSTG*(XD1SG+DCONJG(XD1TG)))
         BOXSTI=DREAL(XCSTI1*XCHIS*(XD1SZ+DCONJG(XD1TG))
     2                  + XCSTI2* CHIT*(XD1TZ+DCONJG(XD1SG)))
         BOXSTZ=DREAL(XCSTZ*CHIT*XCHIS*(XD1SZ+DCONJG(XD1TZ)))
         BOXST=-ALQE2*4*(BOXSTG+BOXSTI+BOXSTZ)*CP2*CMI
         BOXTTG=DREAL(CTTG1*XD3TG+CTTG2*XD1TG*CP2)*CMI2
         BOXTTI=DREAL(XCTTI1*(XD3TG+DCONJG(XD3TZ))*CMI2
     2             + XCTTI2*(XD1TG+DCONJG(XD1TZ))*CP2*CMI2)*CHIT
         BOXTTZ=DREAL(CTTZ1*XD3TZ+CTTZ2*XD1TZ*CP2)*CMI2*CHIT2
         BOXTT=ALQE2*4*(BOXTTG+BOXTTI+BOXTTZ)
       END IF
*
       END
 
       SUBROUTINE BHABNS (R1,R2,SBORN,ABORN)
*=======================================================================
       IMPLICIT COMPLEX*16 (X)
       IMPLICIT REAL*8(A-H,O-W,Y-Z)
*
       COMMON /BHAELE/ AME,AME2,QE,QEM,QE2,COMB1,COMB2,COMB3
       COMMON /BHACPL/ VEEA,XVEEI,VEEZ,AEEA,XAEEI,AEEZ
     &                ,CSTG,XCSTI1,XCSTI2,XCSTZ
     &                ,CTTG1,CTTG2,XCTTI1,XCTTI2,CTTZ1,CTTZ2
       COMMON /BHACHI/ XMZ2,XKAPPA,XCHIS,XCHIT
     &                ,AMZ2,AKAPPA,S,CHIS,CHIS2,T,CHIT,CHIT2
*
       S1=S*R1
       S2=S*R2
       XCHIS1=XKAPPA*S1/(S1-XMZ2)
       XCHIS2=XKAPPA*S2/(S2-XMZ2)
       AME2S1=AME2/S1
       ABSCH2=DREAL(XCHIS1*DCONJG(XCHIS2))
       THRESH=SQRT(MAX(1D0-4D0*AME2S1,0D0))*(1D0+2D0*AME2S1)
*- BORN CROSS-SECTION
       SBORN=THRESH*(VEEA+DREAL(XVEEI*(XCHIS1+XCHIS2))
     & +VEEZ*ABSCH2)/R1
*- BORN ASYMMETRY
       ABORN=THRESH*(AEEA+DREAL(XAEEI*(XCHIS1+XCHIS2))
     & +AEEZ*ABSCH2)/R1
*
       END
 
       SUBROUTINE BHABNT (BRNST0,BRNTT0)
*================================================================
       IMPLICIT COMPLEX*16(X)
       IMPLICIT REAL*8 (A-H,O-W,Y-Z)
*
       COMMON /BHACHI/ XMZ2,XKAPPA,XCHIS,XCHIT
     &                ,AMZ2,AKAPPA,S,CHIS,CHIS2,T,CHIT,CHIT2
       COMMON /BHACPL/ VEEA,XVEEI,VEEZ,AEEA,XAEEI,AEEZ
     &                ,CSTG,XCSTI1,XCSTI2,XCSTZ
     &                ,CTTG1,CTTG2,XCTTI1,XCTTI2,CTTZ1,CTTZ2
       COMMON /BHABRN/ ABORN0,SBORN0
     &                ,BRNSTG,BRNSTI,BRNSTZ,BRNTTG,BRNTTI,BRNTTZ
*
       U=S-T
       U2DST=-4.*U**2/(S*T)
       BRNSTG=U2DST*CSTG
       BRNSTI=U2DST*DREAL(XCHIT*XCSTI2+XCHIS*XCSTI1)
       BRNSTZ=U2DST*DREAL(XCHIS*DCONJG(XCHIT)*XCSTZ)
       BRNST0=BRNSTG+BRNSTI+BRNSTZ
*
       U2DT2=(U/T)**2
       S2DT2=(S/T)**2
       BRNTTG=2.*(S2DT2*CTTG1+U2DT2*CTTG2)
       BRNTTI=4.*DREAL((S2DT2*XCTTI1+U2DT2*XCTTI2)*XCHIT)
       BRNTTZ=2.*(S2DT2*CTTZ1+U2DT2*CTTZ2)*CHIT2
       BRNTT0=BRNTTG+BRNTTI+BRNTTZ
*
       END
 
       SUBROUTINE BHABBB (THETL,CROSB)
*================================================================
       IMPLICIT COMPLEX*16(X)
       IMPLICIT REAL*8 (A-H,O-W,Y-Z)
*
       COMMON /BHANUM/ PI,F1,AL2,ZET3
       COMMON /BHAELE/ AME,AME2,QE,QEM,QE2,COMB1,COMB2,COMB3
       COMMON /BHAPHY/ ALFAI,AL1PI,ALQE2,GFERMI,CSIGNB
       COMMON /BHACHI/ XMZ2,XKAPPA,XCHIS,XCHIT
     &                ,AMZ2,AKAPPA,S,CHIS,CHIS2,T,CHIT,CHIT2
       COMMON /BHACPL/ VEEA,XVEEI,VEEZ,AEEA,XAEEI,AEEZ
     &                ,CSTG,XCSTI1,XCSTI2,XCSTZ
     &                ,CTTG1,CTTG2,XCTTI1,XCTTI2,CTTZ1,CTTZ2
       COMMON /BHABRN/ ABORN0,SBORN0
     &                ,BRNSTG,BRNSTI,BRNSTZ,BRNTTG,BRNTTI,BRNTTZ
       COMMON /BHAFLG/ IFIT,IPART,IAFB,IFINAL,INTERF,IPHOT2
*
       RMZ2=AMZ2/S
       CL=COS(THETL/180*PI)
       CL=MIN(CL, 1D0-AME2/S)
       CL=MAX(CL,-1D0+AME2/S)
       CL2=CL*CL
*
       SBSS=VEEA+2.*DREAL(XVEEI*XCHIS)+VEEZ*CHIS2
       ABSS=AEEA+2.*DREAL(XAEEI*XCHIS)+AEEZ*CHIS2
       BSS0=(SBSS*(CL2*CL/3+CL)+ABSS*CL2)
*
       CML=(1D0-CL)/2
       CPL=1D0-CML
       ALCLM=LOG(1D0-CL)
       ALRC=LOG(RMZ2+CML)
       AL  =LOG(RMZ2+1D0/2)
*- C-INTEGRALS
       FUN1=-2*ALCLM-(CL2+6*CL)/4
       FUN2=-2*(RMZ2+1)**2*(ALRC-AL)-CL*RMZ2-CL2/4-3D0/2*CL
       FUN3=2*CL/CML
       FUN4=4*ALCLM+CL-4+2D0/CML
       FUN5=2D0/RMZ2*(ALRC-AL-ALCLM)
       FUN6=2D0/RMZ2*((RMZ2+1)**2*(ALRC-AL)-ALCLM)+CL
       FUN7=2D0/(RMZ2+CML)-2D0/(RMZ2+1D0/2)
       FUN8=2*(RMZ2+1)**2*(1D0/(RMZ2+CML)-1D0/(RMZ2+1D0/2))
     2 +4*(RMZ2+1)*(ALRC-AL)+CL
       BSTG=-4*FUN1*CSTG
       BSTI=-4*DREAL(FUN2*AKAPPA*XCSTI2+FUN1*XCHIS*XCSTI1)
       BSTZ=-4*FUN2*AKAPPA*DREAL(XCHIS*XCSTZ)
       BST0=BSTG+BSTI+BSTZ
       BTTG=2*(FUN3*CTTG1+FUN4*CTTG2)
       BTTI=4*DREAL(FUN5*XCTTI1+FUN6*XCTTI2)*AKAPPA
       BTTZ=2*(FUN7*CTTZ1+FUN8*CTTZ2)*AKAPPA**2
       BTT0=BTTG+BTTI+BTTZ
       IF (IPART.EQ.0) THEN
         CROSB=3D0/8*(BSS0+BST0+BTT0)*CSIGNB/S
       ELSE IF (IPART.EQ.1) THEN
         CROSB=3D0/8*BSS0*CSIGNB/S
       ELSE IF (IPART.EQ.2) THEN
         CROSB=3D0/8*BTT0*CSIGNB/S
       ELSE
         CROSB=3D0/8*BST0*CSIGNB/S
       END IF
*
       END
