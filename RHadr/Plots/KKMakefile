#=============================================================================
# The example of ploting in batch program
#   this one will plot R(s), but more complicated can be costructed
#   make SkyLine
#   make Plot2b      Many distribs...
#   make Plot2c      Many distribs...
#   make Plot3a      Many distribs...
#   make Plot3b      Many distribs...
#-----------------------------------------------------------------------------
# The other ploting ROOT scripts are activated as follows:
#   root Fig0.C      xcheck of normalization procedure
#   root Fig1.C      xsection(nphot), dsig/d(theta_gamma)
#   root Fig1b.C     Pions, pT and CoTheta 
#   root Fig2.C      Q2(pions) with various cuts
#   root Fig2b.C     Q2 distr. 2pi versus muons
#   root Fig2c.C     Q2 distr. NEW
#   root Fig3.C      Higer order effects		
#-----------------------------------------------------------------------------
# The input root files with histograms are in ../demoC/
# Note that variable RPATH for Root has to be readjusted
#=============================================================================
MAKE    = make -f KKMakefile
.SUFFIXES:  .o .c .cxx .f .l  .s  .sh  .h  .a  .C
#-----------------------------------------------------------------------------
#  Root 
#RPATH = /home/jadach/root
#  Root  libraries for linker
#RLIB= -L$(RPATH)/lib -lCore -lCint -lHist -lGraf -lGraf3d -lGpad -lTree -lRint -lPostscript -lMatrix -lPhysics -lm -ldl -lpthread -rdynamic
#FLIB=   -lg2c
########################################################################
########################################################################
###=== SLC5 on thep07
#ROOTINCDIR = /usr/local/root/include
#ROOTLIBDIR = /usr/local/root/lib
#ROOTLIBS = -lCore -lCint -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lTree -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread
#ROOTAUXLIBS = -pthread -lm -ldl -rdynamic
#FLIB = -lgfortran -L/usr/lib/gcc/x86_64-redhat-linux/4.1.2 -L/usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../lib64 -L/lib/../lib64 -L/usr/lib/../lib64 -lgfortranbegin -lm -lgcc_s
###=== SLC5 laptop
ROOTINCDIR = /usr/include/root
ROOTLIBDIR = /usr/lib64/root
ROOTLIBS = -lCore -lCint -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lTree -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread
FLIB     = -lgfortran
###===
RLIB     = -L$(ROOTLIBDIR)/ $(ROOTLIBS) $(ROOTAUXLIBS)
##======================================================================
#####  f77 compiler
# forbid underscore completely       -fno-second-underscore
# forbid double underscore only      -fno-underscoring
FFLAGS  =  -O -fno-second-underscore -fno-automatic -ffixed-line-length-132 -fbackslash
F77 = g77
#  Fortran libraries for linker
#======================================================================
#####  c++ compiler
#CXXFLAGS    = -g -ansi -pedantic
#CXXFLAGS    = -O -Wall -fPIC -D_REENTRANT -I/home/jadach/root/include
#CXXFLAGS    = -O  -ansi -Wall -fPIC -D_REENTRANT -I$(RPATH)/include
#CXXFLAGS    =  -g
CXXFLAGS    =  -g -O -I$(ROOTINCDIR)
CXX         =  g++
#CXX         =  insure
#CXX         =  codewizard
CLD         =  $(CXX)
#-----------------------------
# Compile all c++ files
#-----------------------------
.cxx.o:
	$(CXX) $(CXXFLAGS) -c $<
.f.o:
	$(F77) $(FFLAGS) -c $<
.c.o:
	gcc -c $<
#================================================================================
SRCLIST= "../KK2f ../glibk ../jetset ../bornv "
#----------------------
EXT_LIB0  = ../../KKsem/KKsem.a
EXT_SRC0  = ../../KKsem/*.f  ../../KKsem/*.h
$(EXT_LIB0): $(EXT_SRC0)
	(cd ../../KKsem; $(MAKE))
#############################################################
EXT_LIB1  = ../../KK2f/KK2f.a
EXT_SRC1  = ../../KK2f/*.f		../../KK2f/*.h
EXT_LIB2  = ../../glibk/glibk.a
EXT_SRC2  = ../../glibk/*.f	../../glibk/*.h
EXT_LIB3  = ../../jetset/jetset.a
EXT_SRC3  = ../../jetset/*.f
EXT_LIB4t  = ../../bornv/bornv-tabs.a
EXT_LIB4d  = ../../bornv/bornv-dizet.a
EXT_SRC4  = ../../bornv/*.f	../../bornv/*.h
EXT_LIB5  = ../../tauola/glib.a
EXT_SRC5  = ../../tauola/*.f
EXT_LIB6  = ../../photos/glib.a
EXT_SRC6  = ../../photos/photos.f	
EXT_LIB7  = ../../dizet/dizet.a
EXT_SRC7  = ../../dizet/*.f
###########
$(EXT_LIB1): $(EXT_SRC1)
	cd ../../KK2f;   $(MAKE)
$(EXT_LIB2): $(EXT_SRC2)
	cd ../../glibk;  $(MAKE)
$(EXT_LIB3): $(EXT_SRC3)
	cd ../../jetset; $(MAKE)
$(EXT_LIB4t): $(EXT_SRC4)
	cd ../../bornv;  $(MAKE)
$(EXT_LIB4d): $(EXT_SRC4)
	cd ../../bornv;  $(MAKE)
$(EXT_LIB5): $(EXT_SRC5)
	cd ../../tauola; $(MAKE)
$(EXT_LIB6): $(EXT_SRC6)
	cd ../../photos; $(MAKE)
$(EXT_LIB7): $(EXT_SRC7)
	cd ../../dizet;  $(MAKE)
#======================================================================================
#### Make your own choice of the two choices below, see comments on two EW modes above
EXT_LIBRARYt = $(EXT_LIB1) $(EXT_LIB2) $(EXT_LIB3) $(EXT_LIB4t) $(EXT_LIB5) $(EXT_LIB6)
EXT_LIBRARYd = $(EXT_LIB1) $(EXT_LIB2) $(EXT_LIB3) $(EXT_LIB4d) $(EXT_LIB5) $(EXT_LIB6) $(EXT_LIB7)
# For plots we actualy using these ones:
EXT_LIBRARY =  $(EXT_LIB4t) $(EXT_LIB1) $(EXT_LIB3)
EXT_LIBRARY3 = $(EXT_LIB0) $(EXT_LIB1) $(EXT_LIB2) $(EXT_LIB3) $(EXT_LIB4t) $(EXT_LIB5) $(EXT_LIB6)
#======================================================================================
MAIN1 = SkyLine
OBJECTS1 = $(MAIN1).o
$(MAIN1).exe:                $(OBJECTS1) $(EXT_LIBRARY3)
	g++ -o  $(MAIN1).exe $(OBJECTS1) $(EXT_LIBRARY3)  $(RLIB) $(FLIB)
$(MAIN1):	$(MAIN1).exe
	./$(MAIN1).exe
#=======================================================================================
MAIN2 = Plot2b
OBJECTS2 = $(MAIN2).o
$(MAIN2).exe:                $(OBJECTS2) $(EXT_LIBRARY3)
	g++ -o  $(MAIN2).exe $(OBJECTS2) $(EXT_LIBRARY3)  $(RLIB) $(FLIB)
$(MAIN2):	$(MAIN2).exe
	./$(MAIN2).exe
#=======================================================================================
MAIN3 = Plot2c
OBJECTS3 = $(MAIN3).o
$(MAIN3).exe:                $(OBJECTS3) $(EXT_LIBRARY3)
	g++ -o  $(MAIN3).exe $(OBJECTS3) $(EXT_LIBRARY3)  $(RLIB) $(FLIB)
$(MAIN3):	$(MAIN3).exe
	./$(MAIN3).exe
#=======================================================================================
MAIN4 = Plot3a
OBJECTS4 = $(MAIN4).o
$(MAIN4).exe:                $(OBJECTS4) $(EXT_LIBRARY3)
	g++ -o  $(MAIN4).exe $(OBJECTS4) $(EXT_LIBRARY3)  $(RLIB) $(FLIB)
$(MAIN4):	$(MAIN4).exe
	./$(MAIN4).exe
#=======================================================================================
MAIN5 = Plot3b
OBJECTS5 = $(MAIN5).o
$(MAIN5).exe:                $(OBJECTS5) $(EXT_LIBRARY3)
	g++ -o  $(MAIN5).exe $(OBJECTS5) $(EXT_LIBRARY3)  $(RLIB) $(FLIB)
$(MAIN5):	$(MAIN5).exe
	./$(MAIN5).exe
#=======================================================================================
MAIN6 = Plot3m
OBJECTS6 = $(MAIN6).o
$(MAIN6).exe:                $(OBJECTS6) $(EXT_LIBRARY3)
	g++ -o  $(MAIN6).exe $(OBJECTS6) $(EXT_LIBRARY3)  $(RLIB) $(FLIB)
$(MAIN6):	$(MAIN6).exe
	./$(MAIN6).exe
#=======================================================================================
MAIN7 = Plot3f
OBJECTS7 = $(MAIN7).o
$(MAIN7).exe:                $(OBJECTS7) $(EXT_LIBRARY3)
	g++ -o  $(MAIN7).exe $(OBJECTS7) $(EXT_LIBRARY3)  $(RLIB) $(FLIB)
$(MAIN7):	$(MAIN7).exe
	./$(MAIN7).exe
#=====================================================================
clean:
	(rm -f *.o *.a *~ *.exe core *.gz lmap *.out *.dvi *.aux *.log *.so)
#==============================================================================
