#===============================================================================
#  MASTER MAKEFILE in subdirectory RHadr
#  This directory does NOT belong to public distribution
#===============================================================================
#       make -f KKMakefile makflag
#       make -f KKMakefile makprod
#-------------------------------------------------------------------------------
#	make -f KKMakefile demoC-start	<==  basic demonstration program
#	make -f KKMakefile demoC-stop
#	make -f KKMakefile demoC-view		<==  preview histograms 
#===============================================================================
#  TWO WAYS OF ORGANIZING ELECTROWEAK LIBRARY INITIALIZATION.
#  If you want to READ EW formfactor from the disk (Dizet NOT linked) then
#  activate below   EXT_LIBRARY = EXT_LIBRARYa
#----------------------------------------------------------------------
MAKE    = make -f KKMakefile
line_count:
	(cat *.cxx *.h | wc -l )
#----------------------------------------------------------------------
.SUFFIXES:  .o .c .cxx .f .l  .s  .sh  .h  .a
#======================================================================
### oldies
#RPATH = /afs/cern.ch/na49/library.4/ROOT/new/i386_redhat60/root
#RPATH = /afs/cern.ch/user/j/jadachsp/private/root
#RPATH = /home/jadach/root
#  Root  libraries for linker
#RLIB=   -L$(RPATH)/lib -lCore -lCint -lHist -lGraf -lGraf3d -lGpad -lTree -lRint -lPostscript -lMatrix -lPhysics -lm -ldl -lpthread -rdynamic
#  Fortran libraries for linker
#FLIB=   -lg2c
########################################################################
###=== SLC5 on thep07
#ROOTINCDIR = /usr/local/root/include
#ROOTLIBDIR = /usr/local/root/lib
#ROOTLIBS = -lCore -lCint -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lTree -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread
#ROOTAUXLIBS = -pthread -lm -ldl -rdynamic
#FLIB = -lgfortran -L/usr/lib/gcc/x86_64-redhat-linux/4.1.2 -L/usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../lib64 -L/lib/../lib64 -L/usr/lib/../lib64 -lgfortranbegin -lm -lgcc_s
###=== SLC5 laptop
ROOTINCDIR = /usr/include/root
ROOTLIBDIR = /usr/lib64/root
ROOTLIBS = -lCore -lCint -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lTree -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread
FLIB     = -lgfortran
RLIB     = -L$(ROOTLIBDIR)/ $(ROOTLIBS) $(ROOTAUXLIBS)
#================================================================================
########### ALPHA  flags ###########
#FFLAGS  =  -O -w -c -static
#FFLAGS  =  -extend_source -qfixed=132 -qextname -O  -C -qextchk
########### collection of HP  flags ###########
### +es for 100 or more columns, +B for backslash in strings, +K  for global SAVE
#FFLAGS  =  -K +es +B -O
########### collection of IBM  flags ###########
# IBM options: fixed=100 for 100 or more columns,
#              qextname for C-style external names with underscore at the end
#FFLAGS  =  -qfixed=132 -qextname -O -C -qextchk
#FFLAGS  =  -qfixed=132 -qextname -g -C -qextchk -qinitauto=FF -qflttrap=overflow:underflow:zerodivide:invalid:enable -bloadmap:lmap
#FFLAGS  =  -qfixed=132 -qextname  -C -qextchk -O
##======================================================================
########### linux flags ###########
#FFLAGS  =  -fno-automatic -ffixed-line-length-132 -fbackslash -C -O
#####  f77 compiler
# forbid underscore completely       -fno-second-underscore
# forbid double underscore only      -fno-underscoring
FFLAGS  =  -O -g -fno-second-underscore -fno-automatic -ffixed-line-length-132 -fbackslash
F77 = g77
#======================================================================
#####  g++ compiler
# -shared -Wl,-soname
#CXXFLAGS    = -g -ansi -pedantic
#CXXFLAGS    = -O -Wall -fPIC -D_REENTRANT -I$(RPATH)/include
#CXXFLAGS    = -O  -ansi -Wall -fPIC -D_REENTRANT -I$(RPATH)/include
CXXFLAGS    =  -g -O -I$(ROOTINCDIR)
CXX         =  g++
#CXX         =  insure
#CXX         =  codewizard
CLD         =  $(CXX)
#-------------------------------------------------------
# Compile all c++, f77 and c  files
.cxx.o:
	$(CXX) $(CXXFLAGS) -c $<
.f.o:
	$(F77) $(FFLAGS) -c $<
.c.o:
	gcc -c $<
#================================================================================
SRCLIST= "../KK2f ../glibk ../jetset ../bornv "
#-----------------------------------------------------------------------
EXT_LIB1  = ../KK2f/KK2f.a
EXT_SRC1  = ../KK2f/*.f		../KK2f/*.h
EXT_LIB2  = ../glibk/glibk.a
EXT_SRC2  = ../glibk/*.f	../glibk/*.h
EXT_LIB3  = ../jetset/jetset.a
EXT_SRC3  = ../jetset/*.f
EXT_LIB4a = ../bornv/bornv-tabs.a
EXT_LIB4d = ../bornv/bornv-dizet.a
EXT_SRC4  = ../bornv/*.f	../bornv/*.h
EXT_LIB5  = ../tauola/glib.a
EXT_SRC5  = ../tauola/*.f
EXT_LIB6  = ../photos/glib.a
EXT_SRC6  = ../photos/photos.f	
EXT_LIB7  = ../dizet/dizet.a
EXT_SRC7  = ../dizet/*.f	../dizet/*.h	../bornv/*.h
###########
$(EXT_LIB1): $(EXT_SRC1)
	cd ../KK2f; $(MAKE)
$(EXT_LIB2): $(EXT_SRC2)
	cd ../glibk; $(MAKE)
$(EXT_LIB3): $(EXT_SRC3)
	cd ../jetset; $(MAKE)
$(EXT_LIB4a): $(EXT_SRC4)
	cd ../bornv; $(MAKE)
$(EXT_LIB4d): $(EXT_SRC4)
	cd ../bornv; $(MAKE)
$(EXT_LIB5): $(EXT_SRC5)
	cd ../tauola; $(MAKE)
$(EXT_LIB6): $(EXT_SRC6)
	cd ../photos; $(MAKE)
$(EXT_LIB7): $(EXT_SRC7)
	cd ../dizet; $(MAKE)
#===================================================================================================
MainP.o:  ROBOL.o ROBOL2.o KKMC.o 
KKMC.o:		KKMC.h PartLund.h
ROBOL.o:	ROBOL.h
ROBOL2.o:	ROBOL2.h
Semaph.o:	Semaph.h
PartLund.o: 	PartLund.h
#===================================================================================================
#### Make your own choice of the two choices below, see comments on two EW modes above
EXT_LIBRARYa = $(EXT_LIB1) $(EXT_LIB2) $(EXT_LIB3) $(EXT_LIB4a) $(EXT_LIB5) $(EXT_LIB6)
EXT_LIBRARYd = $(EXT_LIB1) $(EXT_LIB2) $(EXT_LIB3) $(EXT_LIB4d) $(EXT_LIB5) $(EXT_LIB6) $(EXT_LIB7)
# Note that benchmark ouputs are for EXT_LIBRARYd
EXT_LIBRARY = $(EXT_LIBRARYa)   # Dizet is NOT linked, look-up tables from disk are used
####EXT_LIBRARY = $(EXT_LIBRARYd)   # Dizet is linked, tables created in-flight during initialization
#-----------------------------------------------------------------------
COMMAND2 = MainP.exe
OBJECTS2 = MainP.o Semaph.o ROBOL.o ROBOL2.o KKMC.o PartLund.o
$(COMMAND2):                    $(OBJECTS2) $(EXT_LIBRARY)
	$(CLD) -o $@ $(LDFLAGS) $(OBJECTS2) $(EXT_LIBRARY) $(RLIB) $(FLIB)
#-----------------------------------------------------------------------
demoC-start:	$(COMMAND2)
	(cd ./demoC;  $(MAKE) start )
demoC-cont:	$(COMMAND2)
	(cd ./demoC;  $(MAKE) cont )
demoC-stop:	$(COMMAND2)
	(cd ./demoC;  $(MAKE) stop )
demoC-debug:	$(COMMAND2)
	(cd ./demoC;  $(MAKE) debug )
demoC-view:
	(cd ./demoC;  root canvas.C)
#=============================================================================
#       update production $(MAKE)files
makprod:
	(sed -e 's#<main>#MainP.exe#'   -e 's#<dset>#demoC#' -e 's#<class>#8nh#' ./makefile.production > ./demoC/KKMakefile)
#=============================================================================
# Update dependent makefiles
makflag:
	(cd ../ffbench; $(MAKE)  makflag-ext;)
mbr:
	(cd ../bornv;   $(MAKE) mbr)
default:
	(cd ../dizet;   $(MAKE) default)
#=============================================================================
clean:
	rm -f *.o; rm -f *.a; rm -f *~; rm -f *.exe
	(cd ./Plots;	$(MAKE) clean)
	(cd ./demoC;	$(MAKE) CLEAN)
	(cd ./dok;	make clean)
Clean:	clean
	rm -f *.o; rm -f *.a; rm -f *~; rm -f *.exe
	(cd ../glibk;	  $(MAKE) clean)
	(cd ../KK2f;	  $(MAKE) clean)
	(cd ../jetset;	$(MAKE) clean)
	(cd ../tauola;	$(MAKE) clean)
	(cd ../photos;	$(MAKE) clean)
	(cd ../bornv;	  $(MAKE) clean)
	(cd ../dizet;	  $(MAKE) clean)
	(cd ../bornv/tabtest; $(MAKE) clean)
#-----------------------------------------------------------------------
